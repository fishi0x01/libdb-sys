/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
pub const __llvm__: ::std::os::raw::c_uint = 1;
pub const __clang__: ::std::os::raw::c_uint = 1;
pub const __clang_major__: ::std::os::raw::c_uint = 3;
pub const __clang_minor__: ::std::os::raw::c_uint = 5;
pub const __clang_patchlevel__: ::std::os::raw::c_uint = 2;
pub const __GNUC_MINOR__: ::std::os::raw::c_uint = 2;
pub const __GNUC_PATCHLEVEL__: ::std::os::raw::c_uint = 1;
pub const __GNUC__: ::std::os::raw::c_uint = 4;
pub const __GXX_ABI_VERSION: ::std::os::raw::c_uint = 1002;
pub const __ATOMIC_RELAXED: ::std::os::raw::c_uint = 0;
pub const __ATOMIC_CONSUME: ::std::os::raw::c_uint = 1;
pub const __ATOMIC_ACQUIRE: ::std::os::raw::c_uint = 2;
pub const __ATOMIC_RELEASE: ::std::os::raw::c_uint = 3;
pub const __ATOMIC_ACQ_REL: ::std::os::raw::c_uint = 4;
pub const __ATOMIC_SEQ_CST: ::std::os::raw::c_uint = 5;
pub const __PRAGMA_REDEFINE_EXTNAME: ::std::os::raw::c_uint = 1;
pub const __CONSTANT_CFSTRINGS__: ::std::os::raw::c_uint = 1;
pub const __GXX_RTTI: ::std::os::raw::c_uint = 1;
pub const __ORDER_LITTLE_ENDIAN__: ::std::os::raw::c_uint = 1234;
pub const __ORDER_BIG_ENDIAN__: ::std::os::raw::c_uint = 4321;
pub const __ORDER_PDP_ENDIAN__: ::std::os::raw::c_uint = 3412;
pub const __BYTE_ORDER__: ::std::os::raw::c_uint = 1234;
pub const __LITTLE_ENDIAN__: ::std::os::raw::c_uint = 1;
pub const _LP64: ::std::os::raw::c_uint = 1;
pub const __LP64__: ::std::os::raw::c_uint = 1;
pub const __CHAR_BIT__: ::std::os::raw::c_uint = 8;
pub const __SCHAR_MAX__: ::std::os::raw::c_uint = 127;
pub const __SHRT_MAX__: ::std::os::raw::c_uint = 32767;
pub const __INT_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __LONG_MAX__: ::std::os::raw::c_ulong = 9223372036854775807;
pub const __LONG_LONG_MAX__: ::std::os::raw::c_ulong = 9223372036854775807;
pub const __WCHAR_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __INTMAX_MAX__: ::std::os::raw::c_ulong = 9223372036854775807;
pub const __SIZE_MAX__: ::std::os::raw::c_int = -1;
pub const __UINTMAX_MAX__: ::std::os::raw::c_int = -1;
pub const __PTRDIFF_MAX__: ::std::os::raw::c_ulong = 9223372036854775807;
pub const __INTPTR_MAX__: ::std::os::raw::c_ulong = 9223372036854775807;
pub const __UINTPTR_MAX__: ::std::os::raw::c_int = -1;
pub const __SIZEOF_DOUBLE__: ::std::os::raw::c_uint = 8;
pub const __SIZEOF_FLOAT__: ::std::os::raw::c_uint = 4;
pub const __SIZEOF_INT__: ::std::os::raw::c_uint = 4;
pub const __SIZEOF_LONG__: ::std::os::raw::c_uint = 8;
pub const __SIZEOF_LONG_DOUBLE__: ::std::os::raw::c_uint = 16;
pub const __SIZEOF_LONG_LONG__: ::std::os::raw::c_uint = 8;
pub const __SIZEOF_POINTER__: ::std::os::raw::c_uint = 8;
pub const __SIZEOF_SHORT__: ::std::os::raw::c_uint = 2;
pub const __SIZEOF_PTRDIFF_T__: ::std::os::raw::c_uint = 8;
pub const __SIZEOF_SIZE_T__: ::std::os::raw::c_uint = 8;
pub const __SIZEOF_WCHAR_T__: ::std::os::raw::c_uint = 4;
pub const __SIZEOF_WINT_T__: ::std::os::raw::c_uint = 4;
pub const __SIZEOF_INT128__: ::std::os::raw::c_uint = 16;
pub const __INTMAX_WIDTH__: ::std::os::raw::c_uint = 64;
pub const __PTRDIFF_WIDTH__: ::std::os::raw::c_uint = 64;
pub const __INTPTR_WIDTH__: ::std::os::raw::c_uint = 64;
pub const __SIZE_WIDTH__: ::std::os::raw::c_uint = 64;
pub const __WCHAR_WIDTH__: ::std::os::raw::c_uint = 32;
pub const __WINT_WIDTH__: ::std::os::raw::c_uint = 32;
pub const __SIG_ATOMIC_WIDTH__: ::std::os::raw::c_uint = 32;
pub const __SIG_ATOMIC_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __UINTMAX_WIDTH__: ::std::os::raw::c_uint = 64;
pub const __UINTPTR_WIDTH__: ::std::os::raw::c_uint = 64;
pub const __FLT_HAS_DENORM__: ::std::os::raw::c_uint = 1;
pub const __FLT_DIG__: ::std::os::raw::c_uint = 6;
pub const __FLT_HAS_INFINITY__: ::std::os::raw::c_uint = 1;
pub const __FLT_HAS_QUIET_NAN__: ::std::os::raw::c_uint = 1;
pub const __FLT_MANT_DIG__: ::std::os::raw::c_uint = 24;
pub const __FLT_MAX_10_EXP__: ::std::os::raw::c_uint = 38;
pub const __FLT_MAX_EXP__: ::std::os::raw::c_uint = 128;
pub const __FLT_MIN_10_EXP__: ::std::os::raw::c_int = -37;
pub const __FLT_MIN_EXP__: ::std::os::raw::c_int = -125;
pub const __DBL_HAS_DENORM__: ::std::os::raw::c_uint = 1;
pub const __DBL_DIG__: ::std::os::raw::c_uint = 15;
pub const __DBL_HAS_INFINITY__: ::std::os::raw::c_uint = 1;
pub const __DBL_HAS_QUIET_NAN__: ::std::os::raw::c_uint = 1;
pub const __DBL_MANT_DIG__: ::std::os::raw::c_uint = 53;
pub const __DBL_MAX_10_EXP__: ::std::os::raw::c_uint = 308;
pub const __DBL_MAX_EXP__: ::std::os::raw::c_uint = 1024;
pub const __DBL_MIN_10_EXP__: ::std::os::raw::c_int = -307;
pub const __DBL_MIN_EXP__: ::std::os::raw::c_int = -1021;
pub const __LDBL_HAS_DENORM__: ::std::os::raw::c_uint = 1;
pub const __LDBL_DIG__: ::std::os::raw::c_uint = 18;
pub const __LDBL_HAS_INFINITY__: ::std::os::raw::c_uint = 1;
pub const __LDBL_HAS_QUIET_NAN__: ::std::os::raw::c_uint = 1;
pub const __LDBL_MANT_DIG__: ::std::os::raw::c_uint = 64;
pub const __LDBL_MAX_10_EXP__: ::std::os::raw::c_uint = 4932;
pub const __LDBL_MAX_EXP__: ::std::os::raw::c_uint = 16384;
pub const __LDBL_MIN_10_EXP__: ::std::os::raw::c_int = -4931;
pub const __LDBL_MIN_EXP__: ::std::os::raw::c_int = -16381;
pub const __POINTER_WIDTH__: ::std::os::raw::c_uint = 64;
pub const __WINT_UNSIGNED__: ::std::os::raw::c_uint = 1;
pub const __UINT8_MAX__: ::std::os::raw::c_uint = 255;
pub const __INT8_MAX__: ::std::os::raw::c_uint = 127;
pub const __UINT16_MAX__: ::std::os::raw::c_uint = 65535;
pub const __INT16_MAX__: ::std::os::raw::c_uint = 32767;
pub const __UINT32_MAX__: ::std::os::raw::c_uint = 4294967295;
pub const __INT32_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __UINT64_MAX__: ::std::os::raw::c_int = -1;
pub const __INT64_MAX__: ::std::os::raw::c_ulong = 9223372036854775807;
pub const __INT_LEAST8_MAX__: ::std::os::raw::c_uint = 127;
pub const __UINT_LEAST8_MAX__: ::std::os::raw::c_uint = 255;
pub const __INT_LEAST16_MAX__: ::std::os::raw::c_uint = 32767;
pub const __UINT_LEAST16_MAX__: ::std::os::raw::c_uint = 65535;
pub const __INT_LEAST32_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __UINT_LEAST32_MAX__: ::std::os::raw::c_uint = 4294967295;
pub const __INT_LEAST64_MAX__: ::std::os::raw::c_ulong = 9223372036854775807;
pub const __UINT_LEAST64_MAX__: ::std::os::raw::c_int = -1;
pub const __INT_FAST8_MAX__: ::std::os::raw::c_uint = 127;
pub const __UINT_FAST8_MAX__: ::std::os::raw::c_uint = 255;
pub const __INT_FAST16_MAX__: ::std::os::raw::c_uint = 32767;
pub const __UINT_FAST16_MAX__: ::std::os::raw::c_uint = 65535;
pub const __INT_FAST32_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __UINT_FAST32_MAX__: ::std::os::raw::c_uint = 4294967295;
pub const __INT_FAST64_MAX__: ::std::os::raw::c_ulong = 9223372036854775807;
pub const __UINT_FAST64_MAX__: ::std::os::raw::c_int = -1;
pub const __FINITE_MATH_ONLY__: ::std::os::raw::c_uint = 0;
pub const __GNUC_STDC_INLINE__: ::std::os::raw::c_uint = 1;
pub const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL: ::std::os::raw::c_uint = 1;
pub const __GCC_ATOMIC_BOOL_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __GCC_ATOMIC_CHAR_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __GCC_ATOMIC_CHAR16_T_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __GCC_ATOMIC_CHAR32_T_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __GCC_ATOMIC_WCHAR_T_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __GCC_ATOMIC_SHORT_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __GCC_ATOMIC_INT_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __GCC_ATOMIC_LONG_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __GCC_ATOMIC_LLONG_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __GCC_ATOMIC_POINTER_LOCK_FREE: ::std::os::raw::c_uint = 2;
pub const __NO_INLINE__: ::std::os::raw::c_uint = 1;
pub const __FLT_EVAL_METHOD__: ::std::os::raw::c_uint = 0;
pub const __FLT_RADIX__: ::std::os::raw::c_uint = 2;
pub const __DECIMAL_DIG__: ::std::os::raw::c_uint = 21;
pub const __amd64__: ::std::os::raw::c_uint = 1;
pub const __amd64: ::std::os::raw::c_uint = 1;
pub const __x86_64: ::std::os::raw::c_uint = 1;
pub const __x86_64__: ::std::os::raw::c_uint = 1;
pub const __k8: ::std::os::raw::c_uint = 1;
pub const __k8__: ::std::os::raw::c_uint = 1;
pub const __tune_k8__: ::std::os::raw::c_uint = 1;
pub const __NO_MATH_INLINES: ::std::os::raw::c_uint = 1;
pub const __SSE2__: ::std::os::raw::c_uint = 1;
pub const __SSE2_MATH__: ::std::os::raw::c_uint = 1;
pub const __SSE__: ::std::os::raw::c_uint = 1;
pub const __SSE_MATH__: ::std::os::raw::c_uint = 1;
pub const __MMX__: ::std::os::raw::c_uint = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1: ::std::os::raw::c_uint = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2: ::std::os::raw::c_uint = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4: ::std::os::raw::c_uint = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8: ::std::os::raw::c_uint = 1;
pub const unix: ::std::os::raw::c_uint = 1;
pub const __unix: ::std::os::raw::c_uint = 1;
pub const __unix__: ::std::os::raw::c_uint = 1;
pub const linux: ::std::os::raw::c_uint = 1;
pub const __linux: ::std::os::raw::c_uint = 1;
pub const __linux__: ::std::os::raw::c_uint = 1;
pub const __gnu_linux__: ::std::os::raw::c_uint = 1;
pub const __ELF__: ::std::os::raw::c_uint = 1;
pub const __STDC__: ::std::os::raw::c_uint = 1;
pub const __STDC_HOSTED__: ::std::os::raw::c_uint = 1;
pub const __STDC_VERSION__: ::std::os::raw::c_uint = 199901;
pub const __STDC_UTF_16__: ::std::os::raw::c_uint = 1;
pub const __STDC_UTF_32__: ::std::os::raw::c_uint = 1;
pub const _SYS_TYPES_H: ::std::os::raw::c_uint = 1;
pub const _FEATURES_H: ::std::os::raw::c_uint = 1;
pub const _DEFAULT_SOURCE: ::std::os::raw::c_uint = 1;
pub const __USE_ISOC99: ::std::os::raw::c_uint = 1;
pub const __USE_ISOC95: ::std::os::raw::c_uint = 1;
pub const __USE_POSIX_IMPLICITLY: ::std::os::raw::c_uint = 1;
pub const _POSIX_SOURCE: ::std::os::raw::c_uint = 1;
pub const _POSIX_C_SOURCE: ::std::os::raw::c_uint = 200809;
pub const __USE_POSIX: ::std::os::raw::c_uint = 1;
pub const __USE_POSIX2: ::std::os::raw::c_uint = 1;
pub const __USE_POSIX199309: ::std::os::raw::c_uint = 1;
pub const __USE_POSIX199506: ::std::os::raw::c_uint = 1;
pub const __USE_XOPEN2K: ::std::os::raw::c_uint = 1;
pub const __USE_XOPEN2K8: ::std::os::raw::c_uint = 1;
pub const _ATFILE_SOURCE: ::std::os::raw::c_uint = 1;
pub const __USE_MISC: ::std::os::raw::c_uint = 1;
pub const __USE_ATFILE: ::std::os::raw::c_uint = 1;
pub const __USE_FORTIFY_LEVEL: ::std::os::raw::c_uint = 0;
pub const _STDC_PREDEF_H: ::std::os::raw::c_uint = 1;
pub const __STDC_IEC_559__: ::std::os::raw::c_uint = 1;
pub const __STDC_IEC_559_COMPLEX__: ::std::os::raw::c_uint = 1;
pub const __STDC_ISO_10646__: ::std::os::raw::c_uint = 201103;
pub const __STDC_NO_THREADS__: ::std::os::raw::c_uint = 1;
pub const __GNU_LIBRARY__: ::std::os::raw::c_uint = 6;
pub const __GLIBC__: ::std::os::raw::c_uint = 2;
pub const __GLIBC_MINOR__: ::std::os::raw::c_uint = 21;
pub const _SYS_CDEFS_H: ::std::os::raw::c_uint = 1;
pub const __WORDSIZE: ::std::os::raw::c_uint = 64;
pub const __WORDSIZE_TIME64_COMPAT32: ::std::os::raw::c_uint = 1;
pub const __SYSCALL_WORDSIZE: ::std::os::raw::c_uint = 64;
pub const _BITS_TYPES_H: ::std::os::raw::c_uint = 1;
pub const _BITS_TYPESIZES_H: ::std::os::raw::c_uint = 1;
pub const __OFF_T_MATCHES_OFF64_T: ::std::os::raw::c_uint = 1;
pub const __INO_T_MATCHES_INO64_T: ::std::os::raw::c_uint = 1;
pub const __FD_SETSIZE: ::std::os::raw::c_uint = 1024;
pub const __clock_t_defined: ::std::os::raw::c_uint = 1;
pub const __time_t_defined: ::std::os::raw::c_uint = 1;
pub const __clockid_t_defined: ::std::os::raw::c_uint = 1;
pub const __timer_t_defined: ::std::os::raw::c_uint = 1;
pub const __BIT_TYPES_DEFINED__: ::std::os::raw::c_uint = 1;
pub const _ENDIAN_H: ::std::os::raw::c_uint = 1;
pub const __LITTLE_ENDIAN: ::std::os::raw::c_uint = 1234;
pub const __BIG_ENDIAN: ::std::os::raw::c_uint = 4321;
pub const __PDP_ENDIAN: ::std::os::raw::c_uint = 3412;
pub const __BYTE_ORDER: ::std::os::raw::c_uint = 1234;
pub const __FLOAT_WORD_ORDER: ::std::os::raw::c_uint = 1234;
pub const LITTLE_ENDIAN: ::std::os::raw::c_uint = 1234;
pub const BIG_ENDIAN: ::std::os::raw::c_uint = 4321;
pub const PDP_ENDIAN: ::std::os::raw::c_uint = 3412;
pub const BYTE_ORDER: ::std::os::raw::c_uint = 1234;
pub const _BITS_BYTESWAP_H: ::std::os::raw::c_uint = 1;
pub const _SYS_SELECT_H: ::std::os::raw::c_uint = 1;
pub const _SIGSET_H_types: ::std::os::raw::c_uint = 1;
pub const __timespec_defined: ::std::os::raw::c_uint = 1;
pub const _STRUCT_TIMEVAL: ::std::os::raw::c_uint = 1;
pub const FD_SETSIZE: ::std::os::raw::c_uint = 1024;
pub const _SYS_SYSMACROS_H: ::std::os::raw::c_uint = 1;
pub const _BITS_PTHREADTYPES_H: ::std::os::raw::c_uint = 1;
pub const __SIZEOF_PTHREAD_ATTR_T: ::std::os::raw::c_uint = 56;
pub const __SIZEOF_PTHREAD_MUTEX_T: ::std::os::raw::c_uint = 40;
pub const __SIZEOF_PTHREAD_MUTEXATTR_T: ::std::os::raw::c_uint = 4;
pub const __SIZEOF_PTHREAD_COND_T: ::std::os::raw::c_uint = 48;
pub const __SIZEOF_PTHREAD_CONDATTR_T: ::std::os::raw::c_uint = 4;
pub const __SIZEOF_PTHREAD_RWLOCK_T: ::std::os::raw::c_uint = 56;
pub const __SIZEOF_PTHREAD_RWLOCKATTR_T: ::std::os::raw::c_uint = 8;
pub const __SIZEOF_PTHREAD_BARRIER_T: ::std::os::raw::c_uint = 32;
pub const __SIZEOF_PTHREAD_BARRIERATTR_T: ::std::os::raw::c_uint = 4;
pub const __have_pthread_attr_t: ::std::os::raw::c_uint = 1;
pub const __PTHREAD_MUTEX_HAVE_PREV: ::std::os::raw::c_uint = 1;
pub const __PTHREAD_RWLOCK_INT_FLAGS_SHARED: ::std::os::raw::c_uint = 1;
pub const _INTTYPES_H: ::std::os::raw::c_uint = 1;
pub const _STDINT_H: ::std::os::raw::c_uint = 1;
pub const _BITS_WCHAR_H: ::std::os::raw::c_uint = 1;
pub const __WCHAR_MAX: ::std::os::raw::c_uint = 2147483647;
pub const __WCHAR_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT8_MIN: ::std::os::raw::c_int = -128;
pub const INT16_MIN: ::std::os::raw::c_int = -32768;
pub const INT32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT8_MAX: ::std::os::raw::c_uint = 127;
pub const INT16_MAX: ::std::os::raw::c_uint = 32767;
pub const INT32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const UINT8_MAX: ::std::os::raw::c_uint = 255;
pub const UINT16_MAX: ::std::os::raw::c_uint = 65535;
pub const UINT32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const INT_LEAST8_MIN: ::std::os::raw::c_int = -128;
pub const INT_LEAST16_MIN: ::std::os::raw::c_int = -32768;
pub const INT_LEAST32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT_LEAST8_MAX: ::std::os::raw::c_uint = 127;
pub const INT_LEAST16_MAX: ::std::os::raw::c_uint = 32767;
pub const INT_LEAST32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const UINT_LEAST8_MAX: ::std::os::raw::c_uint = 255;
pub const UINT_LEAST16_MAX: ::std::os::raw::c_uint = 65535;
pub const UINT_LEAST32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const INT_FAST8_MIN: ::std::os::raw::c_int = -128;
pub const INT_FAST16_MIN: ::std::os::raw::c_long = -9223372036854775808;
pub const INT_FAST32_MIN: ::std::os::raw::c_long = -9223372036854775808;
pub const INT_FAST8_MAX: ::std::os::raw::c_uint = 127;
pub const INT_FAST16_MAX: ::std::os::raw::c_ulong = 9223372036854775807;
pub const INT_FAST32_MAX: ::std::os::raw::c_ulong = 9223372036854775807;
pub const UINT_FAST8_MAX: ::std::os::raw::c_uint = 255;
pub const UINT_FAST16_MAX: ::std::os::raw::c_int = -1;
pub const UINT_FAST32_MAX: ::std::os::raw::c_int = -1;
pub const INTPTR_MIN: ::std::os::raw::c_long = -9223372036854775808;
pub const INTPTR_MAX: ::std::os::raw::c_ulong = 9223372036854775807;
pub const UINTPTR_MAX: ::std::os::raw::c_int = -1;
pub const PTRDIFF_MIN: ::std::os::raw::c_long = -9223372036854775808;
pub const PTRDIFF_MAX: ::std::os::raw::c_ulong = 9223372036854775807;
pub const SIG_ATOMIC_MIN: ::std::os::raw::c_int = -2147483648;
pub const SIG_ATOMIC_MAX: ::std::os::raw::c_uint = 2147483647;
pub const SIZE_MAX: ::std::os::raw::c_int = -1;
pub const WCHAR_MIN: ::std::os::raw::c_int = -2147483648;
pub const WCHAR_MAX: ::std::os::raw::c_uint = 2147483647;
pub const WINT_MIN: ::std::os::raw::c_uint = 0;
pub const WINT_MAX: ::std::os::raw::c_uint = 4294967295;
pub const ____gwchar_t_defined: ::std::os::raw::c_uint = 1;
pub const _STDIO_H: ::std::os::raw::c_uint = 1;
pub const __FILE_defined: ::std::os::raw::c_uint = 1;
pub const ____FILE_defined: ::std::os::raw::c_uint = 1;
pub const _G_config_h: ::std::os::raw::c_uint = 1;
pub const ____mbstate_t_defined: ::std::os::raw::c_uint = 1;
pub const _G_HAVE_MMAP: ::std::os::raw::c_uint = 1;
pub const _G_HAVE_MREMAP: ::std::os::raw::c_uint = 1;
pub const _G_IO_IO_FILE_VERSION: ::std::os::raw::c_uint = 131073;
pub const _G_BUFSIZ: ::std::os::raw::c_uint = 8192;
pub const _IO_BUFSIZ: ::std::os::raw::c_uint = 8192;
pub const __GNUC_VA_LIST: ::std::os::raw::c_uint = 1;
pub const _IO_UNIFIED_JUMPTABLES: ::std::os::raw::c_uint = 1;
pub const EOF: ::std::os::raw::c_int = -1;
pub const _IOS_INPUT: ::std::os::raw::c_uint = 1;
pub const _IOS_OUTPUT: ::std::os::raw::c_uint = 2;
pub const _IOS_ATEND: ::std::os::raw::c_uint = 4;
pub const _IOS_APPEND: ::std::os::raw::c_uint = 8;
pub const _IOS_TRUNC: ::std::os::raw::c_uint = 16;
pub const _IOS_NOCREATE: ::std::os::raw::c_uint = 32;
pub const _IOS_NOREPLACE: ::std::os::raw::c_uint = 64;
pub const _IOS_BIN: ::std::os::raw::c_uint = 128;
pub const _IO_MAGIC: ::std::os::raw::c_uint = 4222418944;
pub const _OLD_STDIO_MAGIC: ::std::os::raw::c_uint = 4206624768;
pub const _IO_MAGIC_MASK: ::std::os::raw::c_uint = 4294901760;
pub const _IO_USER_BUF: ::std::os::raw::c_uint = 1;
pub const _IO_UNBUFFERED: ::std::os::raw::c_uint = 2;
pub const _IO_NO_READS: ::std::os::raw::c_uint = 4;
pub const _IO_NO_WRITES: ::std::os::raw::c_uint = 8;
pub const _IO_EOF_SEEN: ::std::os::raw::c_uint = 16;
pub const _IO_ERR_SEEN: ::std::os::raw::c_uint = 32;
pub const _IO_DELETE_DONT_CLOSE: ::std::os::raw::c_uint = 64;
pub const _IO_LINKED: ::std::os::raw::c_uint = 128;
pub const _IO_IN_BACKUP: ::std::os::raw::c_uint = 256;
pub const _IO_LINE_BUF: ::std::os::raw::c_uint = 512;
pub const _IO_TIED_PUT_GET: ::std::os::raw::c_uint = 1024;
pub const _IO_CURRENTLY_PUTTING: ::std::os::raw::c_uint = 2048;
pub const _IO_IS_APPENDING: ::std::os::raw::c_uint = 4096;
pub const _IO_IS_FILEBUF: ::std::os::raw::c_uint = 8192;
pub const _IO_BAD_SEEN: ::std::os::raw::c_uint = 16384;
pub const _IO_USER_LOCK: ::std::os::raw::c_uint = 32768;
pub const _IO_FLAGS2_MMAP: ::std::os::raw::c_uint = 1;
pub const _IO_FLAGS2_NOTCANCEL: ::std::os::raw::c_uint = 2;
pub const _IO_FLAGS2_USER_WBUF: ::std::os::raw::c_uint = 8;
pub const _IO_SKIPWS: ::std::os::raw::c_uint = 1;
pub const _IO_LEFT: ::std::os::raw::c_uint = 2;
pub const _IO_RIGHT: ::std::os::raw::c_uint = 4;
pub const _IO_INTERNAL: ::std::os::raw::c_uint = 8;
pub const _IO_DEC: ::std::os::raw::c_uint = 16;
pub const _IO_OCT: ::std::os::raw::c_uint = 32;
pub const _IO_HEX: ::std::os::raw::c_uint = 64;
pub const _IO_SHOWBASE: ::std::os::raw::c_uint = 128;
pub const _IO_SHOWPOINT: ::std::os::raw::c_uint = 256;
pub const _IO_UPPERCASE: ::std::os::raw::c_uint = 512;
pub const _IO_SHOWPOS: ::std::os::raw::c_uint = 1024;
pub const _IO_SCIENTIFIC: ::std::os::raw::c_uint = 2048;
pub const _IO_FIXED: ::std::os::raw::c_uint = 4096;
pub const _IO_UNITBUF: ::std::os::raw::c_uint = 8192;
pub const _IO_STDIO: ::std::os::raw::c_uint = 16384;
pub const _IO_DONT_CLOSE: ::std::os::raw::c_uint = 32768;
pub const _IO_BOOLALPHA: ::std::os::raw::c_uint = 65536;
pub const _IOFBF: ::std::os::raw::c_uint = 0;
pub const _IOLBF: ::std::os::raw::c_uint = 1;
pub const _IONBF: ::std::os::raw::c_uint = 2;
pub const BUFSIZ: ::std::os::raw::c_uint = 8192;
pub const SEEK_SET: ::std::os::raw::c_uint = 0;
pub const SEEK_CUR: ::std::os::raw::c_uint = 1;
pub const SEEK_END: ::std::os::raw::c_uint = 2;
pub const L_tmpnam: ::std::os::raw::c_uint = 20;
pub const TMP_MAX: ::std::os::raw::c_uint = 238328;
pub const FILENAME_MAX: ::std::os::raw::c_uint = 4096;
pub const L_ctermid: ::std::os::raw::c_uint = 9;
pub const FOPEN_MAX: ::std::os::raw::c_uint = 16;
pub const _UNISTD_H: ::std::os::raw::c_uint = 1;
pub const _POSIX_VERSION: ::std::os::raw::c_uint = 200809;
pub const __POSIX2_THIS_VERSION: ::std::os::raw::c_uint = 200809;
pub const _POSIX2_VERSION: ::std::os::raw::c_uint = 200809;
pub const _POSIX2_C_BIND: ::std::os::raw::c_uint = 200809;
pub const _POSIX2_C_DEV: ::std::os::raw::c_uint = 200809;
pub const _POSIX2_SW_DEV: ::std::os::raw::c_uint = 200809;
pub const _POSIX2_LOCALEDEF: ::std::os::raw::c_uint = 200809;
pub const _XOPEN_VERSION: ::std::os::raw::c_uint = 700;
pub const _XOPEN_XCU_VERSION: ::std::os::raw::c_uint = 4;
pub const _XOPEN_XPG2: ::std::os::raw::c_uint = 1;
pub const _XOPEN_XPG3: ::std::os::raw::c_uint = 1;
pub const _XOPEN_XPG4: ::std::os::raw::c_uint = 1;
pub const _XOPEN_UNIX: ::std::os::raw::c_uint = 1;
pub const _XOPEN_CRYPT: ::std::os::raw::c_uint = 1;
pub const _XOPEN_ENH_I18N: ::std::os::raw::c_uint = 1;
pub const _XOPEN_LEGACY: ::std::os::raw::c_uint = 1;
pub const _BITS_POSIX_OPT_H: ::std::os::raw::c_uint = 1;
pub const _POSIX_JOB_CONTROL: ::std::os::raw::c_uint = 1;
pub const _POSIX_SAVED_IDS: ::std::os::raw::c_uint = 1;
pub const _POSIX_PRIORITY_SCHEDULING: ::std::os::raw::c_uint = 200809;
pub const _POSIX_SYNCHRONIZED_IO: ::std::os::raw::c_uint = 200809;
pub const _POSIX_FSYNC: ::std::os::raw::c_uint = 200809;
pub const _POSIX_MAPPED_FILES: ::std::os::raw::c_uint = 200809;
pub const _POSIX_MEMLOCK: ::std::os::raw::c_uint = 200809;
pub const _POSIX_MEMLOCK_RANGE: ::std::os::raw::c_uint = 200809;
pub const _POSIX_MEMORY_PROTECTION: ::std::os::raw::c_uint = 200809;
pub const _POSIX_CHOWN_RESTRICTED: ::std::os::raw::c_uint = 0;
pub const _POSIX_NO_TRUNC: ::std::os::raw::c_uint = 1;
pub const _XOPEN_REALTIME: ::std::os::raw::c_uint = 1;
pub const _XOPEN_REALTIME_THREADS: ::std::os::raw::c_uint = 1;
pub const _XOPEN_SHM: ::std::os::raw::c_uint = 1;
pub const _POSIX_THREADS: ::std::os::raw::c_uint = 200809;
pub const _POSIX_REENTRANT_FUNCTIONS: ::std::os::raw::c_uint = 1;
pub const _POSIX_THREAD_SAFE_FUNCTIONS: ::std::os::raw::c_uint = 200809;
pub const _POSIX_THREAD_PRIORITY_SCHEDULING: ::std::os::raw::c_uint = 200809;
pub const _POSIX_THREAD_ATTR_STACKSIZE: ::std::os::raw::c_uint = 200809;
pub const _POSIX_THREAD_ATTR_STACKADDR: ::std::os::raw::c_uint = 200809;
pub const _POSIX_THREAD_PRIO_INHERIT: ::std::os::raw::c_uint = 200809;
pub const _POSIX_THREAD_PRIO_PROTECT: ::std::os::raw::c_uint = 200809;
pub const _POSIX_THREAD_ROBUST_PRIO_INHERIT: ::std::os::raw::c_uint = 200809;
pub const _POSIX_THREAD_ROBUST_PRIO_PROTECT: ::std::os::raw::c_int = -1;
pub const _POSIX_SEMAPHORES: ::std::os::raw::c_uint = 200809;
pub const _POSIX_REALTIME_SIGNALS: ::std::os::raw::c_uint = 200809;
pub const _POSIX_ASYNCHRONOUS_IO: ::std::os::raw::c_uint = 200809;
pub const _POSIX_ASYNC_IO: ::std::os::raw::c_uint = 1;
pub const _LFS_ASYNCHRONOUS_IO: ::std::os::raw::c_uint = 1;
pub const _POSIX_PRIORITIZED_IO: ::std::os::raw::c_uint = 200809;
pub const _LFS64_ASYNCHRONOUS_IO: ::std::os::raw::c_uint = 1;
pub const _LFS_LARGEFILE: ::std::os::raw::c_uint = 1;
pub const _LFS64_LARGEFILE: ::std::os::raw::c_uint = 1;
pub const _LFS64_STDIO: ::std::os::raw::c_uint = 1;
pub const _POSIX_SHARED_MEMORY_OBJECTS: ::std::os::raw::c_uint = 200809;
pub const _POSIX_CPUTIME: ::std::os::raw::c_uint = 0;
pub const _POSIX_THREAD_CPUTIME: ::std::os::raw::c_uint = 0;
pub const _POSIX_REGEXP: ::std::os::raw::c_uint = 1;
pub const _POSIX_READER_WRITER_LOCKS: ::std::os::raw::c_uint = 200809;
pub const _POSIX_SHELL: ::std::os::raw::c_uint = 1;
pub const _POSIX_TIMEOUTS: ::std::os::raw::c_uint = 200809;
pub const _POSIX_SPIN_LOCKS: ::std::os::raw::c_uint = 200809;
pub const _POSIX_SPAWN: ::std::os::raw::c_uint = 200809;
pub const _POSIX_TIMERS: ::std::os::raw::c_uint = 200809;
pub const _POSIX_BARRIERS: ::std::os::raw::c_uint = 200809;
pub const _POSIX_MESSAGE_PASSING: ::std::os::raw::c_uint = 200809;
pub const _POSIX_THREAD_PROCESS_SHARED: ::std::os::raw::c_uint = 200809;
pub const _POSIX_MONOTONIC_CLOCK: ::std::os::raw::c_uint = 0;
pub const _POSIX_CLOCK_SELECTION: ::std::os::raw::c_uint = 200809;
pub const _POSIX_ADVISORY_INFO: ::std::os::raw::c_uint = 200809;
pub const _POSIX_IPV6: ::std::os::raw::c_uint = 200809;
pub const _POSIX_RAW_SOCKETS: ::std::os::raw::c_uint = 200809;
pub const _POSIX2_CHAR_TERM: ::std::os::raw::c_uint = 200809;
pub const _POSIX_SPORADIC_SERVER: ::std::os::raw::c_int = -1;
pub const _POSIX_THREAD_SPORADIC_SERVER: ::std::os::raw::c_int = -1;
pub const _POSIX_TRACE: ::std::os::raw::c_int = -1;
pub const _POSIX_TRACE_EVENT_FILTER: ::std::os::raw::c_int = -1;
pub const _POSIX_TRACE_INHERIT: ::std::os::raw::c_int = -1;
pub const _POSIX_TRACE_LOG: ::std::os::raw::c_int = -1;
pub const _POSIX_TYPED_MEMORY_OBJECTS: ::std::os::raw::c_int = -1;
pub const _POSIX_V7_LPBIG_OFFBIG: ::std::os::raw::c_int = -1;
pub const _POSIX_V6_LPBIG_OFFBIG: ::std::os::raw::c_int = -1;
pub const _XBS5_LPBIG_OFFBIG: ::std::os::raw::c_int = -1;
pub const _POSIX_V7_LP64_OFF64: ::std::os::raw::c_uint = 1;
pub const _POSIX_V6_LP64_OFF64: ::std::os::raw::c_uint = 1;
pub const _XBS5_LP64_OFF64: ::std::os::raw::c_uint = 1;
pub const STDIN_FILENO: ::std::os::raw::c_uint = 0;
pub const STDOUT_FILENO: ::std::os::raw::c_uint = 1;
pub const STDERR_FILENO: ::std::os::raw::c_uint = 2;
pub const R_OK: ::std::os::raw::c_uint = 4;
pub const W_OK: ::std::os::raw::c_uint = 2;
pub const X_OK: ::std::os::raw::c_uint = 1;
pub const F_OK: ::std::os::raw::c_uint = 0;
pub const L_SET: ::std::os::raw::c_uint = 0;
pub const L_INCR: ::std::os::raw::c_uint = 1;
pub const L_XTND: ::std::os::raw::c_uint = 2;
pub const F_ULOCK: ::std::os::raw::c_uint = 0;
pub const F_LOCK: ::std::os::raw::c_uint = 1;
pub const F_TLOCK: ::std::os::raw::c_uint = 2;
pub const F_TEST: ::std::os::raw::c_uint = 3;
pub const _PTHREAD_H: ::std::os::raw::c_uint = 1;
pub const _SCHED_H: ::std::os::raw::c_uint = 1;
pub const SCHED_OTHER: ::std::os::raw::c_uint = 0;
pub const SCHED_FIFO: ::std::os::raw::c_uint = 1;
pub const SCHED_RR: ::std::os::raw::c_uint = 2;
pub const __defined_schedparam: ::std::os::raw::c_uint = 1;
pub const __CPU_SETSIZE: ::std::os::raw::c_uint = 1024;
pub const _TIME_H: ::std::os::raw::c_uint = 1;
pub const _BITS_TIME_H: ::std::os::raw::c_uint = 1;
pub const CLOCK_REALTIME: ::std::os::raw::c_uint = 0;
pub const CLOCK_MONOTONIC: ::std::os::raw::c_uint = 1;
pub const CLOCK_PROCESS_CPUTIME_ID: ::std::os::raw::c_uint = 2;
pub const CLOCK_THREAD_CPUTIME_ID: ::std::os::raw::c_uint = 3;
pub const CLOCK_MONOTONIC_RAW: ::std::os::raw::c_uint = 4;
pub const CLOCK_REALTIME_COARSE: ::std::os::raw::c_uint = 5;
pub const CLOCK_MONOTONIC_COARSE: ::std::os::raw::c_uint = 6;
pub const CLOCK_BOOTTIME: ::std::os::raw::c_uint = 7;
pub const CLOCK_REALTIME_ALARM: ::std::os::raw::c_uint = 8;
pub const CLOCK_BOOTTIME_ALARM: ::std::os::raw::c_uint = 9;
pub const CLOCK_TAI: ::std::os::raw::c_uint = 11;
pub const TIMER_ABSTIME: ::std::os::raw::c_uint = 1;
pub const _XLOCALE_H: ::std::os::raw::c_uint = 1;
pub const _BITS_SETJMP_H: ::std::os::raw::c_uint = 1;
pub const PTHREAD_ONCE_INIT: ::std::os::raw::c_uint = 0;
pub const PTHREAD_BARRIER_SERIAL_THREAD: ::std::os::raw::c_int = -1;
pub const DB_VERSION_MAJOR: ::std::os::raw::c_uint = 4;
pub const DB_VERSION_MINOR: ::std::os::raw::c_uint = 8;
pub const DB_VERSION_PATCH: ::std::os::raw::c_uint = 30;
pub const DB_MAX_PAGES: ::std::os::raw::c_uint = 4294967295;
pub const DB_MAX_RECORDS: ::std::os::raw::c_uint = 4294967295;
pub const DB_JOINENV: ::std::os::raw::c_uint = 0;
pub const DB_DBT_APPMALLOC: ::std::os::raw::c_uint = 1;
pub const DB_DBT_BULK: ::std::os::raw::c_uint = 2;
pub const DB_DBT_DUPOK: ::std::os::raw::c_uint = 4;
pub const DB_DBT_ISSET: ::std::os::raw::c_uint = 8;
pub const DB_DBT_MALLOC: ::std::os::raw::c_uint = 16;
pub const DB_DBT_MULTIPLE: ::std::os::raw::c_uint = 32;
pub const DB_DBT_PARTIAL: ::std::os::raw::c_uint = 64;
pub const DB_DBT_REALLOC: ::std::os::raw::c_uint = 128;
pub const DB_DBT_STREAMING: ::std::os::raw::c_uint = 256;
pub const DB_DBT_USERCOPY: ::std::os::raw::c_uint = 512;
pub const DB_DBT_USERMEM: ::std::os::raw::c_uint = 1024;
pub const DB_THREADID_STRLEN: ::std::os::raw::c_uint = 128;
pub const DB_LOCKVERSION: ::std::os::raw::c_uint = 1;
pub const DB_FILE_ID_LEN: ::std::os::raw::c_uint = 20;
pub const DB_LOCK_NORUN: ::std::os::raw::c_uint = 0;
pub const DB_LOCK_DEFAULT: ::std::os::raw::c_uint = 1;
pub const DB_LOCK_EXPIRE: ::std::os::raw::c_uint = 2;
pub const DB_LOCK_MAXLOCKS: ::std::os::raw::c_uint = 3;
pub const DB_LOCK_MAXWRITE: ::std::os::raw::c_uint = 4;
pub const DB_LOCK_MINLOCKS: ::std::os::raw::c_uint = 5;
pub const DB_LOCK_MINWRITE: ::std::os::raw::c_uint = 6;
pub const DB_LOCK_OLDEST: ::std::os::raw::c_uint = 7;
pub const DB_LOCK_RANDOM: ::std::os::raw::c_uint = 8;
pub const DB_LOCK_YOUNGEST: ::std::os::raw::c_uint = 9;
pub const DB_HANDLE_LOCK: ::std::os::raw::c_uint = 1;
pub const DB_RECORD_LOCK: ::std::os::raw::c_uint = 2;
pub const DB_PAGE_LOCK: ::std::os::raw::c_uint = 3;
pub const DB_LOGVERSION: ::std::os::raw::c_uint = 16;
pub const DB_LOGVERSION_LATCHING: ::std::os::raw::c_uint = 15;
pub const DB_LOGCHKSUM: ::std::os::raw::c_uint = 12;
pub const DB_LOGOLDVER: ::std::os::raw::c_uint = 8;
pub const DB_LOGMAGIC: ::std::os::raw::c_uint = 264584;
pub const DB_user_BEGIN: ::std::os::raw::c_uint = 10000;
pub const DB_debug_FLAG: ::std::os::raw::c_uint = 2147483648;
pub const DB_LOG_DISK: ::std::os::raw::c_uint = 1;
pub const DB_LOG_LOCKED: ::std::os::raw::c_uint = 2;
pub const DB_LOG_SILENT_ERR: ::std::os::raw::c_uint = 4;
pub const MP_FILEID_SET: ::std::os::raw::c_uint = 1;
pub const MP_FLUSH: ::std::os::raw::c_uint = 2;
pub const MP_MULTIVERSION: ::std::os::raw::c_uint = 4;
pub const MP_OPEN_CALLED: ::std::os::raw::c_uint = 8;
pub const MP_READONLY: ::std::os::raw::c_uint = 16;
pub const MP_DUMMY: ::std::os::raw::c_uint = 32;
pub const DB_TXNVERSION: ::std::os::raw::c_uint = 1;
pub const TXN_CHILDCOMMIT: ::std::os::raw::c_uint = 1;
pub const TXN_CDSGROUP: ::std::os::raw::c_uint = 2;
pub const TXN_COMPENSATE: ::std::os::raw::c_uint = 4;
pub const TXN_DEADLOCK: ::std::os::raw::c_uint = 8;
pub const TXN_LOCKTIMEOUT: ::std::os::raw::c_uint = 16;
pub const TXN_MALLOC: ::std::os::raw::c_uint = 32;
pub const TXN_NOSYNC: ::std::os::raw::c_uint = 64;
pub const TXN_NOWAIT: ::std::os::raw::c_uint = 128;
pub const TXN_PRIVATE: ::std::os::raw::c_uint = 256;
pub const TXN_READ_COMMITTED: ::std::os::raw::c_uint = 512;
pub const TXN_READ_UNCOMMITTED: ::std::os::raw::c_uint = 1024;
pub const TXN_RESTORED: ::std::os::raw::c_uint = 2048;
pub const TXN_SNAPSHOT: ::std::os::raw::c_uint = 4096;
pub const TXN_SYNC: ::std::os::raw::c_uint = 8192;
pub const TXN_WRITE_NOSYNC: ::std::os::raw::c_uint = 16384;
pub const TXN_SYNC_FLAGS: ::std::os::raw::c_uint = 24640;
pub const DB_GID_SIZE: ::std::os::raw::c_uint = 128;
pub const TXN_ABORTED: ::std::os::raw::c_uint = 1;
pub const TXN_COMMITTED: ::std::os::raw::c_uint = 2;
pub const TXN_PREPARED: ::std::os::raw::c_uint = 3;
pub const TXN_RUNNING: ::std::os::raw::c_uint = 4;
pub const DB_EID_BROADCAST: ::std::os::raw::c_int = -1;
pub const DB_EID_INVALID: ::std::os::raw::c_int = -2;
pub const DB_REP_DEFAULT_PRIORITY: ::std::os::raw::c_uint = 100;
pub const DB_REPMGR_ACKS_ALL: ::std::os::raw::c_uint = 1;
pub const DB_REPMGR_ACKS_ALL_PEERS: ::std::os::raw::c_uint = 2;
pub const DB_REPMGR_ACKS_NONE: ::std::os::raw::c_uint = 3;
pub const DB_REPMGR_ACKS_ONE: ::std::os::raw::c_uint = 4;
pub const DB_REPMGR_ACKS_ONE_PEER: ::std::os::raw::c_uint = 5;
pub const DB_REPMGR_ACKS_QUORUM: ::std::os::raw::c_uint = 6;
pub const DB_REP_ACK_TIMEOUT: ::std::os::raw::c_uint = 1;
pub const DB_REP_CHECKPOINT_DELAY: ::std::os::raw::c_uint = 2;
pub const DB_REP_CONNECTION_RETRY: ::std::os::raw::c_uint = 3;
pub const DB_REP_ELECTION_RETRY: ::std::os::raw::c_uint = 4;
pub const DB_REP_ELECTION_TIMEOUT: ::std::os::raw::c_uint = 5;
pub const DB_REP_FULL_ELECTION_TIMEOUT: ::std::os::raw::c_uint = 6;
pub const DB_REP_HEARTBEAT_MONITOR: ::std::os::raw::c_uint = 7;
pub const DB_REP_HEARTBEAT_SEND: ::std::os::raw::c_uint = 8;
pub const DB_REP_LEASE_TIMEOUT: ::std::os::raw::c_uint = 9;
pub const DB_EVENT_NO_SUCH_EVENT: ::std::os::raw::c_uint = 0;
pub const DB_EVENT_PANIC: ::std::os::raw::c_uint = 1;
pub const DB_EVENT_REG_ALIVE: ::std::os::raw::c_uint = 2;
pub const DB_EVENT_REG_PANIC: ::std::os::raw::c_uint = 3;
pub const DB_EVENT_REP_CLIENT: ::std::os::raw::c_uint = 4;
pub const DB_EVENT_REP_ELECTED: ::std::os::raw::c_uint = 5;
pub const DB_EVENT_REP_MASTER: ::std::os::raw::c_uint = 6;
pub const DB_EVENT_REP_NEWMASTER: ::std::os::raw::c_uint = 7;
pub const DB_EVENT_REP_PERM_FAILED: ::std::os::raw::c_uint = 8;
pub const DB_EVENT_REP_STARTUPDONE: ::std::os::raw::c_uint = 9;
pub const DB_EVENT_WRITE_FAILED: ::std::os::raw::c_uint = 10;
pub const DB_REPMGR_CONNECTED: ::std::os::raw::c_uint = 1;
pub const DB_REPMGR_DISCONNECTED: ::std::os::raw::c_uint = 2;
pub const DB_RENAMEMAGIC: ::std::os::raw::c_uint = 198656;
pub const DB_BTREEVERSION: ::std::os::raw::c_uint = 9;
pub const DB_BTREEOLDVER: ::std::os::raw::c_uint = 8;
pub const DB_BTREEMAGIC: ::std::os::raw::c_uint = 340322;
pub const DB_HASHVERSION: ::std::os::raw::c_uint = 9;
pub const DB_HASHOLDVER: ::std::os::raw::c_uint = 7;
pub const DB_HASHMAGIC: ::std::os::raw::c_uint = 398689;
pub const DB_QAMVERSION: ::std::os::raw::c_uint = 4;
pub const DB_QAMOLDVER: ::std::os::raw::c_uint = 3;
pub const DB_QAMMAGIC: ::std::os::raw::c_uint = 270931;
pub const DB_SEQUENCE_VERSION: ::std::os::raw::c_uint = 2;
pub const DB_SEQUENCE_OLDVER: ::std::os::raw::c_uint = 1;
pub const DB_AFTER: ::std::os::raw::c_uint = 1;
pub const DB_APPEND: ::std::os::raw::c_uint = 2;
pub const DB_BEFORE: ::std::os::raw::c_uint = 3;
pub const DB_CONSUME: ::std::os::raw::c_uint = 4;
pub const DB_CONSUME_WAIT: ::std::os::raw::c_uint = 5;
pub const DB_CURRENT: ::std::os::raw::c_uint = 6;
pub const DB_FIRST: ::std::os::raw::c_uint = 7;
pub const DB_GET_BOTH: ::std::os::raw::c_uint = 8;
pub const DB_GET_BOTHC: ::std::os::raw::c_uint = 9;
pub const DB_GET_BOTH_RANGE: ::std::os::raw::c_uint = 10;
pub const DB_GET_RECNO: ::std::os::raw::c_uint = 11;
pub const DB_JOIN_ITEM: ::std::os::raw::c_uint = 12;
pub const DB_KEYFIRST: ::std::os::raw::c_uint = 13;
pub const DB_KEYLAST: ::std::os::raw::c_uint = 14;
pub const DB_LAST: ::std::os::raw::c_uint = 15;
pub const DB_NEXT: ::std::os::raw::c_uint = 16;
pub const DB_NEXT_DUP: ::std::os::raw::c_uint = 17;
pub const DB_NEXT_NODUP: ::std::os::raw::c_uint = 18;
pub const DB_NODUPDATA: ::std::os::raw::c_uint = 19;
pub const DB_NOOVERWRITE: ::std::os::raw::c_uint = 20;
pub const DB_NOSYNC: ::std::os::raw::c_uint = 21;
pub const DB_OVERWRITE_DUP: ::std::os::raw::c_uint = 22;
pub const DB_POSITION: ::std::os::raw::c_uint = 23;
pub const DB_PREV: ::std::os::raw::c_uint = 24;
pub const DB_PREV_DUP: ::std::os::raw::c_uint = 25;
pub const DB_PREV_NODUP: ::std::os::raw::c_uint = 26;
pub const DB_SET: ::std::os::raw::c_uint = 27;
pub const DB_SET_RANGE: ::std::os::raw::c_uint = 28;
pub const DB_SET_RECNO: ::std::os::raw::c_uint = 29;
pub const DB_UPDATE_SECONDARY: ::std::os::raw::c_uint = 30;
pub const DB_SET_LTE: ::std::os::raw::c_uint = 31;
pub const DB_GET_BOTH_LTE: ::std::os::raw::c_uint = 32;
pub const DB_OPFLAGS_MASK: ::std::os::raw::c_uint = 255;
pub const DB_BUFFER_SMALL: ::std::os::raw::c_int = -30999;
pub const DB_DONOTINDEX: ::std::os::raw::c_int = -30998;
pub const DB_FOREIGN_CONFLICT: ::std::os::raw::c_int = -30997;
pub const DB_KEYEMPTY: ::std::os::raw::c_int = -30996;
pub const DB_KEYEXIST: ::std::os::raw::c_int = -30995;
pub const DB_LOCK_DEADLOCK: ::std::os::raw::c_int = -30994;
pub const DB_LOCK_NOTGRANTED: ::std::os::raw::c_int = -30993;
pub const DB_LOG_BUFFER_FULL: ::std::os::raw::c_int = -30992;
pub const DB_NOSERVER: ::std::os::raw::c_int = -30991;
pub const DB_NOSERVER_HOME: ::std::os::raw::c_int = -30990;
pub const DB_NOSERVER_ID: ::std::os::raw::c_int = -30989;
pub const DB_NOTFOUND: ::std::os::raw::c_int = -30988;
pub const DB_OLD_VERSION: ::std::os::raw::c_int = -30987;
pub const DB_PAGE_NOTFOUND: ::std::os::raw::c_int = -30986;
pub const DB_REP_DUPMASTER: ::std::os::raw::c_int = -30985;
pub const DB_REP_HANDLE_DEAD: ::std::os::raw::c_int = -30984;
pub const DB_REP_HOLDELECTION: ::std::os::raw::c_int = -30983;
pub const DB_REP_IGNORE: ::std::os::raw::c_int = -30982;
pub const DB_REP_ISPERM: ::std::os::raw::c_int = -30981;
pub const DB_REP_JOIN_FAILURE: ::std::os::raw::c_int = -30980;
pub const DB_REP_LEASE_EXPIRED: ::std::os::raw::c_int = -30979;
pub const DB_REP_LOCKOUT: ::std::os::raw::c_int = -30978;
pub const DB_REP_NEWSITE: ::std::os::raw::c_int = -30977;
pub const DB_REP_NOTPERM: ::std::os::raw::c_int = -30976;
pub const DB_REP_UNAVAIL: ::std::os::raw::c_int = -30975;
pub const DB_RUNRECOVERY: ::std::os::raw::c_int = -30974;
pub const DB_SECONDARY_BAD: ::std::os::raw::c_int = -30973;
pub const DB_VERIFY_BAD: ::std::os::raw::c_int = -30972;
pub const DB_VERSION_MISMATCH: ::std::os::raw::c_int = -30971;
pub const DB_ALREADY_ABORTED: ::std::os::raw::c_int = -30899;
pub const DB_DELETED: ::std::os::raw::c_int = -30898;
pub const DB_EVENT_NOT_HANDLED: ::std::os::raw::c_int = -30897;
pub const DB_NEEDSPLIT: ::std::os::raw::c_int = -30896;
pub const DB_REP_BULKOVF: ::std::os::raw::c_int = -30895;
pub const DB_REP_EGENCHG: ::std::os::raw::c_int = -30894;
pub const DB_REP_LOGREADY: ::std::os::raw::c_int = -30893;
pub const DB_REP_NEWMASTER: ::std::os::raw::c_int = -30892;
pub const DB_REP_PAGEDONE: ::std::os::raw::c_int = -30891;
pub const DB_REP_PAGELOCKED: ::std::os::raw::c_int = -30890;
pub const DB_SURPRISE_KID: ::std::os::raw::c_int = -30889;
pub const DB_SWAPBYTES: ::std::os::raw::c_int = -30888;
pub const DB_TIMEOUT: ::std::os::raw::c_int = -30887;
pub const DB_TXN_CKP: ::std::os::raw::c_int = -30886;
pub const DB_VERIFY_FATAL: ::std::os::raw::c_int = -30885;
pub const DB_LOGFILEID_INVALID: ::std::os::raw::c_int = -1;
pub const DB_ASSOC_IMMUTABLE_KEY: ::std::os::raw::c_uint = 1;
pub const DB_OK_BTREE: ::std::os::raw::c_uint = 1;
pub const DB_OK_HASH: ::std::os::raw::c_uint = 2;
pub const DB_OK_QUEUE: ::std::os::raw::c_uint = 4;
pub const DB_OK_RECNO: ::std::os::raw::c_uint = 8;
pub const DB_AM_CHKSUM: ::std::os::raw::c_uint = 1;
pub const DB_AM_COMPENSATE: ::std::os::raw::c_uint = 2;
pub const DB_AM_COMPRESS: ::std::os::raw::c_uint = 4;
pub const DB_AM_CREATED: ::std::os::raw::c_uint = 8;
pub const DB_AM_CREATED_MSTR: ::std::os::raw::c_uint = 16;
pub const DB_AM_DBM_ERROR: ::std::os::raw::c_uint = 32;
pub const DB_AM_DELIMITER: ::std::os::raw::c_uint = 64;
pub const DB_AM_DISCARD: ::std::os::raw::c_uint = 128;
pub const DB_AM_DUP: ::std::os::raw::c_uint = 256;
pub const DB_AM_DUPSORT: ::std::os::raw::c_uint = 512;
pub const DB_AM_ENCRYPT: ::std::os::raw::c_uint = 1024;
pub const DB_AM_FIXEDLEN: ::std::os::raw::c_uint = 2048;
pub const DB_AM_INMEM: ::std::os::raw::c_uint = 4096;
pub const DB_AM_INORDER: ::std::os::raw::c_uint = 8192;
pub const DB_AM_IN_RENAME: ::std::os::raw::c_uint = 16384;
pub const DB_AM_NOT_DURABLE: ::std::os::raw::c_uint = 32768;
pub const DB_AM_OPEN_CALLED: ::std::os::raw::c_uint = 65536;
pub const DB_AM_PAD: ::std::os::raw::c_uint = 131072;
pub const DB_AM_PGDEF: ::std::os::raw::c_uint = 262144;
pub const DB_AM_RDONLY: ::std::os::raw::c_uint = 524288;
pub const DB_AM_READ_UNCOMMITTED: ::std::os::raw::c_uint = 1048576;
pub const DB_AM_RECNUM: ::std::os::raw::c_uint = 2097152;
pub const DB_AM_RECOVER: ::std::os::raw::c_uint = 4194304;
pub const DB_AM_RENUMBER: ::std::os::raw::c_uint = 8388608;
pub const DB_AM_REVSPLITOFF: ::std::os::raw::c_uint = 16777216;
pub const DB_AM_SECONDARY: ::std::os::raw::c_uint = 33554432;
pub const DB_AM_SNAPSHOT: ::std::os::raw::c_uint = 67108864;
pub const DB_AM_SUBDB: ::std::os::raw::c_uint = 134217728;
pub const DB_AM_SWAP: ::std::os::raw::c_uint = 268435456;
pub const DB_AM_TXN: ::std::os::raw::c_uint = 536870912;
pub const DB_AM_VERIFYING: ::std::os::raw::c_uint = 1073741824;
pub const DBC_ACTIVE: ::std::os::raw::c_uint = 1;
pub const DBC_BULK: ::std::os::raw::c_uint = 2;
pub const DBC_DONTLOCK: ::std::os::raw::c_uint = 4;
pub const DBC_DOWNREV: ::std::os::raw::c_uint = 8;
pub const DBC_DUPLICATE: ::std::os::raw::c_uint = 16;
pub const DBC_FROM_DB_GET: ::std::os::raw::c_uint = 32;
pub const DBC_MULTIPLE: ::std::os::raw::c_uint = 64;
pub const DBC_MULTIPLE_KEY: ::std::os::raw::c_uint = 128;
pub const DBC_OPD: ::std::os::raw::c_uint = 256;
pub const DBC_OWN_LID: ::std::os::raw::c_uint = 512;
pub const DBC_PARTITIONED: ::std::os::raw::c_uint = 1024;
pub const DBC_READ_COMMITTED: ::std::os::raw::c_uint = 2048;
pub const DBC_READ_UNCOMMITTED: ::std::os::raw::c_uint = 4096;
pub const DBC_RECOVER: ::std::os::raw::c_uint = 8192;
pub const DBC_RMW: ::std::os::raw::c_uint = 16384;
pub const DBC_TRANSIENT: ::std::os::raw::c_uint = 32768;
pub const DBC_WAS_READ_COMMITTED: ::std::os::raw::c_uint = 65536;
pub const DBC_WRITECURSOR: ::std::os::raw::c_uint = 131072;
pub const DBC_WRITER: ::std::os::raw::c_uint = 262144;
pub const DB_REGION_MAGIC: ::std::os::raw::c_uint = 1181847;
pub const DB_ENV_AUTO_COMMIT: ::std::os::raw::c_uint = 1;
pub const DB_ENV_CDB_ALLDB: ::std::os::raw::c_uint = 2;
pub const DB_ENV_FAILCHK: ::std::os::raw::c_uint = 4;
pub const DB_ENV_DIRECT_DB: ::std::os::raw::c_uint = 8;
pub const DB_ENV_DSYNC_DB: ::std::os::raw::c_uint = 16;
pub const DB_ENV_MULTIVERSION: ::std::os::raw::c_uint = 32;
pub const DB_ENV_NOLOCKING: ::std::os::raw::c_uint = 64;
pub const DB_ENV_NOMMAP: ::std::os::raw::c_uint = 128;
pub const DB_ENV_NOPANIC: ::std::os::raw::c_uint = 256;
pub const DB_ENV_OVERWRITE: ::std::os::raw::c_uint = 512;
pub const DB_ENV_REGION_INIT: ::std::os::raw::c_uint = 1024;
pub const DB_ENV_RPCCLIENT: ::std::os::raw::c_uint = 2048;
pub const DB_ENV_RPCCLIENT_GIVEN: ::std::os::raw::c_uint = 4096;
pub const DB_ENV_TIME_NOTGRANTED: ::std::os::raw::c_uint = 8192;
pub const DB_ENV_TXN_NOSYNC: ::std::os::raw::c_uint = 16384;
pub const DB_ENV_TXN_NOWAIT: ::std::os::raw::c_uint = 32768;
pub const DB_ENV_TXN_SNAPSHOT: ::std::os::raw::c_uint = 65536;
pub const DB_ENV_TXN_WRITE_NOSYNC: ::std::os::raw::c_uint = 131072;
pub const DB_ENV_YIELDCPU: ::std::os::raw::c_uint = 262144;
pub const DB_DBM_HSEARCH: ::std::os::raw::c_uint = 0;
pub const DB_AGGRESSIVE: ::std::os::raw::c_uint = 1;
pub const DB_ARCH_ABS: ::std::os::raw::c_uint = 1;
pub const DB_ARCH_DATA: ::std::os::raw::c_uint = 2;
pub const DB_ARCH_LOG: ::std::os::raw::c_uint = 4;
pub const DB_ARCH_REMOVE: ::std::os::raw::c_uint = 8;
pub const DB_AUTO_COMMIT: ::std::os::raw::c_uint = 256;
pub const DB_CDB_ALLDB: ::std::os::raw::c_uint = 64;
pub const DB_CHKSUM: ::std::os::raw::c_uint = 8;
pub const DB_CKP_INTERNAL: ::std::os::raw::c_uint = 2;
pub const DB_CREATE: ::std::os::raw::c_uint = 1;
pub const DB_CURSOR_BULK: ::std::os::raw::c_uint = 1;
pub const DB_CURSOR_TRANSIENT: ::std::os::raw::c_uint = 4;
pub const DB_CXX_NO_EXCEPTIONS: ::std::os::raw::c_uint = 2;
pub const DB_DIRECT: ::std::os::raw::c_uint = 16;
pub const DB_DIRECT_DB: ::std::os::raw::c_uint = 128;
pub const DB_DSYNC_DB: ::std::os::raw::c_uint = 512;
pub const DB_DUP: ::std::os::raw::c_uint = 16;
pub const DB_DUPSORT: ::std::os::raw::c_uint = 4;
pub const DB_DURABLE_UNKNOWN: ::std::os::raw::c_uint = 32;
pub const DB_ENCRYPT: ::std::os::raw::c_uint = 1;
pub const DB_ENCRYPT_AES: ::std::os::raw::c_uint = 1;
pub const DB_EXCL: ::std::os::raw::c_uint = 64;
pub const DB_EXTENT: ::std::os::raw::c_uint = 64;
pub const DB_FAILCHK: ::std::os::raw::c_uint = 32;
pub const DB_FAST_STAT: ::std::os::raw::c_uint = 1;
pub const DB_FCNTL_LOCKING: ::std::os::raw::c_uint = 2048;
pub const DB_FLUSH: ::std::os::raw::c_uint = 1;
pub const DB_FORCE: ::std::os::raw::c_uint = 1;
pub const DB_FOREIGN_ABORT: ::std::os::raw::c_uint = 1;
pub const DB_FOREIGN_CASCADE: ::std::os::raw::c_uint = 2;
pub const DB_FOREIGN_NULLIFY: ::std::os::raw::c_uint = 4;
pub const DB_FREELIST_ONLY: ::std::os::raw::c_uint = 1;
pub const DB_FREE_SPACE: ::std::os::raw::c_uint = 2;
pub const DB_IGNORE_LEASE: ::std::os::raw::c_uint = 8192;
pub const DB_IMMUTABLE_KEY: ::std::os::raw::c_uint = 2;
pub const DB_INIT_CDB: ::std::os::raw::c_uint = 64;
pub const DB_INIT_LOCK: ::std::os::raw::c_uint = 128;
pub const DB_INIT_LOG: ::std::os::raw::c_uint = 256;
pub const DB_INIT_MPOOL: ::std::os::raw::c_uint = 512;
pub const DB_INIT_REP: ::std::os::raw::c_uint = 1024;
pub const DB_INIT_TXN: ::std::os::raw::c_uint = 2048;
pub const DB_INORDER: ::std::os::raw::c_uint = 32;
pub const DB_JOIN_NOSORT: ::std::os::raw::c_uint = 1;
pub const DB_LOCKDOWN: ::std::os::raw::c_uint = 4096;
pub const DB_LOCK_NOWAIT: ::std::os::raw::c_uint = 1;
pub const DB_LOCK_RECORD: ::std::os::raw::c_uint = 2;
pub const DB_LOCK_SET_TIMEOUT: ::std::os::raw::c_uint = 4;
pub const DB_LOCK_SWITCH: ::std::os::raw::c_uint = 8;
pub const DB_LOCK_UPGRADE: ::std::os::raw::c_uint = 16;
pub const DB_LOG_AUTO_REMOVE: ::std::os::raw::c_uint = 1;
pub const DB_LOG_CHKPNT: ::std::os::raw::c_uint = 2;
pub const DB_LOG_COMMIT: ::std::os::raw::c_uint = 4;
pub const DB_LOG_DIRECT: ::std::os::raw::c_uint = 2;
pub const DB_LOG_DSYNC: ::std::os::raw::c_uint = 4;
pub const DB_LOG_IN_MEMORY: ::std::os::raw::c_uint = 8;
pub const DB_LOG_NOCOPY: ::std::os::raw::c_uint = 8;
pub const DB_LOG_NOT_DURABLE: ::std::os::raw::c_uint = 16;
pub const DB_LOG_WRNOSYNC: ::std::os::raw::c_uint = 32;
pub const DB_LOG_ZERO: ::std::os::raw::c_uint = 16;
pub const DB_MPOOL_CREATE: ::std::os::raw::c_uint = 1;
pub const DB_MPOOL_DIRTY: ::std::os::raw::c_uint = 2;
pub const DB_MPOOL_DISCARD: ::std::os::raw::c_uint = 1;
pub const DB_MPOOL_EDIT: ::std::os::raw::c_uint = 4;
pub const DB_MPOOL_FREE: ::std::os::raw::c_uint = 8;
pub const DB_MPOOL_LAST: ::std::os::raw::c_uint = 16;
pub const DB_MPOOL_NEW: ::std::os::raw::c_uint = 32;
pub const DB_MPOOL_NOFILE: ::std::os::raw::c_uint = 1;
pub const DB_MPOOL_NOLOCK: ::std::os::raw::c_uint = 2;
pub const DB_MPOOL_TRY: ::std::os::raw::c_uint = 64;
pub const DB_MPOOL_UNLINK: ::std::os::raw::c_uint = 2;
pub const DB_MULTIPLE: ::std::os::raw::c_uint = 2048;
pub const DB_MULTIPLE_KEY: ::std::os::raw::c_uint = 16384;
pub const DB_MULTIVERSION: ::std::os::raw::c_uint = 4;
pub const DB_MUTEX_ALLOCATED: ::std::os::raw::c_uint = 1;
pub const DB_MUTEX_LOCKED: ::std::os::raw::c_uint = 2;
pub const DB_MUTEX_LOGICAL_LOCK: ::std::os::raw::c_uint = 4;
pub const DB_MUTEX_PROCESS_ONLY: ::std::os::raw::c_uint = 8;
pub const DB_MUTEX_SELF_BLOCK: ::std::os::raw::c_uint = 16;
pub const DB_MUTEX_SHARED: ::std::os::raw::c_uint = 32;
pub const DB_NOLOCKING: ::std::os::raw::c_uint = 1024;
pub const DB_NOMMAP: ::std::os::raw::c_uint = 8;
pub const DB_NOORDERCHK: ::std::os::raw::c_uint = 2;
pub const DB_NOPANIC: ::std::os::raw::c_uint = 2048;
pub const DB_NO_AUTO_COMMIT: ::std::os::raw::c_uint = 4096;
pub const DB_ODDFILESIZE: ::std::os::raw::c_uint = 128;
pub const DB_ORDERCHKONLY: ::std::os::raw::c_uint = 4;
pub const DB_OVERWRITE: ::std::os::raw::c_uint = 4096;
pub const DB_PANIC_ENVIRONMENT: ::std::os::raw::c_uint = 8192;
pub const DB_PRINTABLE: ::std::os::raw::c_uint = 8;
pub const DB_PRIVATE: ::std::os::raw::c_uint = 8192;
pub const DB_PR_PAGE: ::std::os::raw::c_uint = 16;
pub const DB_PR_RECOVERYTEST: ::std::os::raw::c_uint = 32;
pub const DB_RDONLY: ::std::os::raw::c_uint = 1024;
pub const DB_RDWRMASTER: ::std::os::raw::c_uint = 8192;
pub const DB_READ_COMMITTED: ::std::os::raw::c_uint = 1024;
pub const DB_READ_UNCOMMITTED: ::std::os::raw::c_uint = 512;
pub const DB_RECNUM: ::std::os::raw::c_uint = 64;
pub const DB_RECOVER: ::std::os::raw::c_uint = 2;
pub const DB_RECOVER_FATAL: ::std::os::raw::c_uint = 16384;
pub const DB_REGION_INIT: ::std::os::raw::c_uint = 16384;
pub const DB_REGISTER: ::std::os::raw::c_uint = 32768;
pub const DB_RENUMBER: ::std::os::raw::c_uint = 128;
pub const DB_REPMGR_CONF_2SITE_STRICT: ::std::os::raw::c_uint = 1;
pub const DB_REPMGR_PEER: ::std::os::raw::c_uint = 1;
pub const DB_REP_ANYWHERE: ::std::os::raw::c_uint = 1;
pub const DB_REP_CLIENT: ::std::os::raw::c_uint = 1;
pub const DB_REP_CONF_BULK: ::std::os::raw::c_uint = 2;
pub const DB_REP_CONF_DELAYCLIENT: ::std::os::raw::c_uint = 4;
pub const DB_REP_CONF_INMEM: ::std::os::raw::c_uint = 8;
pub const DB_REP_CONF_LEASE: ::std::os::raw::c_uint = 16;
pub const DB_REP_CONF_NOAUTOINIT: ::std::os::raw::c_uint = 32;
pub const DB_REP_CONF_NOWAIT: ::std::os::raw::c_uint = 64;
pub const DB_REP_ELECTION: ::std::os::raw::c_uint = 4;
pub const DB_REP_MASTER: ::std::os::raw::c_uint = 2;
pub const DB_REP_NOBUFFER: ::std::os::raw::c_uint = 2;
pub const DB_REP_PERMANENT: ::std::os::raw::c_uint = 4;
pub const DB_REP_REREQUEST: ::std::os::raw::c_uint = 8;
pub const DB_REVSPLITOFF: ::std::os::raw::c_uint = 256;
pub const DB_RMW: ::std::os::raw::c_uint = 4096;
pub const DB_RPCCLIENT: ::std::os::raw::c_uint = 1;
pub const DB_SALVAGE: ::std::os::raw::c_uint = 64;
pub const DB_SA_SKIPFIRSTKEY: ::std::os::raw::c_uint = 128;
pub const DB_SA_UNKNOWNKEY: ::std::os::raw::c_uint = 256;
pub const DB_SEQ_DEC: ::std::os::raw::c_uint = 1;
pub const DB_SEQ_INC: ::std::os::raw::c_uint = 2;
pub const DB_SEQ_RANGE_SET: ::std::os::raw::c_uint = 4;
pub const DB_SEQ_WRAP: ::std::os::raw::c_uint = 8;
pub const DB_SEQ_WRAPPED: ::std::os::raw::c_uint = 16;
pub const DB_SET_LOCK_TIMEOUT: ::std::os::raw::c_uint = 1;
pub const DB_SET_REG_TIMEOUT: ::std::os::raw::c_uint = 4;
pub const DB_SET_TXN_NOW: ::std::os::raw::c_uint = 8;
pub const DB_SET_TXN_TIMEOUT: ::std::os::raw::c_uint = 2;
pub const DB_SHALLOW_DUP: ::std::os::raw::c_uint = 256;
pub const DB_SNAPSHOT: ::std::os::raw::c_uint = 512;
pub const DB_STAT_ALL: ::std::os::raw::c_uint = 4;
pub const DB_STAT_CLEAR: ::std::os::raw::c_uint = 1;
pub const DB_STAT_LOCK_CONF: ::std::os::raw::c_uint = 8;
pub const DB_STAT_LOCK_LOCKERS: ::std::os::raw::c_uint = 16;
pub const DB_STAT_LOCK_OBJECTS: ::std::os::raw::c_uint = 32;
pub const DB_STAT_LOCK_PARAMS: ::std::os::raw::c_uint = 64;
pub const DB_STAT_MEMP_HASH: ::std::os::raw::c_uint = 8;
pub const DB_STAT_MEMP_NOERROR: ::std::os::raw::c_uint = 16;
pub const DB_STAT_SUBSYSTEM: ::std::os::raw::c_uint = 2;
pub const DB_ST_DUPOK: ::std::os::raw::c_uint = 512;
pub const DB_ST_DUPSET: ::std::os::raw::c_uint = 1024;
pub const DB_ST_DUPSORT: ::std::os::raw::c_uint = 2048;
pub const DB_ST_IS_RECNO: ::std::os::raw::c_uint = 4096;
pub const DB_ST_OVFL_LEAF: ::std::os::raw::c_uint = 8192;
pub const DB_ST_RECNUM: ::std::os::raw::c_uint = 16384;
pub const DB_ST_RELEN: ::std::os::raw::c_uint = 32768;
pub const DB_ST_TOPLEVEL: ::std::os::raw::c_uint = 65536;
pub const DB_SYSTEM_MEM: ::std::os::raw::c_uint = 65536;
pub const DB_THREAD: ::std::os::raw::c_uint = 16;
pub const DB_TIME_NOTGRANTED: ::std::os::raw::c_uint = 32768;
pub const DB_TRUNCATE: ::std::os::raw::c_uint = 16384;
pub const DB_TXN_NOSYNC: ::std::os::raw::c_uint = 1;
pub const DB_TXN_NOT_DURABLE: ::std::os::raw::c_uint = 2;
pub const DB_TXN_NOWAIT: ::std::os::raw::c_uint = 16;
pub const DB_TXN_SNAPSHOT: ::std::os::raw::c_uint = 2;
pub const DB_TXN_SYNC: ::std::os::raw::c_uint = 4;
pub const DB_TXN_WAIT: ::std::os::raw::c_uint = 8;
pub const DB_TXN_WRITE_NOSYNC: ::std::os::raw::c_uint = 32;
pub const DB_UNREF: ::std::os::raw::c_uint = 131072;
pub const DB_UPGRADE: ::std::os::raw::c_uint = 1;
pub const DB_USE_ENVIRON: ::std::os::raw::c_uint = 4;
pub const DB_USE_ENVIRON_ROOT: ::std::os::raw::c_uint = 8;
pub const DB_VERB_DEADLOCK: ::std::os::raw::c_uint = 1;
pub const DB_VERB_FILEOPS: ::std::os::raw::c_uint = 2;
pub const DB_VERB_FILEOPS_ALL: ::std::os::raw::c_uint = 4;
pub const DB_VERB_RECOVERY: ::std::os::raw::c_uint = 8;
pub const DB_VERB_REGISTER: ::std::os::raw::c_uint = 16;
pub const DB_VERB_REPLICATION: ::std::os::raw::c_uint = 32;
pub const DB_VERB_REPMGR_CONNFAIL: ::std::os::raw::c_uint = 64;
pub const DB_VERB_REPMGR_MISC: ::std::os::raw::c_uint = 128;
pub const DB_VERB_REP_ELECT: ::std::os::raw::c_uint = 256;
pub const DB_VERB_REP_LEASE: ::std::os::raw::c_uint = 512;
pub const DB_VERB_REP_MISC: ::std::os::raw::c_uint = 1024;
pub const DB_VERB_REP_MSGS: ::std::os::raw::c_uint = 2048;
pub const DB_VERB_REP_SYNC: ::std::os::raw::c_uint = 4096;
pub const DB_VERB_REP_TEST: ::std::os::raw::c_uint = 8192;
pub const DB_VERB_WAITSFOR: ::std::os::raw::c_uint = 16384;
pub const DB_VERIFY: ::std::os::raw::c_uint = 2;
pub const DB_VERIFY_PARTITION: ::std::os::raw::c_uint = 262144;
pub const DB_WRITECURSOR: ::std::os::raw::c_uint = 8;
pub const DB_WRITELOCK: ::std::os::raw::c_uint = 16;
pub const DB_WRITEOPEN: ::std::os::raw::c_uint = 32768;
pub const DB_YIELDCPU: ::std::os::raw::c_uint = 65536;
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_char;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
impl ::std::default::Default for __fsid_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __qaddr_t = *mut __quad_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type u_char = __u_char;
pub type u_short = __u_short;
pub type u_int = __u_int;
pub type u_long = __u_long;
pub type quad_t = __quad_t;
pub type u_quad_t = __u_quad_t;
pub type fsid_t = __fsid_t;
pub type loff_t = __loff_t;
pub type ino_t = __ino_t;
pub type dev_t = __dev_t;
pub type gid_t = __gid_t;
pub type mode_t = __mode_t;
pub type nlink_t = __nlink_t;
pub type uid_t = __uid_t;
pub type off_t = __off_t;
pub type pid_t = __pid_t;
pub type id_t = __id_t;
pub type ssize_t = isize;
pub type daddr_t = __daddr_t;
pub type caddr_t = __caddr_t;
pub type key_t = __key_t;
pub type clock_t = __clock_t;
pub type time_t = __time_t;
pub type clockid_t = __clockid_t;
pub type timer_t = __timer_t;
pub type size_t = usize;
pub type ulong = ::std::os::raw::c_ulong;
pub type ushort = ::std::os::raw::c_ushort;
pub type uint_ = ::std::os::raw::c_uint;
pub type int8_t = i8;
pub type int16_t = i16;
pub type int32_t = i32;
pub type int64_t = i64;
pub type u_int8_t = ::std::os::raw::c_uchar;
pub type u_int16_t = ::std::os::raw::c_ushort;
pub type u_int32_t = ::std::os::raw::c_uint;
pub type u_int64_t = ::std::os::raw::c_ulong;
pub type register_t = ::std::os::raw::c_long;
pub type __sig_atomic_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __sigset_t {
    pub __val: [::std::os::raw::c_ulong; 16usize],
}
impl ::std::default::Default for __sigset_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type sigset_t = __sigset_t;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct timespec {
    pub tv_sec: __time_t,
    pub tv_nsec: __syscall_slong_t,
}
impl ::std::default::Default for timespec {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct timeval {
    pub tv_sec: __time_t,
    pub tv_usec: __suseconds_t,
}
impl ::std::default::Default for timeval {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type suseconds_t = __suseconds_t;
pub type __fd_mask = ::std::os::raw::c_long;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct fd_set {
    pub __fds_bits: [__fd_mask; 16usize],
}
impl ::std::default::Default for fd_set {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type fd_mask = __fd_mask;
pub type blksize_t = __blksize_t;
pub type blkcnt_t = __blkcnt_t;
pub type fsblkcnt_t = __fsblkcnt_t;
pub type fsfilcnt_t = __fsfilcnt_t;
pub type pthread_t = ::std::os::raw::c_ulong;
#[repr(C)]
#[derive(Copy)]
pub struct pthread_attr_t {
    pub _bindgen_data_: [u64; 7usize],
}
impl pthread_attr_t {
    pub unsafe fn __size(&mut self)
     -> *mut [::std::os::raw::c_char; 56usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __align(&mut self) -> *mut ::std::os::raw::c_long {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::clone::Clone for pthread_attr_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for pthread_attr_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __pthread_internal_list {
    pub __prev: *mut __pthread_internal_list,
    pub __next: *mut __pthread_internal_list,
}
impl ::std::default::Default for __pthread_internal_list {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __pthread_list_t = __pthread_internal_list;
#[repr(C)]
#[derive(Copy)]
pub struct pthread_mutex_t {
    pub _bindgen_data_: [u64; 5usize],
}
impl pthread_mutex_t {
    pub unsafe fn __data(&mut self) -> *mut __pthread_mutex_s {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __size(&mut self)
     -> *mut [::std::os::raw::c_char; 40usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __align(&mut self) -> *mut ::std::os::raw::c_long {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::clone::Clone for pthread_mutex_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for pthread_mutex_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __pthread_mutex_s {
    pub __lock: ::std::os::raw::c_int,
    pub __count: ::std::os::raw::c_uint,
    pub __owner: ::std::os::raw::c_int,
    pub __nusers: ::std::os::raw::c_uint,
    pub __kind: ::std::os::raw::c_int,
    pub __spins: ::std::os::raw::c_short,
    pub __elision: ::std::os::raw::c_short,
    pub __list: __pthread_list_t,
}
impl ::std::default::Default for __pthread_mutex_s {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct pthread_mutexattr_t {
    pub _bindgen_data_: [u32; 1usize],
}
impl pthread_mutexattr_t {
    pub unsafe fn __size(&mut self) -> *mut [::std::os::raw::c_char; 4usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __align(&mut self) -> *mut ::std::os::raw::c_int {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::default::Default for pthread_mutexattr_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct pthread_cond_t {
    pub _bindgen_data_: [u64; 6usize],
}
impl pthread_cond_t {
    pub unsafe fn __data(&mut self) -> *mut Struct_Unnamed1 {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __size(&mut self)
     -> *mut [::std::os::raw::c_char; 48usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __align(&mut self) -> *mut ::std::os::raw::c_longlong {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::clone::Clone for pthread_cond_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for pthread_cond_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed1 {
    pub __lock: ::std::os::raw::c_int,
    pub __futex: ::std::os::raw::c_uint,
    pub __total_seq: ::std::os::raw::c_ulonglong,
    pub __wakeup_seq: ::std::os::raw::c_ulonglong,
    pub __woken_seq: ::std::os::raw::c_ulonglong,
    pub __mutex: *mut ::std::os::raw::c_void,
    pub __nwaiters: ::std::os::raw::c_uint,
    pub __broadcast_seq: ::std::os::raw::c_uint,
}
impl ::std::default::Default for Struct_Unnamed1 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct pthread_condattr_t {
    pub _bindgen_data_: [u32; 1usize],
}
impl pthread_condattr_t {
    pub unsafe fn __size(&mut self) -> *mut [::std::os::raw::c_char; 4usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __align(&mut self) -> *mut ::std::os::raw::c_int {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::default::Default for pthread_condattr_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type pthread_key_t = ::std::os::raw::c_uint;
pub type pthread_once_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy)]
pub struct pthread_rwlock_t {
    pub _bindgen_data_: [u64; 7usize],
}
impl pthread_rwlock_t {
    pub unsafe fn __data(&mut self) -> *mut Struct_Unnamed2 {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __size(&mut self)
     -> *mut [::std::os::raw::c_char; 56usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __align(&mut self) -> *mut ::std::os::raw::c_long {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::clone::Clone for pthread_rwlock_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for pthread_rwlock_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed2 {
    pub __lock: ::std::os::raw::c_int,
    pub __nr_readers: ::std::os::raw::c_uint,
    pub __readers_wakeup: ::std::os::raw::c_uint,
    pub __writer_wakeup: ::std::os::raw::c_uint,
    pub __nr_readers_queued: ::std::os::raw::c_uint,
    pub __nr_writers_queued: ::std::os::raw::c_uint,
    pub __writer: ::std::os::raw::c_int,
    pub __shared: ::std::os::raw::c_int,
    pub __rwelision: ::std::os::raw::c_char,
    pub __pad1: [::std::os::raw::c_uchar; 7usize],
    pub __pad2: ::std::os::raw::c_ulong,
    pub __flags: ::std::os::raw::c_uint,
}
impl ::std::default::Default for Struct_Unnamed2 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct pthread_rwlockattr_t {
    pub _bindgen_data_: [u64; 1usize],
}
impl pthread_rwlockattr_t {
    pub unsafe fn __size(&mut self) -> *mut [::std::os::raw::c_char; 8usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __align(&mut self) -> *mut ::std::os::raw::c_long {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::default::Default for pthread_rwlockattr_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type pthread_spinlock_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct pthread_barrier_t {
    pub _bindgen_data_: [u64; 4usize],
}
impl pthread_barrier_t {
    pub unsafe fn __size(&mut self)
     -> *mut [::std::os::raw::c_char; 32usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __align(&mut self) -> *mut ::std::os::raw::c_long {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::default::Default for pthread_barrier_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct pthread_barrierattr_t {
    pub _bindgen_data_: [u32; 1usize],
}
impl pthread_barrierattr_t {
    pub unsafe fn __size(&mut self) -> *mut [::std::os::raw::c_char; 4usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __align(&mut self) -> *mut ::std::os::raw::c_int {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::default::Default for pthread_barrierattr_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type uint8_t = u8;
pub type uint16_t = u16;
pub type uint32_t = u32;
pub type uint64_t = u64;
pub type int_least8_t = ::std::os::raw::c_char;
pub type int_least16_t = ::std::os::raw::c_short;
pub type int_least32_t = ::std::os::raw::c_int;
pub type int_least64_t = ::std::os::raw::c_long;
pub type uint_least8_t = ::std::os::raw::c_uchar;
pub type uint_least16_t = ::std::os::raw::c_ushort;
pub type uint_least32_t = ::std::os::raw::c_uint;
pub type uint_least64_t = ::std::os::raw::c_ulong;
pub type int_fast8_t = ::std::os::raw::c_char;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intptr_t = isize;
pub type uintptr_t = usize;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
pub type __gwchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct imaxdiv_t {
    pub quot: ::std::os::raw::c_long,
    pub rem: ::std::os::raw::c_long,
}
impl ::std::default::Default for imaxdiv_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type ptrdiff_t = isize;
pub type wchar_t = ::std::os::raw::c_int;
pub type FILE = _IO_FILE;
pub type __FILE = _IO_FILE;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __mbstate_t {
    pub __count: ::std::os::raw::c_int,
    pub __value: Union_Unnamed3,
}
impl ::std::default::Default for __mbstate_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Union_Unnamed3 {
    pub _bindgen_data_: [u32; 1usize],
}
impl Union_Unnamed3 {
    pub unsafe fn __wch(&mut self) -> *mut ::std::os::raw::c_uint {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn __wchb(&mut self) -> *mut [::std::os::raw::c_char; 4usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::default::Default for Union_Unnamed3 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _G_fpos_t {
    pub __pos: __off_t,
    pub __state: __mbstate_t,
}
impl ::std::default::Default for _G_fpos_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _G_fpos64_t {
    pub __pos: __off64_t,
    pub __state: __mbstate_t,
}
impl ::std::default::Default for _G_fpos64_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type va_list = __gnuc_va_list;
pub type __gnuc_va_list = __builtin_va_list;
pub enum _IO_jump_t { }
pub type _IO_lock_t = ::std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _IO_marker {
    pub _next: *mut _IO_marker,
    pub _sbuf: *mut _IO_FILE,
    pub _pos: ::std::os::raw::c_int,
}
impl ::std::default::Default for _IO_marker {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum __codecvt_result {
    __codecvt_ok = 0,
    __codecvt_partial = 1,
    __codecvt_error = 2,
    __codecvt_noconv = 3,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _IO_FILE {
    pub _flags: ::std::os::raw::c_int,
    pub _IO_read_ptr: *mut ::std::os::raw::c_char,
    pub _IO_read_end: *mut ::std::os::raw::c_char,
    pub _IO_read_base: *mut ::std::os::raw::c_char,
    pub _IO_write_base: *mut ::std::os::raw::c_char,
    pub _IO_write_ptr: *mut ::std::os::raw::c_char,
    pub _IO_write_end: *mut ::std::os::raw::c_char,
    pub _IO_buf_base: *mut ::std::os::raw::c_char,
    pub _IO_buf_end: *mut ::std::os::raw::c_char,
    pub _IO_save_base: *mut ::std::os::raw::c_char,
    pub _IO_backup_base: *mut ::std::os::raw::c_char,
    pub _IO_save_end: *mut ::std::os::raw::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: ::std::os::raw::c_int,
    pub _flags2: ::std::os::raw::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: ::std::os::raw::c_ushort,
    pub _vtable_offset: ::std::os::raw::c_char,
    pub _shortbuf: [::std::os::raw::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub __pad1: *mut ::std::os::raw::c_void,
    pub __pad2: *mut ::std::os::raw::c_void,
    pub __pad3: *mut ::std::os::raw::c_void,
    pub __pad4: *mut ::std::os::raw::c_void,
    pub __pad5: size_t,
    pub _mode: ::std::os::raw::c_int,
    pub _unused2: [::std::os::raw::c_char; 20usize],
}
impl ::std::default::Default for _IO_FILE {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub enum _IO_FILE_plus { }
pub type __io_read_fn =
    ::std::option::Option<unsafe extern "C" fn(__cookie:
                                                   *mut ::std::os::raw::c_void,
                                               __buf:
                                                   *mut ::std::os::raw::c_char,
                                               __nbytes: size_t)
                              -> __ssize_t>;
pub type __io_write_fn =
    ::std::option::Option<unsafe extern "C" fn(__cookie:
                                                   *mut ::std::os::raw::c_void,
                                               __buf:
                                                   *const ::std::os::raw::c_char,
                                               __n: size_t) -> __ssize_t>;
pub type __io_seek_fn =
    ::std::option::Option<unsafe extern "C" fn(__cookie:
                                                   *mut ::std::os::raw::c_void,
                                               __pos: *mut __off64_t,
                                               __w: ::std::os::raw::c_int)
                              -> ::std::os::raw::c_int>;
pub type __io_close_fn =
    ::std::option::Option<unsafe extern "C" fn(__cookie:
                                                   *mut ::std::os::raw::c_void)
                              -> ::std::os::raw::c_int>;
pub type fpos_t = _G_fpos_t;
pub type useconds_t = __useconds_t;
pub type socklen_t = __socklen_t;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed4 {
    _PC_LINK_MAX = 0,
    _PC_MAX_CANON = 1,
    _PC_MAX_INPUT = 2,
    _PC_NAME_MAX = 3,
    _PC_PATH_MAX = 4,
    _PC_PIPE_BUF = 5,
    _PC_CHOWN_RESTRICTED = 6,
    _PC_NO_TRUNC = 7,
    _PC_VDISABLE = 8,
    _PC_SYNC_IO = 9,
    _PC_ASYNC_IO = 10,
    _PC_PRIO_IO = 11,
    _PC_SOCK_MAXBUF = 12,
    _PC_FILESIZEBITS = 13,
    _PC_REC_INCR_XFER_SIZE = 14,
    _PC_REC_MAX_XFER_SIZE = 15,
    _PC_REC_MIN_XFER_SIZE = 16,
    _PC_REC_XFER_ALIGN = 17,
    _PC_ALLOC_SIZE_MIN = 18,
    _PC_SYMLINK_MAX = 19,
    _PC_2_SYMLINKS = 20,
}
pub const _SC_IOV_MAX: Enum_Unnamed5 = Enum_Unnamed5::_SC_UIO_MAXIOV;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed5 {
    _SC_ARG_MAX = 0,
    _SC_CHILD_MAX = 1,
    _SC_CLK_TCK = 2,
    _SC_NGROUPS_MAX = 3,
    _SC_OPEN_MAX = 4,
    _SC_STREAM_MAX = 5,
    _SC_TZNAME_MAX = 6,
    _SC_JOB_CONTROL = 7,
    _SC_SAVED_IDS = 8,
    _SC_REALTIME_SIGNALS = 9,
    _SC_PRIORITY_SCHEDULING = 10,
    _SC_TIMERS = 11,
    _SC_ASYNCHRONOUS_IO = 12,
    _SC_PRIORITIZED_IO = 13,
    _SC_SYNCHRONIZED_IO = 14,
    _SC_FSYNC = 15,
    _SC_MAPPED_FILES = 16,
    _SC_MEMLOCK = 17,
    _SC_MEMLOCK_RANGE = 18,
    _SC_MEMORY_PROTECTION = 19,
    _SC_MESSAGE_PASSING = 20,
    _SC_SEMAPHORES = 21,
    _SC_SHARED_MEMORY_OBJECTS = 22,
    _SC_AIO_LISTIO_MAX = 23,
    _SC_AIO_MAX = 24,
    _SC_AIO_PRIO_DELTA_MAX = 25,
    _SC_DELAYTIMER_MAX = 26,
    _SC_MQ_OPEN_MAX = 27,
    _SC_MQ_PRIO_MAX = 28,
    _SC_VERSION = 29,
    _SC_PAGESIZE = 30,
    _SC_RTSIG_MAX = 31,
    _SC_SEM_NSEMS_MAX = 32,
    _SC_SEM_VALUE_MAX = 33,
    _SC_SIGQUEUE_MAX = 34,
    _SC_TIMER_MAX = 35,
    _SC_BC_BASE_MAX = 36,
    _SC_BC_DIM_MAX = 37,
    _SC_BC_SCALE_MAX = 38,
    _SC_BC_STRING_MAX = 39,
    _SC_COLL_WEIGHTS_MAX = 40,
    _SC_EQUIV_CLASS_MAX = 41,
    _SC_EXPR_NEST_MAX = 42,
    _SC_LINE_MAX = 43,
    _SC_RE_DUP_MAX = 44,
    _SC_CHARCLASS_NAME_MAX = 45,
    _SC_2_VERSION = 46,
    _SC_2_C_BIND = 47,
    _SC_2_C_DEV = 48,
    _SC_2_FORT_DEV = 49,
    _SC_2_FORT_RUN = 50,
    _SC_2_SW_DEV = 51,
    _SC_2_LOCALEDEF = 52,
    _SC_PII = 53,
    _SC_PII_XTI = 54,
    _SC_PII_SOCKET = 55,
    _SC_PII_INTERNET = 56,
    _SC_PII_OSI = 57,
    _SC_POLL = 58,
    _SC_SELECT = 59,
    _SC_UIO_MAXIOV = 60,
    _SC_PII_INTERNET_STREAM = 61,
    _SC_PII_INTERNET_DGRAM = 62,
    _SC_PII_OSI_COTS = 63,
    _SC_PII_OSI_CLTS = 64,
    _SC_PII_OSI_M = 65,
    _SC_T_IOV_MAX = 66,
    _SC_THREADS = 67,
    _SC_THREAD_SAFE_FUNCTIONS = 68,
    _SC_GETGR_R_SIZE_MAX = 69,
    _SC_GETPW_R_SIZE_MAX = 70,
    _SC_LOGIN_NAME_MAX = 71,
    _SC_TTY_NAME_MAX = 72,
    _SC_THREAD_DESTRUCTOR_ITERATIONS = 73,
    _SC_THREAD_KEYS_MAX = 74,
    _SC_THREAD_STACK_MIN = 75,
    _SC_THREAD_THREADS_MAX = 76,
    _SC_THREAD_ATTR_STACKADDR = 77,
    _SC_THREAD_ATTR_STACKSIZE = 78,
    _SC_THREAD_PRIORITY_SCHEDULING = 79,
    _SC_THREAD_PRIO_INHERIT = 80,
    _SC_THREAD_PRIO_PROTECT = 81,
    _SC_THREAD_PROCESS_SHARED = 82,
    _SC_NPROCESSORS_CONF = 83,
    _SC_NPROCESSORS_ONLN = 84,
    _SC_PHYS_PAGES = 85,
    _SC_AVPHYS_PAGES = 86,
    _SC_ATEXIT_MAX = 87,
    _SC_PASS_MAX = 88,
    _SC_XOPEN_VERSION = 89,
    _SC_XOPEN_XCU_VERSION = 90,
    _SC_XOPEN_UNIX = 91,
    _SC_XOPEN_CRYPT = 92,
    _SC_XOPEN_ENH_I18N = 93,
    _SC_XOPEN_SHM = 94,
    _SC_2_CHAR_TERM = 95,
    _SC_2_C_VERSION = 96,
    _SC_2_UPE = 97,
    _SC_XOPEN_XPG2 = 98,
    _SC_XOPEN_XPG3 = 99,
    _SC_XOPEN_XPG4 = 100,
    _SC_CHAR_BIT = 101,
    _SC_CHAR_MAX = 102,
    _SC_CHAR_MIN = 103,
    _SC_INT_MAX = 104,
    _SC_INT_MIN = 105,
    _SC_LONG_BIT = 106,
    _SC_WORD_BIT = 107,
    _SC_MB_LEN_MAX = 108,
    _SC_NZERO = 109,
    _SC_SSIZE_MAX = 110,
    _SC_SCHAR_MAX = 111,
    _SC_SCHAR_MIN = 112,
    _SC_SHRT_MAX = 113,
    _SC_SHRT_MIN = 114,
    _SC_UCHAR_MAX = 115,
    _SC_UINT_MAX = 116,
    _SC_ULONG_MAX = 117,
    _SC_USHRT_MAX = 118,
    _SC_NL_ARGMAX = 119,
    _SC_NL_LANGMAX = 120,
    _SC_NL_MSGMAX = 121,
    _SC_NL_NMAX = 122,
    _SC_NL_SETMAX = 123,
    _SC_NL_TEXTMAX = 124,
    _SC_XBS5_ILP32_OFF32 = 125,
    _SC_XBS5_ILP32_OFFBIG = 126,
    _SC_XBS5_LP64_OFF64 = 127,
    _SC_XBS5_LPBIG_OFFBIG = 128,
    _SC_XOPEN_LEGACY = 129,
    _SC_XOPEN_REALTIME = 130,
    _SC_XOPEN_REALTIME_THREADS = 131,
    _SC_ADVISORY_INFO = 132,
    _SC_BARRIERS = 133,
    _SC_BASE = 134,
    _SC_C_LANG_SUPPORT = 135,
    _SC_C_LANG_SUPPORT_R = 136,
    _SC_CLOCK_SELECTION = 137,
    _SC_CPUTIME = 138,
    _SC_THREAD_CPUTIME = 139,
    _SC_DEVICE_IO = 140,
    _SC_DEVICE_SPECIFIC = 141,
    _SC_DEVICE_SPECIFIC_R = 142,
    _SC_FD_MGMT = 143,
    _SC_FIFO = 144,
    _SC_PIPE = 145,
    _SC_FILE_ATTRIBUTES = 146,
    _SC_FILE_LOCKING = 147,
    _SC_FILE_SYSTEM = 148,
    _SC_MONOTONIC_CLOCK = 149,
    _SC_MULTI_PROCESS = 150,
    _SC_SINGLE_PROCESS = 151,
    _SC_NETWORKING = 152,
    _SC_READER_WRITER_LOCKS = 153,
    _SC_SPIN_LOCKS = 154,
    _SC_REGEXP = 155,
    _SC_REGEX_VERSION = 156,
    _SC_SHELL = 157,
    _SC_SIGNALS = 158,
    _SC_SPAWN = 159,
    _SC_SPORADIC_SERVER = 160,
    _SC_THREAD_SPORADIC_SERVER = 161,
    _SC_SYSTEM_DATABASE = 162,
    _SC_SYSTEM_DATABASE_R = 163,
    _SC_TIMEOUTS = 164,
    _SC_TYPED_MEMORY_OBJECTS = 165,
    _SC_USER_GROUPS = 166,
    _SC_USER_GROUPS_R = 167,
    _SC_2_PBS = 168,
    _SC_2_PBS_ACCOUNTING = 169,
    _SC_2_PBS_LOCATE = 170,
    _SC_2_PBS_MESSAGE = 171,
    _SC_2_PBS_TRACK = 172,
    _SC_SYMLOOP_MAX = 173,
    _SC_STREAMS = 174,
    _SC_2_PBS_CHECKPOINT = 175,
    _SC_V6_ILP32_OFF32 = 176,
    _SC_V6_ILP32_OFFBIG = 177,
    _SC_V6_LP64_OFF64 = 178,
    _SC_V6_LPBIG_OFFBIG = 179,
    _SC_HOST_NAME_MAX = 180,
    _SC_TRACE = 181,
    _SC_TRACE_EVENT_FILTER = 182,
    _SC_TRACE_INHERIT = 183,
    _SC_TRACE_LOG = 184,
    _SC_LEVEL1_ICACHE_SIZE = 185,
    _SC_LEVEL1_ICACHE_ASSOC = 186,
    _SC_LEVEL1_ICACHE_LINESIZE = 187,
    _SC_LEVEL1_DCACHE_SIZE = 188,
    _SC_LEVEL1_DCACHE_ASSOC = 189,
    _SC_LEVEL1_DCACHE_LINESIZE = 190,
    _SC_LEVEL2_CACHE_SIZE = 191,
    _SC_LEVEL2_CACHE_ASSOC = 192,
    _SC_LEVEL2_CACHE_LINESIZE = 193,
    _SC_LEVEL3_CACHE_SIZE = 194,
    _SC_LEVEL3_CACHE_ASSOC = 195,
    _SC_LEVEL3_CACHE_LINESIZE = 196,
    _SC_LEVEL4_CACHE_SIZE = 197,
    _SC_LEVEL4_CACHE_ASSOC = 198,
    _SC_LEVEL4_CACHE_LINESIZE = 199,
    _SC_IPV6 = 235,
    _SC_RAW_SOCKETS = 236,
    _SC_V7_ILP32_OFF32 = 237,
    _SC_V7_ILP32_OFFBIG = 238,
    _SC_V7_LP64_OFF64 = 239,
    _SC_V7_LPBIG_OFFBIG = 240,
    _SC_SS_REPL_MAX = 241,
    _SC_TRACE_EVENT_NAME_MAX = 242,
    _SC_TRACE_NAME_MAX = 243,
    _SC_TRACE_SYS_MAX = 244,
    _SC_TRACE_USER_EVENT_MAX = 245,
    _SC_XOPEN_STREAMS = 246,
    _SC_THREAD_ROBUST_PRIO_INHERIT = 247,
    _SC_THREAD_ROBUST_PRIO_PROTECT = 248,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed6 {
    _CS_PATH = 0,
    _CS_V6_WIDTH_RESTRICTED_ENVS = 1,
    _CS_GNU_LIBC_VERSION = 2,
    _CS_GNU_LIBPTHREAD_VERSION = 3,
    _CS_V5_WIDTH_RESTRICTED_ENVS = 4,
    _CS_V7_WIDTH_RESTRICTED_ENVS = 5,
    _CS_LFS_CFLAGS = 1000,
    _CS_LFS_LDFLAGS = 1001,
    _CS_LFS_LIBS = 1002,
    _CS_LFS_LINTFLAGS = 1003,
    _CS_LFS64_CFLAGS = 1004,
    _CS_LFS64_LDFLAGS = 1005,
    _CS_LFS64_LIBS = 1006,
    _CS_LFS64_LINTFLAGS = 1007,
    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,
    _CS_XBS5_ILP32_OFF32_LDFLAGS = 1101,
    _CS_XBS5_ILP32_OFF32_LIBS = 1102,
    _CS_XBS5_ILP32_OFF32_LINTFLAGS = 1103,
    _CS_XBS5_ILP32_OFFBIG_CFLAGS = 1104,
    _CS_XBS5_ILP32_OFFBIG_LDFLAGS = 1105,
    _CS_XBS5_ILP32_OFFBIG_LIBS = 1106,
    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 1107,
    _CS_XBS5_LP64_OFF64_CFLAGS = 1108,
    _CS_XBS5_LP64_OFF64_LDFLAGS = 1109,
    _CS_XBS5_LP64_OFF64_LIBS = 1110,
    _CS_XBS5_LP64_OFF64_LINTFLAGS = 1111,
    _CS_XBS5_LPBIG_OFFBIG_CFLAGS = 1112,
    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 1113,
    _CS_XBS5_LPBIG_OFFBIG_LIBS = 1114,
    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 1115,
    _CS_POSIX_V6_ILP32_OFF32_CFLAGS = 1116,
    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS = 1117,
    _CS_POSIX_V6_ILP32_OFF32_LIBS = 1118,
    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS = 1119,
    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = 1120,
    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = 1121,
    _CS_POSIX_V6_ILP32_OFFBIG_LIBS = 1122,
    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS = 1123,
    _CS_POSIX_V6_LP64_OFF64_CFLAGS = 1124,
    _CS_POSIX_V6_LP64_OFF64_LDFLAGS = 1125,
    _CS_POSIX_V6_LP64_OFF64_LIBS = 1126,
    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS = 1127,
    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = 1128,
    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = 1129,
    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS = 1130,
    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS = 1131,
    _CS_POSIX_V7_ILP32_OFF32_CFLAGS = 1132,
    _CS_POSIX_V7_ILP32_OFF32_LDFLAGS = 1133,
    _CS_POSIX_V7_ILP32_OFF32_LIBS = 1134,
    _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS = 1135,
    _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS = 1136,
    _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS = 1137,
    _CS_POSIX_V7_ILP32_OFFBIG_LIBS = 1138,
    _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS = 1139,
    _CS_POSIX_V7_LP64_OFF64_CFLAGS = 1140,
    _CS_POSIX_V7_LP64_OFF64_LDFLAGS = 1141,
    _CS_POSIX_V7_LP64_OFF64_LIBS = 1142,
    _CS_POSIX_V7_LP64_OFF64_LINTFLAGS = 1143,
    _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS = 1144,
    _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS = 1145,
    _CS_POSIX_V7_LPBIG_OFFBIG_LIBS = 1146,
    _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS = 1147,
    _CS_V6_ENV = 1148,
    _CS_V7_ENV = 1149,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct sched_param {
    pub __sched_priority: ::std::os::raw::c_int,
}
impl ::std::default::Default for sched_param {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __sched_param {
    pub __sched_priority: ::std::os::raw::c_int,
}
impl ::std::default::Default for __sched_param {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __cpu_mask = ::std::os::raw::c_ulong;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct cpu_set_t {
    pub __bits: [__cpu_mask; 16usize],
}
impl ::std::default::Default for cpu_set_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct tm {
    pub tm_sec: ::std::os::raw::c_int,
    pub tm_min: ::std::os::raw::c_int,
    pub tm_hour: ::std::os::raw::c_int,
    pub tm_mday: ::std::os::raw::c_int,
    pub tm_mon: ::std::os::raw::c_int,
    pub tm_year: ::std::os::raw::c_int,
    pub tm_wday: ::std::os::raw::c_int,
    pub tm_yday: ::std::os::raw::c_int,
    pub tm_isdst: ::std::os::raw::c_int,
    pub tm_gmtoff: ::std::os::raw::c_long,
    pub tm_zone: *const ::std::os::raw::c_char,
}
impl ::std::default::Default for tm {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct itimerspec {
    pub it_interval: timespec,
    pub it_value: timespec,
}
impl ::std::default::Default for itimerspec {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub enum sigevent { }
pub enum __locale_data { }
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __locale_struct {
    pub __locales: [*mut __locale_data; 13usize],
    pub __ctype_b: *const ::std::os::raw::c_ushort,
    pub __ctype_tolower: *const ::std::os::raw::c_int,
    pub __ctype_toupper: *const ::std::os::raw::c_int,
    pub __names: [*const ::std::os::raw::c_char; 13usize],
}
impl ::std::default::Default for __locale_struct {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __locale_t = *mut __locale_struct;
pub type locale_t = __locale_t;
pub type __jmp_buf = [::std::os::raw::c_long; 8usize];
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed7 {
    PTHREAD_CREATE_JOINABLE = 0,
    PTHREAD_CREATE_DETACHED = 1,
}
pub const PTHREAD_MUTEX_NORMAL: Enum_Unnamed8 =
    Enum_Unnamed8::PTHREAD_MUTEX_TIMED_NP;
pub const PTHREAD_MUTEX_RECURSIVE: Enum_Unnamed8 =
    Enum_Unnamed8::PTHREAD_MUTEX_RECURSIVE_NP;
pub const PTHREAD_MUTEX_ERRORCHECK: Enum_Unnamed8 =
    Enum_Unnamed8::PTHREAD_MUTEX_ERRORCHECK_NP;
pub const PTHREAD_MUTEX_DEFAULT: Enum_Unnamed8 =
    Enum_Unnamed8::PTHREAD_MUTEX_TIMED_NP;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed8 {
    PTHREAD_MUTEX_TIMED_NP = 0,
    PTHREAD_MUTEX_RECURSIVE_NP = 1,
    PTHREAD_MUTEX_ERRORCHECK_NP = 2,
    PTHREAD_MUTEX_ADAPTIVE_NP = 3,
}
pub const PTHREAD_MUTEX_STALLED_NP: Enum_Unnamed9 =
    Enum_Unnamed9::PTHREAD_MUTEX_STALLED;
pub const PTHREAD_MUTEX_ROBUST_NP: Enum_Unnamed9 =
    Enum_Unnamed9::PTHREAD_MUTEX_ROBUST;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed9 {
    PTHREAD_MUTEX_STALLED = 0,
    PTHREAD_MUTEX_ROBUST = 1,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed10 {
    PTHREAD_PRIO_NONE = 0,
    PTHREAD_PRIO_INHERIT = 1,
    PTHREAD_PRIO_PROTECT = 2,
}
pub const PTHREAD_RWLOCK_DEFAULT_NP: Enum_Unnamed11 =
    Enum_Unnamed11::PTHREAD_RWLOCK_PREFER_READER_NP;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed11 {
    PTHREAD_RWLOCK_PREFER_READER_NP = 0,
    PTHREAD_RWLOCK_PREFER_WRITER_NP = 1,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP = 2,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed12 {
    PTHREAD_INHERIT_SCHED = 0,
    PTHREAD_EXPLICIT_SCHED = 1,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed13 {
    PTHREAD_SCOPE_SYSTEM = 0,
    PTHREAD_SCOPE_PROCESS = 1,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed14 {
    PTHREAD_PROCESS_PRIVATE = 0,
    PTHREAD_PROCESS_SHARED = 1,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _pthread_cleanup_buffer {
    pub __routine: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut ::std::os::raw::c_void)>,
    pub __arg: *mut ::std::os::raw::c_void,
    pub __canceltype: ::std::os::raw::c_int,
    pub __prev: *mut _pthread_cleanup_buffer,
}
impl ::std::default::Default for _pthread_cleanup_buffer {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed15 {
    PTHREAD_CANCEL_ENABLE = 0,
    PTHREAD_CANCEL_DISABLE = 1,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed16 {
    PTHREAD_CANCEL_DEFERRED = 0,
    PTHREAD_CANCEL_ASYNCHRONOUS = 1,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __pthread_unwind_buf_t {
    pub __cancel_jmp_buf: [Struct_Unnamed17; 1usize],
    pub __pad: [*mut ::std::os::raw::c_void; 4usize],
}
impl ::std::default::Default for __pthread_unwind_buf_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed17 {
    pub __cancel_jmp_buf: __jmp_buf,
    pub __mask_was_saved: ::std::os::raw::c_int,
}
impl ::std::default::Default for Struct_Unnamed17 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __pthread_cleanup_frame {
    pub __cancel_routine: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut ::std::os::raw::c_void)>,
    pub __cancel_arg: *mut ::std::os::raw::c_void,
    pub __do_it: ::std::os::raw::c_int,
    pub __cancel_type: ::std::os::raw::c_int,
}
impl ::std::default::Default for __pthread_cleanup_frame {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub enum __jmp_buf_tag { }
pub type db_seq_t = int64_t;
pub type db_threadid_t = pthread_t;
pub type db_pgno_t = u_int32_t;
pub type db_indx_t = u_int16_t;
pub type db_recno_t = u_int32_t;
pub type db_timeout_t = u_int32_t;
pub type roff_t = uintptr_t;
pub type DB = __db;
pub type DB_BTREE_STAT = __db_bt_stat;
pub enum __db_cipher { }
pub type DB_CIPHER = __db_cipher;
pub type DB_COMPACT = __db_compact;
pub type DBT = __db_dbt;
pub type DB_DISTAB = __db_distab;
pub type DB_ENV = __db_env;
pub type DB_HASH_STAT = __db_h_stat;
pub type DB_LOCK_ILOCK = __db_ilock;
pub type DB_LOCK_HSTAT = __db_lock_hstat;
pub type DB_LOCK_PSTAT = __db_lock_pstat;
pub type DB_LOCK_STAT = __db_lock_stat;
pub type DB_LOCK = __db_lock_u;
pub enum __db_locker { }
pub type DB_LOCKER = __db_locker;
pub type DB_LOCKREQ = __db_lockreq;
pub enum __db_locktab { }
pub type DB_LOCKTAB = __db_locktab;
pub enum __db_log { }
pub type DB_LOG = __db_log;
pub type DB_LOGC = __db_log_cursor;
pub type DB_LOG_STAT = __db_log_stat;
pub type DB_LSN = __db_lsn;
pub enum __db_mpool { }
pub type DB_MPOOL = __db_mpool;
pub type DB_MPOOL_FSTAT = __db_mpool_fstat;
pub type DB_MPOOL_STAT = __db_mpool_stat;
pub type DB_MPOOLFILE = __db_mpoolfile;
pub type DB_MUTEX_STAT = __db_mutex_stat;
pub enum __db_mutex_t { }
pub type DB_MUTEX = __db_mutex_t;
pub enum __db_mutexmgr { }
pub type DB_MUTEXMGR = __db_mutexmgr;
pub type DB_PREPLIST = __db_preplist;
pub type DB_QUEUE_STAT = __db_qam_stat;
pub enum __db_rep { }
pub type DB_REP = __db_rep;
pub type DB_REP_STAT = __db_rep_stat;
pub type DB_REPMGR_SITE = __db_repmgr_site;
pub type DB_REPMGR_STAT = __db_repmgr_stat;
pub type DB_SEQ_RECORD = __db_seq_record;
pub type DB_SEQUENCE_STAT = __db_seq_stat;
pub type DB_SEQUENCE = __db_sequence;
pub enum __db_thread_info { }
pub type DB_THREAD_INFO = __db_thread_info;
pub type DB_TXN = __db_txn;
pub type DB_TXN_ACTIVE = __db_txn_active;
pub type DB_TXN_STAT = __db_txn_stat;
pub enum __db_txnmgr { }
pub type DB_TXNMGR = __db_txnmgr;
pub type DBC = __dbc;
pub enum __dbc_internal { }
pub type DBC_INTERNAL = __dbc_internal;
pub enum __env { }
pub type ENV = __env;
pub enum __fh_t { }
pub type DB_FH = __fh_t;
pub enum __fname { }
pub type FNAME = __fname;
pub type DB_KEY_RANGE = __key_range;
pub enum __mpoolfile { }
pub type MPOOLFILE = __mpoolfile;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_dbt {
    pub data: *mut ::std::os::raw::c_void,
    pub size: u_int32_t,
    pub ulen: u_int32_t,
    pub dlen: u_int32_t,
    pub doff: u_int32_t,
    pub app_data: *mut ::std::os::raw::c_void,
    pub flags: u_int32_t,
}
impl ::std::default::Default for __db_dbt {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type db_mutex_t = u_int32_t;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_mutex_stat {
    pub st_mutex_align: u_int32_t,
    pub st_mutex_tas_spins: u_int32_t,
    pub st_mutex_cnt: u_int32_t,
    pub st_mutex_free: u_int32_t,
    pub st_mutex_inuse: u_int32_t,
    pub st_mutex_inuse_max: u_int32_t,
    pub st_region_wait: uintmax_t,
    pub st_region_nowait: uintmax_t,
    pub st_regsize: roff_t,
}
impl ::std::default::Default for __db_mutex_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum db_lockmode_t {
    DB_LOCK_NG = 0,
    DB_LOCK_READ = 1,
    DB_LOCK_WRITE = 2,
    DB_LOCK_WAIT = 3,
    DB_LOCK_IWRITE = 4,
    DB_LOCK_IREAD = 5,
    DB_LOCK_IWR = 6,
    DB_LOCK_READ_UNCOMMITTED = 7,
    DB_LOCK_WWRITE = 8,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum db_lockop_t {
    DB_LOCK_DUMP = 0,
    DB_LOCK_GET = 1,
    DB_LOCK_GET_TIMEOUT = 2,
    DB_LOCK_INHERIT = 3,
    DB_LOCK_PUT = 4,
    DB_LOCK_PUT_ALL = 5,
    DB_LOCK_PUT_OBJ = 6,
    DB_LOCK_PUT_READ = 7,
    DB_LOCK_TIMEOUT = 8,
    DB_LOCK_TRADE = 9,
    DB_LOCK_UPGRADE_WRITE = 10,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum db_status_t {
    DB_LSTAT_ABORTED = 1,
    DB_LSTAT_EXPIRED = 2,
    DB_LSTAT_FREE = 3,
    DB_LSTAT_HELD = 4,
    DB_LSTAT_PENDING = 5,
    DB_LSTAT_WAITING = 6,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_lock_stat {
    pub st_id: u_int32_t,
    pub st_cur_maxid: u_int32_t,
    pub st_maxlocks: u_int32_t,
    pub st_maxlockers: u_int32_t,
    pub st_maxobjects: u_int32_t,
    pub st_partitions: u_int32_t,
    pub st_nmodes: ::std::os::raw::c_int,
    pub st_nlockers: u_int32_t,
    pub st_nlocks: u_int32_t,
    pub st_maxnlocks: u_int32_t,
    pub st_maxhlocks: u_int32_t,
    pub st_locksteals: uintmax_t,
    pub st_maxlsteals: uintmax_t,
    pub st_maxnlockers: u_int32_t,
    pub st_nobjects: u_int32_t,
    pub st_maxnobjects: u_int32_t,
    pub st_maxhobjects: u_int32_t,
    pub st_objectsteals: uintmax_t,
    pub st_maxosteals: uintmax_t,
    pub st_nrequests: uintmax_t,
    pub st_nreleases: uintmax_t,
    pub st_nupgrade: uintmax_t,
    pub st_ndowngrade: uintmax_t,
    pub st_lock_wait: uintmax_t,
    pub st_lock_nowait: uintmax_t,
    pub st_ndeadlocks: uintmax_t,
    pub st_locktimeout: db_timeout_t,
    pub st_nlocktimeouts: uintmax_t,
    pub st_txntimeout: db_timeout_t,
    pub st_ntxntimeouts: uintmax_t,
    pub st_part_wait: uintmax_t,
    pub st_part_nowait: uintmax_t,
    pub st_part_max_wait: uintmax_t,
    pub st_part_max_nowait: uintmax_t,
    pub st_objs_wait: uintmax_t,
    pub st_objs_nowait: uintmax_t,
    pub st_lockers_wait: uintmax_t,
    pub st_lockers_nowait: uintmax_t,
    pub st_region_wait: uintmax_t,
    pub st_region_nowait: uintmax_t,
    pub st_hash_len: u_int32_t,
    pub st_regsize: roff_t,
}
impl ::std::default::Default for __db_lock_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_lock_hstat {
    pub st_nrequests: uintmax_t,
    pub st_nreleases: uintmax_t,
    pub st_nupgrade: uintmax_t,
    pub st_ndowngrade: uintmax_t,
    pub st_nlocks: u_int32_t,
    pub st_maxnlocks: u_int32_t,
    pub st_nobjects: u_int32_t,
    pub st_maxnobjects: u_int32_t,
    pub st_lock_wait: uintmax_t,
    pub st_lock_nowait: uintmax_t,
    pub st_nlocktimeouts: uintmax_t,
    pub st_ntxntimeouts: uintmax_t,
    pub st_hash_len: u_int32_t,
}
impl ::std::default::Default for __db_lock_hstat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_lock_pstat {
    pub st_nlocks: u_int32_t,
    pub st_maxnlocks: u_int32_t,
    pub st_nobjects: u_int32_t,
    pub st_maxnobjects: u_int32_t,
    pub st_locksteals: uintmax_t,
    pub st_objectsteals: uintmax_t,
}
impl ::std::default::Default for __db_lock_pstat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_ilock {
    pub pgno: db_pgno_t,
    pub fileid: [u_int8_t; 20usize],
    pub type_: u_int32_t,
}
impl ::std::default::Default for __db_ilock {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_lock_u {
    pub off: roff_t,
    pub ndx: u_int32_t,
    pub gen: u_int32_t,
    pub mode: db_lockmode_t,
}
impl ::std::default::Default for __db_lock_u {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_lockreq {
    pub op: db_lockop_t,
    pub mode: db_lockmode_t,
    pub timeout: db_timeout_t,
    pub obj: *mut DBT,
    pub lock: DB_LOCK,
}
impl ::std::default::Default for __db_lockreq {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_lsn {
    pub file: u_int32_t,
    pub offset: u_int32_t,
}
impl ::std::default::Default for __db_lsn {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_log_cursor {
    pub env: *mut ENV,
    pub fhp: *mut DB_FH,
    pub lsn: DB_LSN,
    pub len: u_int32_t,
    pub prev: u_int32_t,
    pub dbt: DBT,
    pub p_lsn: DB_LSN,
    pub p_version: u_int32_t,
    pub bp: *mut u_int8_t,
    pub bp_size: u_int32_t,
    pub bp_rlen: u_int32_t,
    pub bp_lsn: DB_LSN,
    pub bp_maxrec: u_int32_t,
    pub close: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_LOGC,
                                                          arg2: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub get: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_LOGC,
                                                        arg2: *mut DB_LSN,
                                                        arg3: *mut DBT,
                                                        arg4: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub version: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                *mut DB_LOGC,
                                                            arg2:
                                                                *mut u_int32_t,
                                                            arg3: u_int32_t)
                                           -> ::std::os::raw::c_int>,
    pub flags: u_int32_t,
}
impl ::std::default::Default for __db_log_cursor {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_log_stat {
    pub st_magic: u_int32_t,
    pub st_version: u_int32_t,
    pub st_mode: ::std::os::raw::c_int,
    pub st_lg_bsize: u_int32_t,
    pub st_lg_size: u_int32_t,
    pub st_wc_bytes: u_int32_t,
    pub st_wc_mbytes: u_int32_t,
    pub st_record: uintmax_t,
    pub st_w_bytes: u_int32_t,
    pub st_w_mbytes: u_int32_t,
    pub st_wcount: uintmax_t,
    pub st_wcount_fill: uintmax_t,
    pub st_rcount: uintmax_t,
    pub st_scount: uintmax_t,
    pub st_region_wait: uintmax_t,
    pub st_region_nowait: uintmax_t,
    pub st_cur_file: u_int32_t,
    pub st_cur_offset: u_int32_t,
    pub st_disk_file: u_int32_t,
    pub st_disk_offset: u_int32_t,
    pub st_maxcommitperflush: u_int32_t,
    pub st_mincommitperflush: u_int32_t,
    pub st_regsize: roff_t,
}
impl ::std::default::Default for __db_log_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum DB_CACHE_PRIORITY {
    DB_PRIORITY_UNCHANGED = 0,
    DB_PRIORITY_VERY_LOW = 1,
    DB_PRIORITY_LOW = 2,
    DB_PRIORITY_DEFAULT = 3,
    DB_PRIORITY_HIGH = 4,
    DB_PRIORITY_VERY_HIGH = 5,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_mpoolfile {
    pub fhp: *mut DB_FH,
    pub ref_: u_int32_t,
    pub pinref: u_int32_t,
    pub q: Struct_Unnamed18,
    pub env: *mut ENV,
    pub mfp: *mut MPOOLFILE,
    pub clear_len: u_int32_t,
    pub fileid: [u_int8_t; 20usize],
    pub ftype: ::std::os::raw::c_int,
    pub lsn_offset: int32_t,
    pub gbytes: u_int32_t,
    pub bytes: u_int32_t,
    pub pgcookie: *mut DBT,
    pub priority: int32_t,
    pub addr: *mut ::std::os::raw::c_void,
    pub len: size_t,
    pub config_flags: u_int32_t,
    pub close: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                              *mut DB_MPOOLFILE,
                                                          arg2: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub get: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                            *mut DB_MPOOLFILE,
                                                        arg2: *mut db_pgno_t,
                                                        arg3: *mut DB_TXN,
                                                        arg4: u_int32_t,
                                                        arg5:
                                                            *mut ::std::os::raw::c_void)
                                       -> ::std::os::raw::c_int>,
    pub get_clear_len: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_MPOOLFILE,
                                                                  arg2:
                                                                      *mut u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub get_fileid: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_MPOOLFILE,
                                                               arg2:
                                                                   *mut u_int8_t)
                                              -> ::std::os::raw::c_int>,
    pub get_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_MPOOLFILE,
                                                              arg2:
                                                                  *mut u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub get_ftype: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_MPOOLFILE,
                                                              arg2:
                                                                  *mut ::std::os::raw::c_int)
                                             -> ::std::os::raw::c_int>,
    pub get_last_pgno: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_MPOOLFILE,
                                                                  arg2:
                                                                      *mut db_pgno_t)
                                                 -> ::std::os::raw::c_int>,
    pub get_lsn_offset: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_MPOOLFILE,
                                                                   arg2:
                                                                       *mut int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub get_maxsize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_MPOOLFILE,
                                                                arg2:
                                                                    *mut u_int32_t,
                                                                arg3:
                                                                    *mut u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub get_pgcookie: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_MPOOLFILE,
                                                                 arg2:
                                                                     *mut DBT)
                                                -> ::std::os::raw::c_int>,
    pub get_priority: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_MPOOLFILE,
                                                                 arg2:
                                                                     *mut DB_CACHE_PRIORITY)
                                                -> ::std::os::raw::c_int>,
    pub open: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                             *mut DB_MPOOLFILE,
                                                         arg2:
                                                             *const ::std::os::raw::c_char,
                                                         arg3: u_int32_t,
                                                         arg4:
                                                             ::std::os::raw::c_int,
                                                         arg5: size_t)
                                        -> ::std::os::raw::c_int>,
    pub put: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                            *mut DB_MPOOLFILE,
                                                        arg2:
                                                            *mut ::std::os::raw::c_void,
                                                        arg3:
                                                            DB_CACHE_PRIORITY,
                                                        arg4: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub set_clear_len: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_MPOOLFILE,
                                                                  arg2:
                                                                      u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub set_fileid: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_MPOOLFILE,
                                                               arg2:
                                                                   *mut u_int8_t)
                                              -> ::std::os::raw::c_int>,
    pub set_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_MPOOLFILE,
                                                              arg2: u_int32_t,
                                                              arg3:
                                                                  ::std::os::raw::c_int)
                                             -> ::std::os::raw::c_int>,
    pub set_ftype: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_MPOOLFILE,
                                                              arg2:
                                                                  ::std::os::raw::c_int)
                                             -> ::std::os::raw::c_int>,
    pub set_lsn_offset: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_MPOOLFILE,
                                                                   arg2:
                                                                       int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub set_maxsize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_MPOOLFILE,
                                                                arg2:
                                                                    u_int32_t,
                                                                arg3:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub set_pgcookie: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_MPOOLFILE,
                                                                 arg2:
                                                                     *mut DBT)
                                                -> ::std::os::raw::c_int>,
    pub set_priority: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_MPOOLFILE,
                                                                 arg2:
                                                                     DB_CACHE_PRIORITY)
                                                -> ::std::os::raw::c_int>,
    pub sync: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                             *mut DB_MPOOLFILE)
                                        -> ::std::os::raw::c_int>,
    pub flags: u_int32_t,
}
impl ::std::default::Default for __db_mpoolfile {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed18 {
    pub tqe_next: *mut __db_mpoolfile,
    pub tqe_prev: *mut *mut __db_mpoolfile,
}
impl ::std::default::Default for Struct_Unnamed18 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_mpool_stat {
    pub st_gbytes: u_int32_t,
    pub st_bytes: u_int32_t,
    pub st_ncache: u_int32_t,
    pub st_max_ncache: u_int32_t,
    pub st_mmapsize: size_t,
    pub st_maxopenfd: ::std::os::raw::c_int,
    pub st_maxwrite: ::std::os::raw::c_int,
    pub st_maxwrite_sleep: db_timeout_t,
    pub st_pages: u_int32_t,
    pub st_map: u_int32_t,
    pub st_cache_hit: uintmax_t,
    pub st_cache_miss: uintmax_t,
    pub st_page_create: uintmax_t,
    pub st_page_in: uintmax_t,
    pub st_page_out: uintmax_t,
    pub st_ro_evict: uintmax_t,
    pub st_rw_evict: uintmax_t,
    pub st_page_trickle: uintmax_t,
    pub st_page_clean: u_int32_t,
    pub st_page_dirty: u_int32_t,
    pub st_hash_buckets: u_int32_t,
    pub st_pagesize: u_int32_t,
    pub st_hash_searches: u_int32_t,
    pub st_hash_longest: u_int32_t,
    pub st_hash_examined: uintmax_t,
    pub st_hash_nowait: uintmax_t,
    pub st_hash_wait: uintmax_t,
    pub st_hash_max_nowait: uintmax_t,
    pub st_hash_max_wait: uintmax_t,
    pub st_region_nowait: uintmax_t,
    pub st_region_wait: uintmax_t,
    pub st_mvcc_frozen: uintmax_t,
    pub st_mvcc_thawed: uintmax_t,
    pub st_mvcc_freed: uintmax_t,
    pub st_alloc: uintmax_t,
    pub st_alloc_buckets: uintmax_t,
    pub st_alloc_max_buckets: uintmax_t,
    pub st_alloc_pages: uintmax_t,
    pub st_alloc_max_pages: uintmax_t,
    pub st_io_wait: uintmax_t,
    pub st_sync_interrupted: uintmax_t,
    pub st_regsize: roff_t,
}
impl ::std::default::Default for __db_mpool_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_mpool_fstat {
    pub file_name: *mut ::std::os::raw::c_char,
    pub st_pagesize: u_int32_t,
    pub st_map: u_int32_t,
    pub st_cache_hit: uintmax_t,
    pub st_cache_miss: uintmax_t,
    pub st_page_create: uintmax_t,
    pub st_page_in: uintmax_t,
    pub st_page_out: uintmax_t,
}
impl ::std::default::Default for __db_mpool_fstat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum db_recops {
    DB_TXN_ABORT = 0,
    DB_TXN_APPLY = 1,
    DB_TXN_BACKWARD_ROLL = 3,
    DB_TXN_FORWARD_ROLL = 4,
    DB_TXN_OPENFILES = 5,
    DB_TXN_POPENFILES = 6,
    DB_TXN_PRINT = 7,
}
pub enum __txn_event { }
pub enum __txn_logrec { }
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_txn {
    pub mgrp: *mut DB_TXNMGR,
    pub parent: *mut DB_TXN,
    pub thread_info: *mut DB_THREAD_INFO,
    pub txnid: u_int32_t,
    pub name: *mut ::std::os::raw::c_char,
    pub locker: *mut DB_LOCKER,
    pub td: *mut ::std::os::raw::c_void,
    pub lock_timeout: db_timeout_t,
    pub expire: db_timeout_t,
    pub txn_list: *mut ::std::os::raw::c_void,
    pub links: Struct_Unnamed19,
    pub kids: __kids,
    pub events: Struct_Unnamed20,
    pub logs: Struct_Unnamed21,
    pub klinks: Struct_Unnamed22,
    pub api_internal: *mut ::std::os::raw::c_void,
    pub xml_internal: *mut ::std::os::raw::c_void,
    pub cursors: u_int32_t,
    pub abort: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_TXN)
                                         -> ::std::os::raw::c_int>,
    pub commit: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_TXN,
                                                           arg2: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub discard: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_TXN,
                                                            arg2: u_int32_t)
                                           -> ::std::os::raw::c_int>,
    pub get_name: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_TXN,
                                                             arg2:
                                                                 *mut *const ::std::os::raw::c_char)
                                            -> ::std::os::raw::c_int>,
    pub id: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_TXN)
                                      -> u_int32_t>,
    pub prepare: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_TXN,
                                                            arg2:
                                                                *mut u_int8_t)
                                           -> ::std::os::raw::c_int>,
    pub set_name: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_TXN,
                                                             arg2:
                                                                 *const ::std::os::raw::c_char)
                                            -> ::std::os::raw::c_int>,
    pub set_timeout: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_TXN,
                                                                arg2:
                                                                    db_timeout_t,
                                                                arg3:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub set_txn_lsnp: ::std::option::Option<unsafe extern "C" fn(txn:
                                                                     *mut DB_TXN,
                                                                 arg1:
                                                                     *mut *mut DB_LSN,
                                                                 arg2:
                                                                     *mut *mut DB_LSN)>,
    pub flags: u_int32_t,
}
impl ::std::default::Default for __db_txn {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed19 {
    pub tqe_next: *mut __db_txn,
    pub tqe_prev: *mut *mut __db_txn,
}
impl ::std::default::Default for Struct_Unnamed19 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __kids {
    pub tqh_first: *mut __db_txn,
    pub tqh_last: *mut *mut __db_txn,
}
impl ::std::default::Default for __kids {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed20 {
    pub tqh_first: *mut __txn_event,
    pub tqh_last: *mut *mut __txn_event,
}
impl ::std::default::Default for Struct_Unnamed20 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed21 {
    pub stqh_first: *mut __txn_logrec,
    pub stqh_last: *mut *mut __txn_logrec,
}
impl ::std::default::Default for Struct_Unnamed21 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed22 {
    pub tqe_next: *mut __db_txn,
    pub tqe_prev: *mut *mut __db_txn,
}
impl ::std::default::Default for Struct_Unnamed22 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct __db_preplist {
    pub txn: *mut DB_TXN,
    pub gid: [u_int8_t; 128usize],
}
impl ::std::clone::Clone for __db_preplist {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for __db_preplist {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct __db_txn_active {
    pub txnid: u_int32_t,
    pub parentid: u_int32_t,
    pub pid: pid_t,
    pub tid: db_threadid_t,
    pub lsn: DB_LSN,
    pub read_lsn: DB_LSN,
    pub mvcc_ref: u_int32_t,
    pub status: u_int32_t,
    pub gid: [u_int8_t; 128usize],
    pub name: [::std::os::raw::c_char; 51usize],
}
impl ::std::clone::Clone for __db_txn_active {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for __db_txn_active {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_txn_stat {
    pub st_nrestores: u_int32_t,
    pub st_last_ckp: DB_LSN,
    pub st_time_ckp: time_t,
    pub st_last_txnid: u_int32_t,
    pub st_maxtxns: u_int32_t,
    pub st_naborts: uintmax_t,
    pub st_nbegins: uintmax_t,
    pub st_ncommits: uintmax_t,
    pub st_nactive: u_int32_t,
    pub st_nsnapshot: u_int32_t,
    pub st_maxnactive: u_int32_t,
    pub st_maxnsnapshot: u_int32_t,
    pub st_txnarray: *mut DB_TXN_ACTIVE,
    pub st_region_wait: uintmax_t,
    pub st_region_nowait: uintmax_t,
    pub st_regsize: roff_t,
}
impl ::std::default::Default for __db_txn_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_repmgr_site {
    pub eid: ::std::os::raw::c_int,
    pub host: *mut ::std::os::raw::c_char,
    pub port: u_int,
    pub status: u_int32_t,
}
impl ::std::default::Default for __db_repmgr_site {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_rep_stat {
    pub st_log_queued: uintmax_t,
    pub st_startup_complete: u_int32_t,
    pub st_status: u_int32_t,
    pub st_next_lsn: DB_LSN,
    pub st_waiting_lsn: DB_LSN,
    pub st_max_perm_lsn: DB_LSN,
    pub st_next_pg: db_pgno_t,
    pub st_waiting_pg: db_pgno_t,
    pub st_dupmasters: u_int32_t,
    pub st_env_id: ::std::os::raw::c_int,
    pub st_env_priority: u_int32_t,
    pub st_bulk_fills: uintmax_t,
    pub st_bulk_overflows: uintmax_t,
    pub st_bulk_records: uintmax_t,
    pub st_bulk_transfers: uintmax_t,
    pub st_client_rerequests: uintmax_t,
    pub st_client_svc_req: uintmax_t,
    pub st_client_svc_miss: uintmax_t,
    pub st_gen: u_int32_t,
    pub st_egen: u_int32_t,
    pub st_log_duplicated: uintmax_t,
    pub st_log_queued_max: uintmax_t,
    pub st_log_queued_total: uintmax_t,
    pub st_log_records: uintmax_t,
    pub st_log_requested: uintmax_t,
    pub st_master: ::std::os::raw::c_int,
    pub st_master_changes: uintmax_t,
    pub st_msgs_badgen: uintmax_t,
    pub st_msgs_processed: uintmax_t,
    pub st_msgs_recover: uintmax_t,
    pub st_msgs_send_failures: uintmax_t,
    pub st_msgs_sent: uintmax_t,
    pub st_newsites: uintmax_t,
    pub st_nsites: u_int32_t,
    pub st_nthrottles: uintmax_t,
    pub st_outdated: uintmax_t,
    pub st_pg_duplicated: uintmax_t,
    pub st_pg_records: uintmax_t,
    pub st_pg_requested: uintmax_t,
    pub st_txns_applied: uintmax_t,
    pub st_startsync_delayed: uintmax_t,
    pub st_elections: uintmax_t,
    pub st_elections_won: uintmax_t,
    pub st_election_cur_winner: ::std::os::raw::c_int,
    pub st_election_gen: u_int32_t,
    pub st_election_lsn: DB_LSN,
    pub st_election_nsites: u_int32_t,
    pub st_election_nvotes: u_int32_t,
    pub st_election_priority: u_int32_t,
    pub st_election_status: ::std::os::raw::c_int,
    pub st_election_tiebreaker: u_int32_t,
    pub st_election_votes: u_int32_t,
    pub st_election_sec: u_int32_t,
    pub st_election_usec: u_int32_t,
    pub st_max_lease_sec: u_int32_t,
    pub st_max_lease_usec: u_int32_t,
}
impl ::std::default::Default for __db_rep_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_repmgr_stat {
    pub st_perm_failed: uintmax_t,
    pub st_msgs_queued: uintmax_t,
    pub st_msgs_dropped: uintmax_t,
    pub st_connection_drop: uintmax_t,
    pub st_connect_fail: uintmax_t,
}
impl ::std::default::Default for __db_repmgr_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_seq_record {
    pub seq_version: u_int32_t,
    pub flags: u_int32_t,
    pub seq_value: db_seq_t,
    pub seq_max: db_seq_t,
    pub seq_min: db_seq_t,
}
impl ::std::default::Default for __db_seq_record {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_sequence {
    pub seq_dbp: *mut DB,
    pub mtx_seq: db_mutex_t,
    pub seq_rp: *mut DB_SEQ_RECORD,
    pub seq_record: DB_SEQ_RECORD,
    pub seq_cache_size: int32_t,
    pub seq_last_value: db_seq_t,
    pub seq_key: DBT,
    pub seq_data: DBT,
    pub api_internal: *mut ::std::os::raw::c_void,
    pub close: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                              *mut DB_SEQUENCE,
                                                          arg2: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub get: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                            *mut DB_SEQUENCE,
                                                        arg2: *mut DB_TXN,
                                                        arg3: int32_t,
                                                        arg4: *mut db_seq_t,
                                                        arg5: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub get_cachesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_SEQUENCE,
                                                                  arg2:
                                                                      *mut int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub get_db: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                               *mut DB_SEQUENCE,
                                                           arg2: *mut *mut DB)
                                          -> ::std::os::raw::c_int>,
    pub get_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_SEQUENCE,
                                                              arg2:
                                                                  *mut u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub get_key: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                *mut DB_SEQUENCE,
                                                            arg2: *mut DBT)
                                           -> ::std::os::raw::c_int>,
    pub get_range: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_SEQUENCE,
                                                              arg2:
                                                                  *mut db_seq_t,
                                                              arg3:
                                                                  *mut db_seq_t)
                                             -> ::std::os::raw::c_int>,
    pub initial_value: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_SEQUENCE,
                                                                  arg2:
                                                                      db_seq_t)
                                                 -> ::std::os::raw::c_int>,
    pub open: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                             *mut DB_SEQUENCE,
                                                         arg2: *mut DB_TXN,
                                                         arg3: *mut DBT,
                                                         arg4: u_int32_t)
                                        -> ::std::os::raw::c_int>,
    pub remove: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                               *mut DB_SEQUENCE,
                                                           arg2: *mut DB_TXN,
                                                           arg3: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub set_cachesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_SEQUENCE,
                                                                  arg2:
                                                                      int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub set_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_SEQUENCE,
                                                              arg2: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub set_range: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_SEQUENCE,
                                                              arg2: db_seq_t,
                                                              arg3: db_seq_t)
                                             -> ::std::os::raw::c_int>,
    pub stat: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                             *mut DB_SEQUENCE,
                                                         arg2:
                                                             *mut *mut DB_SEQUENCE_STAT,
                                                         arg3: u_int32_t)
                                        -> ::std::os::raw::c_int>,
    pub stat_print: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_SEQUENCE,
                                                               arg2:
                                                                   u_int32_t)
                                              -> ::std::os::raw::c_int>,
}
impl ::std::default::Default for __db_sequence {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_seq_stat {
    pub st_wait: uintmax_t,
    pub st_nowait: uintmax_t,
    pub st_current: db_seq_t,
    pub st_value: db_seq_t,
    pub st_last_value: db_seq_t,
    pub st_min: db_seq_t,
    pub st_max: db_seq_t,
    pub st_cache_size: int32_t,
    pub st_flags: u_int32_t,
}
impl ::std::default::Default for __db_seq_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum DBTYPE {
    DB_BTREE = 1,
    DB_HASH = 2,
    DB_RECNO = 3,
    DB_QUEUE = 4,
    DB_UNKNOWN = 5,
}
pub enum __db_foreign_info { }
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db {
    pub pgsize: u_int32_t,
    pub priority: DB_CACHE_PRIORITY,
    pub db_append_recno: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB,
                                                                    arg2:
                                                                        *mut DBT,
                                                                    arg3:
                                                                        db_recno_t)
                                                   -> ::std::os::raw::c_int>,
    pub db_feedback: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    ::std::os::raw::c_int,
                                                                arg3:
                                                                    ::std::os::raw::c_int)>,
    pub dup_compare: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    *const DBT,
                                                                arg3:
                                                                    *const DBT)
                                               -> ::std::os::raw::c_int>,
    pub app_private: *mut ::std::os::raw::c_void,
    pub dbenv: *mut DB_ENV,
    pub env: *mut ENV,
    pub type_: DBTYPE,
    pub mpf: *mut DB_MPOOLFILE,
    pub mutex: db_mutex_t,
    pub fname: *mut ::std::os::raw::c_char,
    pub dname: *mut ::std::os::raw::c_char,
    pub dirname: *const ::std::os::raw::c_char,
    pub open_flags: u_int32_t,
    pub fileid: [u_int8_t; 20usize],
    pub adj_fileid: u_int32_t,
    pub log_filename: *mut FNAME,
    pub meta_pgno: db_pgno_t,
    pub locker: *mut DB_LOCKER,
    pub cur_locker: *mut DB_LOCKER,
    pub cur_txn: *mut DB_TXN,
    pub associate_locker: *mut DB_LOCKER,
    pub handle_lock: DB_LOCK,
    pub cl_id: u_int,
    pub timestamp: time_t,
    pub fid_gen: u_int32_t,
    pub my_rskey: DBT,
    pub my_rkey: DBT,
    pub my_rdata: DBT,
    pub saved_open_fhp: *mut DB_FH,
    pub dblistlinks: Struct_Unnamed23,
    pub free_queue: __cq_fq,
    pub active_queue: __cq_aq,
    pub join_queue: __cq_jq,
    pub s_secondaries: Struct_Unnamed24,
    pub s_links: Struct_Unnamed25,
    pub s_refcnt: u_int32_t,
    pub s_callback: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   *const DBT,
                                                               arg3:
                                                                   *const DBT,
                                                               arg4: *mut DBT)
                                              -> ::std::os::raw::c_int>,
    pub s_primary: *mut DB,
    pub s_assoc_flags: u_int32_t,
    pub f_primaries: Struct_Unnamed26,
    pub s_foreign: *mut DB,
    pub api_internal: *mut ::std::os::raw::c_void,
    pub bt_internal: *mut ::std::os::raw::c_void,
    pub h_internal: *mut ::std::os::raw::c_void,
    pub p_internal: *mut ::std::os::raw::c_void,
    pub q_internal: *mut ::std::os::raw::c_void,
    pub associate: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                              arg2:
                                                                  *mut DB_TXN,
                                                              arg3: *mut DB,
                                                              arg4:
                                                                  ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                 *mut DB,
                                                                                                             arg2:
                                                                                                                 *const DBT,
                                                                                                             arg3:
                                                                                                                 *const DBT,
                                                                                                             arg4:
                                                                                                                 *mut DBT)
                                                                                            ->
                                                                                                ::std::os::raw::c_int>,
                                                              arg5: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub associate_foreign: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB,
                                                                      arg2:
                                                                          *mut DB,
                                                                      arg3:
                                                                          ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                         *mut DB,
                                                                                                                     arg2:
                                                                                                                         *const DBT,
                                                                                                                     arg3:
                                                                                                                         *mut DBT,
                                                                                                                     arg4:
                                                                                                                         *const DBT,
                                                                                                                     arg5:
                                                                                                                         *mut ::std::os::raw::c_int)
                                                                                                    ->
                                                                                                        ::std::os::raw::c_int>,
                                                                      arg4:
                                                                          u_int32_t)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub close: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                          arg2: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub compact: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                            arg2: *mut DB_TXN,
                                                            arg3: *mut DBT,
                                                            arg4: *mut DBT,
                                                            arg5:
                                                                *mut DB_COMPACT,
                                                            arg6: u_int32_t,
                                                            arg7: *mut DBT)
                                           -> ::std::os::raw::c_int>,
    pub cursor: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                           arg2: *mut DB_TXN,
                                                           arg3:
                                                               *mut *mut DBC,
                                                           arg4: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub del: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                        arg2: *mut DB_TXN,
                                                        arg3: *mut DBT,
                                                        arg4: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub err: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                        arg2:
                                                            ::std::os::raw::c_int,
                                                        arg3:
                                                            *const ::std::os::raw::c_char, ...)>,
    pub errx: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                         arg2:
                                                             *const ::std::os::raw::c_char, ...)>,
    pub exists: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                           arg2: *mut DB_TXN,
                                                           arg3: *mut DBT,
                                                           arg4: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub fd: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                       arg2:
                                                           *mut ::std::os::raw::c_int)
                                      -> ::std::os::raw::c_int>,
    pub get: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                        arg2: *mut DB_TXN,
                                                        arg3: *mut DBT,
                                                        arg4: *mut DBT,
                                                        arg5: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub get_alloc: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                              arg2:
                                                                  *mut ::std::option::Option<extern "C" fn(arg1:
                                                                                                               size_t)
                                                                                                 ->
                                                                                                     *mut ::std::os::raw::c_void>,
                                                              arg3:
                                                                  *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                      *mut ::std::os::raw::c_void,
                                                                                                                  arg2:
                                                                                                                      size_t)
                                                                                                 ->
                                                                                                     *mut ::std::os::raw::c_void>,
                                                              arg4:
                                                                  *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                      *mut ::std::os::raw::c_void)>)
                                             -> ::std::os::raw::c_int>,
    pub get_append_recno: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB,
                                                                     arg2:
                                                                         *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                             *mut DB,
                                                                                                                         arg2:
                                                                                                                             *mut DBT,
                                                                                                                         arg3:
                                                                                                                             db_recno_t)
                                                                                                        ->
                                                                                                            ::std::os::raw::c_int>)
                                                    -> ::std::os::raw::c_int>,
    pub get_bt_compare: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB,
                                                                   arg2:
                                                                       *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                           *mut DB,
                                                                                                                       arg2:
                                                                                                                           *const DBT,
                                                                                                                       arg3:
                                                                                                                           *const DBT)
                                                                                                      ->
                                                                                                          ::std::os::raw::c_int>)
                                                  -> ::std::os::raw::c_int>,
    pub get_bt_compress: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB,
                                                                    arg2:
                                                                        *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                            *mut DB,
                                                                                                                        arg2:
                                                                                                                            *const DBT,
                                                                                                                        arg3:
                                                                                                                            *const DBT,
                                                                                                                        arg4:
                                                                                                                            *const DBT,
                                                                                                                        arg5:
                                                                                                                            *const DBT,
                                                                                                                        arg6:
                                                                                                                            *mut DBT)
                                                                                                       ->
                                                                                                           ::std::os::raw::c_int>,
                                                                    arg3:
                                                                        *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                            *mut DB,
                                                                                                                        arg2:
                                                                                                                            *const DBT,
                                                                                                                        arg3:
                                                                                                                            *const DBT,
                                                                                                                        arg4:
                                                                                                                            *mut DBT,
                                                                                                                        arg5:
                                                                                                                            *mut DBT,
                                                                                                                        arg6:
                                                                                                                            *mut DBT)
                                                                                                       ->
                                                                                                           ::std::os::raw::c_int>)
                                                   -> ::std::os::raw::c_int>,
    pub get_bt_minkey: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      *mut u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub get_bt_prefix: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                          *mut DB,
                                                                                                                      arg2:
                                                                                                                          *const DBT,
                                                                                                                      arg3:
                                                                                                                          *const DBT)
                                                                                                     ->
                                                                                                         size_t>)
                                                 -> ::std::os::raw::c_int>,
    pub get_byteswapped: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB,
                                                                    arg2:
                                                                        *mut ::std::os::raw::c_int)
                                                   -> ::std::os::raw::c_int>,
    pub get_cachesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      *mut u_int32_t,
                                                                  arg3:
                                                                      *mut u_int32_t,
                                                                  arg4:
                                                                      *mut ::std::os::raw::c_int)
                                                 -> ::std::os::raw::c_int>,
    pub get_create_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB,
                                                                   arg2:
                                                                       *mut *const ::std::os::raw::c_char)
                                                  -> ::std::os::raw::c_int>,
    pub get_dbname: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   *mut *const ::std::os::raw::c_char,
                                                               arg3:
                                                                   *mut *const ::std::os::raw::c_char)
                                              -> ::std::os::raw::c_int>,
    pub get_dup_compare: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB,
                                                                    arg2:
                                                                        *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                            *mut DB,
                                                                                                                        arg2:
                                                                                                                            *const DBT,
                                                                                                                        arg3:
                                                                                                                            *const DBT)
                                                                                                       ->
                                                                                                           ::std::os::raw::c_int>)
                                                   -> ::std::os::raw::c_int>,
    pub get_encrypt_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB,
                                                                      arg2:
                                                                          *mut u_int32_t)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub get_env: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB)
                                           -> *mut DB_ENV>,
    pub get_errcall: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                        *const DB_ENV,
                                                                                                                    arg2:
                                                                                                                        *const ::std::os::raw::c_char,
                                                                                                                    arg3:
                                                                                                                        *const ::std::os::raw::c_char)>)>,
    pub get_errfile: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    *mut *mut FILE)>,
    pub get_errpfx: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   *mut *const ::std::os::raw::c_char)>,
    pub get_feedback: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                         *mut DB,
                                                                                                                     arg2:
                                                                                                                         ::std::os::raw::c_int,
                                                                                                                     arg3:
                                                                                                                         ::std::os::raw::c_int)>)
                                                -> ::std::os::raw::c_int>,
    pub get_flags: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                              arg2:
                                                                  *mut u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub get_h_compare: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                          *mut DB,
                                                                                                                      arg2:
                                                                                                                          *const DBT,
                                                                                                                      arg3:
                                                                                                                          *const DBT)
                                                                                                     ->
                                                                                                         ::std::os::raw::c_int>)
                                                 -> ::std::os::raw::c_int>,
    pub get_h_ffactor: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      *mut u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub get_h_hash: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                       *mut DB,
                                                                                                                   arg2:
                                                                                                                       *const ::std::os::raw::c_void,
                                                                                                                   arg3:
                                                                                                                       u_int32_t)
                                                                                                  ->
                                                                                                      u_int32_t>)
                                              -> ::std::os::raw::c_int>,
    pub get_h_nelem: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    *mut u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub get_lorder: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   *mut ::std::os::raw::c_int)
                                              -> ::std::os::raw::c_int>,
    pub get_mpf: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB)
                                           -> *mut DB_MPOOLFILE>,
    pub get_msgcall: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                        *const DB_ENV,
                                                                                                                    arg2:
                                                                                                                        *const ::std::os::raw::c_char)>)>,
    pub get_msgfile: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    *mut *mut FILE)>,
    pub get_multiple: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB)
                                                -> ::std::os::raw::c_int>,
    pub get_open_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB,
                                                                   arg2:
                                                                       *mut u_int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub get_pagesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     *mut u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub get_partition_callback: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                               *mut DB,
                                                                           arg2:
                                                                               *mut u_int32_t,
                                                                           arg3:
                                                                               *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                                   *mut DB,
                                                                                                                               key:
                                                                                                                                   *mut DBT)
                                                                                                              ->
                                                                                                                  u_int32_t>)
                                                          ->
                                                              ::std::os::raw::c_int>,
    pub get_partition_dirs: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                           *mut DB,
                                                                       arg2:
                                                                           *mut *mut *const ::std::os::raw::c_char)
                                                      ->
                                                          ::std::os::raw::c_int>,
    pub get_partition_keys: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                           *mut DB,
                                                                       arg2:
                                                                           *mut u_int32_t,
                                                                       arg3:
                                                                           *mut *mut DBT)
                                                      ->
                                                          ::std::os::raw::c_int>,
    pub get_priority: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     *mut DB_CACHE_PRIORITY)
                                                -> ::std::os::raw::c_int>,
    pub get_q_extentsize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB,
                                                                     arg2:
                                                                         *mut u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub get_re_delim: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     *mut ::std::os::raw::c_int)
                                                -> ::std::os::raw::c_int>,
    pub get_re_len: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   *mut u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub get_re_pad: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   *mut ::std::os::raw::c_int)
                                              -> ::std::os::raw::c_int>,
    pub get_re_source: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      *mut *const ::std::os::raw::c_char)
                                                 -> ::std::os::raw::c_int>,
    pub get_transactional: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub get_type: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                             arg2:
                                                                 *mut DBTYPE)
                                            -> ::std::os::raw::c_int>,
    pub join: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                         arg2: *mut *mut DBC,
                                                         arg3: *mut *mut DBC,
                                                         arg4: u_int32_t)
                                        -> ::std::os::raw::c_int>,
    pub key_range: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                              arg2:
                                                                  *mut DB_TXN,
                                                              arg3: *mut DBT,
                                                              arg4:
                                                                  *mut DB_KEY_RANGE,
                                                              arg5: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub open: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                         arg2: *mut DB_TXN,
                                                         arg3:
                                                             *const ::std::os::raw::c_char,
                                                         arg4:
                                                             *const ::std::os::raw::c_char,
                                                         arg5: DBTYPE,
                                                         arg6: u_int32_t,
                                                         arg7:
                                                             ::std::os::raw::c_int)
                                        -> ::std::os::raw::c_int>,
    pub pget: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                         arg2: *mut DB_TXN,
                                                         arg3: *mut DBT,
                                                         arg4: *mut DBT,
                                                         arg5: *mut DBT,
                                                         arg6: u_int32_t)
                                        -> ::std::os::raw::c_int>,
    pub put: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                        arg2: *mut DB_TXN,
                                                        arg3: *mut DBT,
                                                        arg4: *mut DBT,
                                                        arg5: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub remove: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                           arg2:
                                                               *const ::std::os::raw::c_char,
                                                           arg3:
                                                               *const ::std::os::raw::c_char,
                                                           arg4: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub rename: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                           arg2:
                                                               *const ::std::os::raw::c_char,
                                                           arg3:
                                                               *const ::std::os::raw::c_char,
                                                           arg4:
                                                               *const ::std::os::raw::c_char,
                                                           arg5: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub set_alloc: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                              arg2:
                                                                  ::std::option::Option<extern "C" fn(arg1:
                                                                                                          size_t)
                                                                                            ->
                                                                                                *mut ::std::os::raw::c_void>,
                                                              arg3:
                                                                  ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                 *mut ::std::os::raw::c_void,
                                                                                                             arg2:
                                                                                                                 size_t)
                                                                                            ->
                                                                                                *mut ::std::os::raw::c_void>,
                                                              arg4:
                                                                  ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                 *mut ::std::os::raw::c_void)>)
                                             -> ::std::os::raw::c_int>,
    pub set_append_recno: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB,
                                                                     arg2:
                                                                         ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                        *mut DB,
                                                                                                                    arg2:
                                                                                                                        *mut DBT,
                                                                                                                    arg3:
                                                                                                                        db_recno_t)
                                                                                                   ->
                                                                                                       ::std::os::raw::c_int>)
                                                    -> ::std::os::raw::c_int>,
    pub set_bt_compare: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB,
                                                                   arg2:
                                                                       ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                      *mut DB,
                                                                                                                  arg2:
                                                                                                                      *const DBT,
                                                                                                                  arg3:
                                                                                                                      *const DBT)
                                                                                                 ->
                                                                                                     ::std::os::raw::c_int>)
                                                  -> ::std::os::raw::c_int>,
    pub set_bt_compress: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB,
                                                                    arg2:
                                                                        ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                       *mut DB,
                                                                                                                   arg2:
                                                                                                                       *const DBT,
                                                                                                                   arg3:
                                                                                                                       *const DBT,
                                                                                                                   arg4:
                                                                                                                       *const DBT,
                                                                                                                   arg5:
                                                                                                                       *const DBT,
                                                                                                                   arg6:
                                                                                                                       *mut DBT)
                                                                                                  ->
                                                                                                      ::std::os::raw::c_int>,
                                                                    arg3:
                                                                        ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                       *mut DB,
                                                                                                                   arg2:
                                                                                                                       *const DBT,
                                                                                                                   arg3:
                                                                                                                       *const DBT,
                                                                                                                   arg4:
                                                                                                                       *mut DBT,
                                                                                                                   arg5:
                                                                                                                       *mut DBT,
                                                                                                                   arg6:
                                                                                                                       *mut DBT)
                                                                                                  ->
                                                                                                      ::std::os::raw::c_int>)
                                                   -> ::std::os::raw::c_int>,
    pub set_bt_minkey: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub set_bt_prefix: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                     *mut DB,
                                                                                                                 arg2:
                                                                                                                     *const DBT,
                                                                                                                 arg3:
                                                                                                                     *const DBT)
                                                                                                ->
                                                                                                    size_t>)
                                                 -> ::std::os::raw::c_int>,
    pub set_cachesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      u_int32_t,
                                                                  arg3:
                                                                      u_int32_t,
                                                                  arg4:
                                                                      ::std::os::raw::c_int)
                                                 -> ::std::os::raw::c_int>,
    pub set_create_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB,
                                                                   arg2:
                                                                       *const ::std::os::raw::c_char)
                                                  -> ::std::os::raw::c_int>,
    pub set_dup_compare: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB,
                                                                    arg2:
                                                                        ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                       *mut DB,
                                                                                                                   arg2:
                                                                                                                       *const DBT,
                                                                                                                   arg3:
                                                                                                                       *const DBT)
                                                                                                  ->
                                                                                                      ::std::os::raw::c_int>)
                                                   -> ::std::os::raw::c_int>,
    pub set_encrypt: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    *const ::std::os::raw::c_char,
                                                                arg3:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub set_errcall: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                   *const DB_ENV,
                                                                                                               arg2:
                                                                                                                   *const ::std::os::raw::c_char,
                                                                                                               arg3:
                                                                                                                   *const ::std::os::raw::c_char)>)>,
    pub set_errfile: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    *mut FILE)>,
    pub set_errpfx: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   *const ::std::os::raw::c_char)>,
    pub set_feedback: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                    *mut DB,
                                                                                                                arg2:
                                                                                                                    ::std::os::raw::c_int,
                                                                                                                arg3:
                                                                                                                    ::std::os::raw::c_int)>)
                                                -> ::std::os::raw::c_int>,
    pub set_flags: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                              arg2: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub set_h_compare: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                     *mut DB,
                                                                                                                 arg2:
                                                                                                                     *const DBT,
                                                                                                                 arg3:
                                                                                                                     *const DBT)
                                                                                                ->
                                                                                                    ::std::os::raw::c_int>)
                                                 -> ::std::os::raw::c_int>,
    pub set_h_ffactor: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub set_h_hash: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                  *mut DB,
                                                                                                              arg2:
                                                                                                                  *const ::std::os::raw::c_void,
                                                                                                              arg3:
                                                                                                                  u_int32_t)
                                                                                             ->
                                                                                                 u_int32_t>)
                                              -> ::std::os::raw::c_int>,
    pub set_h_nelem: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub set_lorder: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   ::std::os::raw::c_int)
                                              -> ::std::os::raw::c_int>,
    pub set_msgcall: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                   *const DB_ENV,
                                                                                                               arg2:
                                                                                                                   *const ::std::os::raw::c_char)>)>,
    pub set_msgfile: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                                arg2:
                                                                    *mut FILE)>,
    pub set_pagesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub set_paniccall: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                     *mut DB_ENV,
                                                                                                                 arg2:
                                                                                                                     ::std::os::raw::c_int)>)
                                                 -> ::std::os::raw::c_int>,
    pub set_partition: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      u_int32_t,
                                                                  arg3:
                                                                      *mut DBT,
                                                                  arg4:
                                                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                     *mut DB,
                                                                                                                 key:
                                                                                                                     *mut DBT)
                                                                                                ->
                                                                                                    u_int32_t>)
                                                 -> ::std::os::raw::c_int>,
    pub set_partition_dirs: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                           *mut DB,
                                                                       arg2:
                                                                           *mut *const ::std::os::raw::c_char)
                                                      ->
                                                          ::std::os::raw::c_int>,
    pub set_priority: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     DB_CACHE_PRIORITY)
                                                -> ::std::os::raw::c_int>,
    pub set_q_extentsize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB,
                                                                     arg2:
                                                                         u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub set_re_delim: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     ::std::os::raw::c_int)
                                                -> ::std::os::raw::c_int>,
    pub set_re_len: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub set_re_pad: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   ::std::os::raw::c_int)
                                              -> ::std::os::raw::c_int>,
    pub set_re_source: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      *const ::std::os::raw::c_char)
                                                 -> ::std::os::raw::c_int>,
    pub sort_multiple: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB,
                                                                  arg2:
                                                                      *mut DBT,
                                                                  arg3:
                                                                      *mut DBT,
                                                                  arg4:
                                                                      u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub stat: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                         arg2: *mut DB_TXN,
                                                         arg3:
                                                             *mut ::std::os::raw::c_void,
                                                         arg4: u_int32_t)
                                        -> ::std::os::raw::c_int>,
    pub stat_print: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub sync: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                         arg2: u_int32_t)
                                        -> ::std::os::raw::c_int>,
    pub truncate: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                             arg2:
                                                                 *mut DB_TXN,
                                                             arg3:
                                                                 *mut u_int32_t,
                                                             arg4: u_int32_t)
                                            -> ::std::os::raw::c_int>,
    pub upgrade: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                            arg2:
                                                                *const ::std::os::raw::c_char,
                                                            arg3: u_int32_t)
                                           -> ::std::os::raw::c_int>,
    pub verify: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                           arg2:
                                                               *const ::std::os::raw::c_char,
                                                           arg3:
                                                               *const ::std::os::raw::c_char,
                                                           arg4: *mut FILE,
                                                           arg5: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub dump: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                         arg2:
                                                             *const ::std::os::raw::c_char,
                                                         arg3:
                                                             ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                            *mut ::std::os::raw::c_void,
                                                                                                        arg2:
                                                                                                            *const ::std::os::raw::c_void)
                                                                                       ->
                                                                                           ::std::os::raw::c_int>,
                                                         arg4:
                                                             *mut ::std::os::raw::c_void,
                                                         arg5:
                                                             ::std::os::raw::c_int,
                                                         arg6:
                                                             ::std::os::raw::c_int)
                                        -> ::std::os::raw::c_int>,
    pub db_am_remove: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     *mut DB_THREAD_INFO,
                                                                 arg3:
                                                                     *mut DB_TXN,
                                                                 arg4:
                                                                     *const ::std::os::raw::c_char,
                                                                 arg5:
                                                                     *const ::std::os::raw::c_char,
                                                                 arg6:
                                                                     u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub db_am_rename: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     *mut DB_THREAD_INFO,
                                                                 arg3:
                                                                     *mut DB_TXN,
                                                                 arg4:
                                                                     *const ::std::os::raw::c_char,
                                                                 arg5:
                                                                     *const ::std::os::raw::c_char,
                                                                 arg6:
                                                                     *const ::std::os::raw::c_char)
                                                -> ::std::os::raw::c_int>,
    pub stored_get: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB,
                                                               arg2:
                                                                   *mut DB_TXN,
                                                               arg3: *mut DBT,
                                                               arg4: *mut DBT,
                                                               arg5:
                                                                   u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub stored_close: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB,
                                                                 arg2:
                                                                     u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub am_ok: u_int32_t,
    pub preserve_fid: ::std::os::raw::c_int,
    pub orig_flags: u_int32_t,
    pub flags: u_int32_t,
}
impl ::std::default::Default for __db {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed23 {
    pub tqe_next: *mut __db,
    pub tqe_prev: *mut *mut __db,
}
impl ::std::default::Default for Struct_Unnamed23 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __cq_fq {
    pub tqh_first: *mut __dbc,
    pub tqh_last: *mut *mut __dbc,
}
impl ::std::default::Default for __cq_fq {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __cq_aq {
    pub tqh_first: *mut __dbc,
    pub tqh_last: *mut *mut __dbc,
}
impl ::std::default::Default for __cq_aq {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __cq_jq {
    pub tqh_first: *mut __dbc,
    pub tqh_last: *mut *mut __dbc,
}
impl ::std::default::Default for __cq_jq {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed24 {
    pub lh_first: *mut __db,
}
impl ::std::default::Default for Struct_Unnamed24 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed25 {
    pub le_next: *mut __db,
    pub le_prev: *mut *mut __db,
}
impl ::std::default::Default for Struct_Unnamed25 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed26 {
    pub lh_first: *mut __db_foreign_info,
}
impl ::std::default::Default for Struct_Unnamed26 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __dbc {
    pub dbp: *mut DB,
    pub dbenv: *mut DB_ENV,
    pub env: *mut ENV,
    pub thread_info: *mut DB_THREAD_INFO,
    pub txn: *mut DB_TXN,
    pub priority: DB_CACHE_PRIORITY,
    pub links: Struct_Unnamed27,
    pub rskey: *mut DBT,
    pub rkey: *mut DBT,
    pub rdata: *mut DBT,
    pub my_rskey: DBT,
    pub my_rkey: DBT,
    pub my_rdata: DBT,
    pub lref: *mut DB_LOCKER,
    pub locker: *mut DB_LOCKER,
    pub lock_dbt: DBT,
    pub lock: DB_LOCK_ILOCK,
    pub mylock: DB_LOCK,
    pub cl_id: u_int,
    pub dbtype: DBTYPE,
    pub internal: *mut DBC_INTERNAL,
    pub close: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC)
                                         -> ::std::os::raw::c_int>,
    pub cmp: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                        arg2: *mut DBC,
                                                        arg3:
                                                            *mut ::std::os::raw::c_int,
                                                        arg4: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub count: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                          arg2:
                                                              *mut db_recno_t,
                                                          arg3: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub del: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                        arg2: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub dup: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                        arg2: *mut *mut DBC,
                                                        arg3: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub get: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                        arg2: *mut DBT,
                                                        arg3: *mut DBT,
                                                        arg4: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub get_priority: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DBC,
                                                                 arg2:
                                                                     *mut DB_CACHE_PRIORITY)
                                                -> ::std::os::raw::c_int>,
    pub pget: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                         arg2: *mut DBT,
                                                         arg3: *mut DBT,
                                                         arg4: *mut DBT,
                                                         arg5: u_int32_t)
                                        -> ::std::os::raw::c_int>,
    pub put: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                        arg2: *mut DBT,
                                                        arg3: *mut DBT,
                                                        arg4: u_int32_t)
                                       -> ::std::os::raw::c_int>,
    pub set_priority: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DBC,
                                                                 arg2:
                                                                     DB_CACHE_PRIORITY)
                                                -> ::std::os::raw::c_int>,
    pub c_close: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC)
                                           -> ::std::os::raw::c_int>,
    pub c_count: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                            arg2:
                                                                *mut db_recno_t,
                                                            arg3: u_int32_t)
                                           -> ::std::os::raw::c_int>,
    pub c_del: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                          arg2: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub c_dup: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                          arg2: *mut *mut DBC,
                                                          arg3: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub c_get: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                          arg2: *mut DBT,
                                                          arg3: *mut DBT,
                                                          arg4: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub c_pget: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                           arg2: *mut DBT,
                                                           arg3: *mut DBT,
                                                           arg4: *mut DBT,
                                                           arg5: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub c_put: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                          arg2: *mut DBT,
                                                          arg3: *mut DBT,
                                                          arg4: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub am_bulk: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                            arg2: *mut DBT,
                                                            arg3: u_int32_t)
                                           -> ::std::os::raw::c_int>,
    pub am_close: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                             arg2: db_pgno_t,
                                                             arg3:
                                                                 *mut ::std::os::raw::c_int)
                                            -> ::std::os::raw::c_int>,
    pub am_del: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                           arg2: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub am_destroy: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC)
                                              -> ::std::os::raw::c_int>,
    pub am_get: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                           arg2: *mut DBT,
                                                           arg3: *mut DBT,
                                                           arg4: u_int32_t,
                                                           arg5:
                                                               *mut db_pgno_t)
                                          -> ::std::os::raw::c_int>,
    pub am_put: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBC,
                                                           arg2: *mut DBT,
                                                           arg3: *mut DBT,
                                                           arg4: u_int32_t,
                                                           arg5:
                                                               *mut db_pgno_t)
                                          -> ::std::os::raw::c_int>,
    pub am_writelock: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DBC)
                                                -> ::std::os::raw::c_int>,
    pub flags: u_int32_t,
}
impl ::std::default::Default for __dbc {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed27 {
    pub tqe_next: *mut DBC,
    pub tqe_prev: *mut *mut DBC,
}
impl ::std::default::Default for Struct_Unnamed27 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __key_range {
    pub less: f64,
    pub equal: f64,
    pub greater: f64,
}
impl ::std::default::Default for __key_range {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_bt_stat {
    pub bt_magic: u_int32_t,
    pub bt_version: u_int32_t,
    pub bt_metaflags: u_int32_t,
    pub bt_nkeys: u_int32_t,
    pub bt_ndata: u_int32_t,
    pub bt_pagecnt: u_int32_t,
    pub bt_pagesize: u_int32_t,
    pub bt_minkey: u_int32_t,
    pub bt_re_len: u_int32_t,
    pub bt_re_pad: u_int32_t,
    pub bt_levels: u_int32_t,
    pub bt_int_pg: u_int32_t,
    pub bt_leaf_pg: u_int32_t,
    pub bt_dup_pg: u_int32_t,
    pub bt_over_pg: u_int32_t,
    pub bt_empty_pg: u_int32_t,
    pub bt_free: u_int32_t,
    pub bt_int_pgfree: uintmax_t,
    pub bt_leaf_pgfree: uintmax_t,
    pub bt_dup_pgfree: uintmax_t,
    pub bt_over_pgfree: uintmax_t,
}
impl ::std::default::Default for __db_bt_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_compact {
    pub compact_fillpercent: u_int32_t,
    pub compact_timeout: db_timeout_t,
    pub compact_pages: u_int32_t,
    pub compact_pages_free: u_int32_t,
    pub compact_pages_examine: u_int32_t,
    pub compact_levels: u_int32_t,
    pub compact_deadlock: u_int32_t,
    pub compact_pages_truncated: db_pgno_t,
    pub compact_truncate: db_pgno_t,
}
impl ::std::default::Default for __db_compact {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_h_stat {
    pub hash_magic: u_int32_t,
    pub hash_version: u_int32_t,
    pub hash_metaflags: u_int32_t,
    pub hash_nkeys: u_int32_t,
    pub hash_ndata: u_int32_t,
    pub hash_pagecnt: u_int32_t,
    pub hash_pagesize: u_int32_t,
    pub hash_ffactor: u_int32_t,
    pub hash_buckets: u_int32_t,
    pub hash_free: u_int32_t,
    pub hash_bfree: uintmax_t,
    pub hash_bigpages: u_int32_t,
    pub hash_big_bfree: uintmax_t,
    pub hash_overflows: u_int32_t,
    pub hash_ovfl_free: uintmax_t,
    pub hash_dup: u_int32_t,
    pub hash_dup_free: uintmax_t,
}
impl ::std::default::Default for __db_h_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_qam_stat {
    pub qs_magic: u_int32_t,
    pub qs_version: u_int32_t,
    pub qs_metaflags: u_int32_t,
    pub qs_nkeys: u_int32_t,
    pub qs_ndata: u_int32_t,
    pub qs_pagesize: u_int32_t,
    pub qs_extentsize: u_int32_t,
    pub qs_pages: u_int32_t,
    pub qs_re_len: u_int32_t,
    pub qs_re_pad: u_int32_t,
    pub qs_pgfree: u_int32_t,
    pub qs_first_recno: u_int32_t,
    pub qs_cur_recno: u_int32_t,
}
impl ::std::default::Default for __db_qam_stat {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_env {
    pub env: *mut ENV,
    pub mtx_db_env: db_mutex_t,
    pub db_errcall: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *const DB_ENV,
                                                               arg2:
                                                                   *const ::std::os::raw::c_char,
                                                               arg3:
                                                                   *const ::std::os::raw::c_char)>,
    pub db_errfile: *mut FILE,
    pub db_errpfx: *const ::std::os::raw::c_char,
    pub db_msgcall: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *const DB_ENV,
                                                               arg2:
                                                                   *const ::std::os::raw::c_char)>,
    pub db_msgfile: *mut FILE,
    pub app_dispatch: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     *mut DBT,
                                                                 arg3:
                                                                     *mut DB_LSN,
                                                                 arg4:
                                                                     db_recops)
                                                -> ::std::os::raw::c_int>,
    pub db_event_func: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      u_int32_t,
                                                                  arg3:
                                                                      *mut ::std::os::raw::c_void)>,
    pub db_feedback: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    ::std::os::raw::c_int,
                                                                arg3:
                                                                    ::std::os::raw::c_int)>,
    pub db_free: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                *mut ::std::os::raw::c_void)>,
    pub db_paniccall: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     ::std::os::raw::c_int)>,
    pub db_malloc: ::std::option::Option<extern "C" fn(arg1: size_t)
                                             -> *mut ::std::os::raw::c_void>,
    pub db_realloc: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut ::std::os::raw::c_void,
                                                               arg2: size_t)
                                              -> *mut ::std::os::raw::c_void>,
    pub is_alive: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2: pid_t,
                                                             arg3:
                                                                 db_threadid_t,
                                                             arg4: u_int32_t)
                                            -> ::std::os::raw::c_int>,
    pub thread_id: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  *mut pid_t,
                                                              arg3:
                                                                  *mut db_threadid_t)>,
    pub thread_id_string: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         pid_t,
                                                                     arg3:
                                                                         db_threadid_t,
                                                                     arg4:
                                                                         *mut ::std::os::raw::c_char)
                                                    ->
                                                        *mut ::std::os::raw::c_char>,
    pub db_log_dir: *mut ::std::os::raw::c_char,
    pub db_tmp_dir: *mut ::std::os::raw::c_char,
    pub db_create_dir: *mut ::std::os::raw::c_char,
    pub db_data_dir: *mut *mut ::std::os::raw::c_char,
    pub data_cnt: ::std::os::raw::c_int,
    pub data_next: ::std::os::raw::c_int,
    pub intermediate_dir_mode: *mut ::std::os::raw::c_char,
    pub shm_key: ::std::os::raw::c_long,
    pub passwd: *mut ::std::os::raw::c_char,
    pub passwd_len: size_t,
    pub cl_handle: *mut ::std::os::raw::c_void,
    pub cl_id: u_int,
    pub app_private: *mut ::std::os::raw::c_void,
    pub api1_internal: *mut ::std::os::raw::c_void,
    pub api2_internal: *mut ::std::os::raw::c_void,
    pub verbose: u_int32_t,
    pub mutex_align: u_int32_t,
    pub mutex_cnt: u_int32_t,
    pub mutex_inc: u_int32_t,
    pub mutex_tas_spins: u_int32_t,
    pub lk_conflicts: *mut u_int8_t,
    pub lk_modes: ::std::os::raw::c_int,
    pub lk_detect: u_int32_t,
    pub lk_max: u_int32_t,
    pub lk_max_lockers: u_int32_t,
    pub lk_max_objects: u_int32_t,
    pub lk_partitions: u_int32_t,
    pub lk_timeout: db_timeout_t,
    pub lg_bsize: u_int32_t,
    pub lg_filemode: ::std::os::raw::c_int,
    pub lg_regionmax: u_int32_t,
    pub lg_size: u_int32_t,
    pub lg_flags: u_int32_t,
    pub mp_gbytes: u_int32_t,
    pub mp_bytes: u_int32_t,
    pub mp_max_gbytes: u_int32_t,
    pub mp_max_bytes: u_int32_t,
    pub mp_mmapsize: size_t,
    pub mp_maxopenfd: ::std::os::raw::c_int,
    pub mp_maxwrite: ::std::os::raw::c_int,
    pub mp_ncache: u_int,
    pub mp_pagesize: u_int32_t,
    pub mp_tablesize: u_int32_t,
    pub mp_maxwrite_sleep: db_timeout_t,
    pub tx_max: u_int32_t,
    pub tx_timestamp: time_t,
    pub tx_timeout: db_timeout_t,
    pub thr_max: u_int32_t,
    pub registry: *mut DB_FH,
    pub registry_off: u_int32_t,
    pub envreg_timeout: db_timeout_t,
    pub flags: u_int32_t,
    pub add_data_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     *const ::std::os::raw::c_char)
                                                -> ::std::os::raw::c_int>,
    pub cdsgroup_begin: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       *mut *mut DB_TXN)
                                                  -> ::std::os::raw::c_int>,
    pub close: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_ENV,
                                                          arg2: u_int32_t)
                                         -> ::std::os::raw::c_int>,
    pub dbremove: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2:
                                                                 *mut DB_TXN,
                                                             arg3:
                                                                 *const ::std::os::raw::c_char,
                                                             arg4:
                                                                 *const ::std::os::raw::c_char,
                                                             arg5: u_int32_t)
                                            -> ::std::os::raw::c_int>,
    pub dbrename: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2:
                                                                 *mut DB_TXN,
                                                             arg3:
                                                                 *const ::std::os::raw::c_char,
                                                             arg4:
                                                                 *const ::std::os::raw::c_char,
                                                             arg5:
                                                                 *const ::std::os::raw::c_char,
                                                             arg6: u_int32_t)
                                            -> ::std::os::raw::c_int>,
    pub err: ::std::option::Option<unsafe extern "C" fn(arg1: *const DB_ENV,
                                                        arg2:
                                                            ::std::os::raw::c_int,
                                                        arg3:
                                                            *const ::std::os::raw::c_char, ...)>,
    pub errx: ::std::option::Option<unsafe extern "C" fn(arg1: *const DB_ENV,
                                                         arg2:
                                                             *const ::std::os::raw::c_char, ...)>,
    pub failchk: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_ENV,
                                                            arg2: u_int32_t)
                                           -> ::std::os::raw::c_int>,
    pub fileid_reset: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     *const ::std::os::raw::c_char,
                                                                 arg3:
                                                                     u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub get_alloc: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  *mut ::std::option::Option<extern "C" fn(arg1:
                                                                                                               size_t)
                                                                                                 ->
                                                                                                     *mut ::std::os::raw::c_void>,
                                                              arg3:
                                                                  *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                      *mut ::std::os::raw::c_void,
                                                                                                                  arg2:
                                                                                                                      size_t)
                                                                                                 ->
                                                                                                     *mut ::std::os::raw::c_void>,
                                                              arg4:
                                                                  *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                      *mut ::std::os::raw::c_void)>)
                                             -> ::std::os::raw::c_int>,
    pub get_app_dispatch: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                             *mut DB_ENV,
                                                                                                                         arg2:
                                                                                                                             *mut DBT,
                                                                                                                         arg3:
                                                                                                                             *mut DB_LSN,
                                                                                                                         arg4:
                                                                                                                             db_recops)
                                                                                                        ->
                                                                                                            ::std::os::raw::c_int>)
                                                    -> ::std::os::raw::c_int>,
    pub get_cache_max: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      *mut u_int32_t,
                                                                  arg3:
                                                                      *mut u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub get_cachesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      *mut u_int32_t,
                                                                  arg3:
                                                                      *mut u_int32_t,
                                                                  arg4:
                                                                      *mut ::std::os::raw::c_int)
                                                 -> ::std::os::raw::c_int>,
    pub get_create_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       *mut *const ::std::os::raw::c_char)
                                                  -> ::std::os::raw::c_int>,
    pub get_data_dirs: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      *mut *mut *const ::std::os::raw::c_char)
                                                 -> ::std::os::raw::c_int>,
    pub get_encrypt_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          *mut u_int32_t)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub get_errcall: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                        *const DB_ENV,
                                                                                                                    arg2:
                                                                                                                        *const ::std::os::raw::c_char,
                                                                                                                    arg3:
                                                                                                                        *const ::std::os::raw::c_char)>)>,
    pub get_errfile: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut *mut FILE)>,
    pub get_errpfx: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   *mut *const ::std::os::raw::c_char)>,
    pub get_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  *mut u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub get_feedback: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                         *mut DB_ENV,
                                                                                                                     arg2:
                                                                                                                         ::std::os::raw::c_int,
                                                                                                                     arg3:
                                                                                                                         ::std::os::raw::c_int)>)
                                                -> ::std::os::raw::c_int>,
    pub get_home: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2:
                                                                 *mut *const ::std::os::raw::c_char)
                                            -> ::std::os::raw::c_int>,
    pub get_intermediate_dir_mode: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                  *mut DB_ENV,
                                                                              arg2:
                                                                                  *mut *const ::std::os::raw::c_char)
                                                             ->
                                                                 ::std::os::raw::c_int>,
    pub get_isalive: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                        *mut DB_ENV,
                                                                                                                    arg2:
                                                                                                                        pid_t,
                                                                                                                    arg3:
                                                                                                                        db_threadid_t,
                                                                                                                    arg4:
                                                                                                                        u_int32_t)
                                                                                                   ->
                                                                                                       ::std::os::raw::c_int>)
                                               -> ::std::os::raw::c_int>,
    pub get_lg_bsize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     *mut u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub get_lg_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   *mut *const ::std::os::raw::c_char)
                                              -> ::std::os::raw::c_int>,
    pub get_lg_filemode: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        *mut ::std::os::raw::c_int)
                                                   -> ::std::os::raw::c_int>,
    pub get_lg_max: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   *mut u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub get_lg_regionmax: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub get_lk_conflicts: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut *const u_int8_t,
                                                                     arg3:
                                                                         *mut ::std::os::raw::c_int)
                                                    -> ::std::os::raw::c_int>,
    pub get_lk_detect: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      *mut u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub get_lk_max_lockers: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                           *mut DB_ENV,
                                                                       arg2:
                                                                           *mut u_int32_t)
                                                      ->
                                                          ::std::os::raw::c_int>,
    pub get_lk_max_locks: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub get_lk_max_objects: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                           *mut DB_ENV,
                                                                       arg2:
                                                                           *mut u_int32_t)
                                                      ->
                                                          ::std::os::raw::c_int>,
    pub get_lk_partitions: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          *mut u_int32_t)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub get_mp_max_openfd: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          *mut ::std::os::raw::c_int)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub get_mp_max_write: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut ::std::os::raw::c_int,
                                                                     arg3:
                                                                         *mut db_timeout_t)
                                                    -> ::std::os::raw::c_int>,
    pub get_mp_mmapsize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        *mut size_t)
                                                   -> ::std::os::raw::c_int>,
    pub get_mp_pagesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        *mut u_int32_t)
                                                   -> ::std::os::raw::c_int>,
    pub get_mp_tablesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub get_msgcall: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                        *const DB_ENV,
                                                                                                                    arg2:
                                                                                                                        *const ::std::os::raw::c_char)>)>,
    pub get_msgfile: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut *mut FILE)>,
    pub get_open_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       *mut u_int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub get_shm_key: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut ::std::os::raw::c_long)
                                               -> ::std::os::raw::c_int>,
    pub get_thread_count: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub get_thread_id_fn: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                             *mut DB_ENV,
                                                                                                                         arg2:
                                                                                                                             *mut pid_t,
                                                                                                                         arg3:
                                                                                                                             *mut db_threadid_t)>)
                                                    -> ::std::os::raw::c_int>,
    pub get_thread_id_string_fn: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                *mut DB_ENV,
                                                                            arg2:
                                                                                *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                                    *mut DB_ENV,
                                                                                                                                arg2:
                                                                                                                                    pid_t,
                                                                                                                                arg3:
                                                                                                                                    db_threadid_t,
                                                                                                                                arg4:
                                                                                                                                    *mut ::std::os::raw::c_char)
                                                                                                               ->
                                                                                                                   *mut ::std::os::raw::c_char>)
                                                           ->
                                                               ::std::os::raw::c_int>,
    pub get_timeout: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut db_timeout_t,
                                                                arg3:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub get_tmp_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut *const ::std::os::raw::c_char)
                                               -> ::std::os::raw::c_int>,
    pub get_tx_max: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   *mut u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub get_tx_timestamp: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut time_t)
                                                    -> ::std::os::raw::c_int>,
    pub get_verbose: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    u_int32_t,
                                                                arg3:
                                                                    *mut ::std::os::raw::c_int)
                                               -> ::std::os::raw::c_int>,
    pub is_bigendian: ::std::option::Option<extern "C" fn()
                                                -> ::std::os::raw::c_int>,
    pub lock_detect: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    u_int32_t,
                                                                arg3:
                                                                    u_int32_t,
                                                                arg4:
                                                                    *mut ::std::os::raw::c_int)
                                               -> ::std::os::raw::c_int>,
    pub lock_get: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2: u_int32_t,
                                                             arg3: u_int32_t,
                                                             arg4: *mut DBT,
                                                             arg5:
                                                                 db_lockmode_t,
                                                             arg6:
                                                                 *mut DB_LOCK)
                                            -> ::std::os::raw::c_int>,
    pub lock_id: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_ENV,
                                                            arg2:
                                                                *mut u_int32_t)
                                           -> ::std::os::raw::c_int>,
    pub lock_id_free: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub lock_put: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2:
                                                                 *mut DB_LOCK)
                                            -> ::std::os::raw::c_int>,
    pub lock_stat: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  *mut *mut DB_LOCK_STAT,
                                                              arg3: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub lock_stat_print: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        u_int32_t)
                                                   -> ::std::os::raw::c_int>,
    pub lock_vec: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2: u_int32_t,
                                                             arg3: u_int32_t,
                                                             arg4:
                                                                 *mut DB_LOCKREQ,
                                                             arg5:
                                                                 ::std::os::raw::c_int,
                                                             arg6:
                                                                 *mut *mut DB_LOCKREQ)
                                            -> ::std::os::raw::c_int>,
    pub log_archive: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut *mut *mut ::std::os::raw::c_char,
                                                                arg3:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub log_cursor: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   *mut *mut DB_LOGC,
                                                               arg3:
                                                                   u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub log_file: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2:
                                                                 *const DB_LSN,
                                                             arg3:
                                                                 *mut ::std::os::raw::c_char,
                                                             arg4: size_t)
                                            -> ::std::os::raw::c_int>,
    pub log_flush: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  *const DB_LSN)
                                             -> ::std::os::raw::c_int>,
    pub log_get_config: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       u_int32_t,
                                                                   arg3:
                                                                       *mut ::std::os::raw::c_int)
                                                  -> ::std::os::raw::c_int>,
    pub log_printf: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   *mut DB_TXN,
                                                               arg3:
                                                                   *const ::std::os::raw::c_char, ...)
                                              -> ::std::os::raw::c_int>,
    pub log_put: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_ENV,
                                                            arg2: *mut DB_LSN,
                                                            arg3: *const DBT,
                                                            arg4: u_int32_t)
                                           -> ::std::os::raw::c_int>,
    pub log_set_config: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       u_int32_t,
                                                                   arg3:
                                                                       ::std::os::raw::c_int)
                                                  -> ::std::os::raw::c_int>,
    pub log_stat: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2:
                                                                 *mut *mut DB_LOG_STAT,
                                                             arg3: u_int32_t)
                                            -> ::std::os::raw::c_int>,
    pub log_stat_print: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       u_int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub lsn_reset: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  *const ::std::os::raw::c_char,
                                                              arg3: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub memp_fcreate: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     *mut *mut DB_MPOOLFILE,
                                                                 arg3:
                                                                     u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub memp_register: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      ::std::os::raw::c_int,
                                                                  arg3:
                                                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                     *mut DB_ENV,
                                                                                                                 arg2:
                                                                                                                     db_pgno_t,
                                                                                                                 arg3:
                                                                                                                     *mut ::std::os::raw::c_void,
                                                                                                                 arg4:
                                                                                                                     *mut DBT)
                                                                                                ->
                                                                                                    ::std::os::raw::c_int>,
                                                                  arg4:
                                                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                     *mut DB_ENV,
                                                                                                                 arg2:
                                                                                                                     db_pgno_t,
                                                                                                                 arg3:
                                                                                                                     *mut ::std::os::raw::c_void,
                                                                                                                 arg4:
                                                                                                                     *mut DBT)
                                                                                                ->
                                                                                                    ::std::os::raw::c_int>)
                                                 -> ::std::os::raw::c_int>,
    pub memp_stat: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  *mut *mut DB_MPOOL_STAT,
                                                              arg3:
                                                                  *mut *mut *mut DB_MPOOL_FSTAT,
                                                              arg4: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub memp_stat_print: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        u_int32_t)
                                                   -> ::std::os::raw::c_int>,
    pub memp_sync: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  *mut DB_LSN)
                                             -> ::std::os::raw::c_int>,
    pub memp_trickle: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     ::std::os::raw::c_int,
                                                                 arg3:
                                                                     *mut ::std::os::raw::c_int)
                                                -> ::std::os::raw::c_int>,
    pub mutex_alloc: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    u_int32_t,
                                                                arg3:
                                                                    *mut db_mutex_t)
                                               -> ::std::os::raw::c_int>,
    pub mutex_free: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   db_mutex_t)
                                              -> ::std::os::raw::c_int>,
    pub mutex_get_align: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        *mut u_int32_t)
                                                   -> ::std::os::raw::c_int>,
    pub mutex_get_increment: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                            *mut DB_ENV,
                                                                        arg2:
                                                                            *mut u_int32_t)
                                                       ->
                                                           ::std::os::raw::c_int>,
    pub mutex_get_max: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      *mut u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub mutex_get_tas_spins: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                            *mut DB_ENV,
                                                                        arg2:
                                                                            *mut u_int32_t)
                                                       ->
                                                           ::std::os::raw::c_int>,
    pub mutex_lock: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   db_mutex_t)
                                              -> ::std::os::raw::c_int>,
    pub mutex_set_align: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        u_int32_t)
                                                   -> ::std::os::raw::c_int>,
    pub mutex_set_increment: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                            *mut DB_ENV,
                                                                        arg2:
                                                                            u_int32_t)
                                                       ->
                                                           ::std::os::raw::c_int>,
    pub mutex_set_max: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub mutex_set_tas_spins: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                            *mut DB_ENV,
                                                                        arg2:
                                                                            u_int32_t)
                                                       ->
                                                           ::std::os::raw::c_int>,
    pub mutex_stat: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   *mut *mut DB_MUTEX_STAT,
                                                               arg3:
                                                                   u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub mutex_stat_print: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub mutex_unlock: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     db_mutex_t)
                                                -> ::std::os::raw::c_int>,
    pub open: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_ENV,
                                                         arg2:
                                                             *const ::std::os::raw::c_char,
                                                         arg3: u_int32_t,
                                                         arg4:
                                                             ::std::os::raw::c_int)
                                        -> ::std::os::raw::c_int>,
    pub remove: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DB_ENV,
                                                           arg2:
                                                               *const ::std::os::raw::c_char,
                                                           arg3: u_int32_t)
                                          -> ::std::os::raw::c_int>,
    pub rep_elect: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2: u_int32_t,
                                                              arg3: u_int32_t,
                                                              arg4: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub rep_flush: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV)
                                             -> ::std::os::raw::c_int>,
    pub rep_get_clockskew: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          *mut u_int32_t,
                                                                      arg3:
                                                                          *mut u_int32_t)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub rep_get_config: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       u_int32_t,
                                                                   arg3:
                                                                       *mut ::std::os::raw::c_int)
                                                  -> ::std::os::raw::c_int>,
    pub rep_get_limit: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      *mut u_int32_t,
                                                                  arg3:
                                                                      *mut u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub rep_get_nsites: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       *mut u_int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub rep_get_priority: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub rep_get_request: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        *mut u_int32_t,
                                                                    arg3:
                                                                        *mut u_int32_t)
                                                   -> ::std::os::raw::c_int>,
    pub rep_get_timeout: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        ::std::os::raw::c_int,
                                                                    arg3:
                                                                        *mut u_int32_t)
                                                   -> ::std::os::raw::c_int>,
    pub rep_process_message: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                            *mut DB_ENV,
                                                                        arg2:
                                                                            *mut DBT,
                                                                        arg3:
                                                                            *mut DBT,
                                                                        arg4:
                                                                            ::std::os::raw::c_int,
                                                                        arg5:
                                                                            *mut DB_LSN)
                                                       ->
                                                           ::std::os::raw::c_int>,
    pub rep_set_clockskew: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          u_int32_t,
                                                                      arg3:
                                                                          u_int32_t)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub rep_set_config: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       u_int32_t,
                                                                   arg3:
                                                                       ::std::os::raw::c_int)
                                                  -> ::std::os::raw::c_int>,
    pub rep_set_limit: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      u_int32_t,
                                                                  arg3:
                                                                      u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub rep_set_nsites: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       u_int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub rep_set_priority: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub rep_set_request: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        u_int32_t,
                                                                    arg3:
                                                                        u_int32_t)
                                                   -> ::std::os::raw::c_int>,
    pub rep_set_timeout: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        ::std::os::raw::c_int,
                                                                    arg3:
                                                                        db_timeout_t)
                                                   -> ::std::os::raw::c_int>,
    pub rep_set_transport: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          ::std::os::raw::c_int,
                                                                      arg3:
                                                                          ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                         *mut DB_ENV,
                                                                                                                     arg2:
                                                                                                                         *const DBT,
                                                                                                                     arg3:
                                                                                                                         *const DBT,
                                                                                                                     arg4:
                                                                                                                         *const DB_LSN,
                                                                                                                     arg5:
                                                                                                                         ::std::os::raw::c_int,
                                                                                                                     arg6:
                                                                                                                         u_int32_t)
                                                                                                    ->
                                                                                                        ::std::os::raw::c_int>)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub rep_start: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2: *mut DBT,
                                                              arg3: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub rep_stat: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2:
                                                                 *mut *mut DB_REP_STAT,
                                                             arg3: u_int32_t)
                                            -> ::std::os::raw::c_int>,
    pub rep_stat_print: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       u_int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub rep_sync: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2: u_int32_t)
                                            -> ::std::os::raw::c_int>,
    pub repmgr_add_remote_site: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                               *mut DB_ENV,
                                                                           arg2:
                                                                               *const ::std::os::raw::c_char,
                                                                           arg3:
                                                                               u_int,
                                                                           arg4:
                                                                               *mut ::std::os::raw::c_int,
                                                                           arg5:
                                                                               u_int32_t)
                                                          ->
                                                              ::std::os::raw::c_int>,
    pub repmgr_get_ack_policy: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                              *mut DB_ENV,
                                                                          arg2:
                                                                              *mut ::std::os::raw::c_int)
                                                         ->
                                                             ::std::os::raw::c_int>,
    pub repmgr_set_ack_policy: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                              *mut DB_ENV,
                                                                          arg2:
                                                                              ::std::os::raw::c_int)
                                                         ->
                                                             ::std::os::raw::c_int>,
    pub repmgr_set_local_site: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                              *mut DB_ENV,
                                                                          arg2:
                                                                              *const ::std::os::raw::c_char,
                                                                          arg3:
                                                                              u_int,
                                                                          arg4:
                                                                              u_int32_t)
                                                         ->
                                                             ::std::os::raw::c_int>,
    pub repmgr_site_list: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut u_int,
                                                                     arg3:
                                                                         *mut *mut DB_REPMGR_SITE)
                                                    -> ::std::os::raw::c_int>,
    pub repmgr_start: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     ::std::os::raw::c_int,
                                                                 arg3:
                                                                     u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub repmgr_stat: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut *mut DB_REPMGR_STAT,
                                                                arg3:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub repmgr_stat_print: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          u_int32_t)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub set_alloc: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  ::std::option::Option<extern "C" fn(arg1:
                                                                                                          size_t)
                                                                                            ->
                                                                                                *mut ::std::os::raw::c_void>,
                                                              arg3:
                                                                  ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                 *mut ::std::os::raw::c_void,
                                                                                                             arg2:
                                                                                                                 size_t)
                                                                                            ->
                                                                                                *mut ::std::os::raw::c_void>,
                                                              arg4:
                                                                  ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                 *mut ::std::os::raw::c_void)>)
                                             -> ::std::os::raw::c_int>,
    pub set_app_dispatch: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                        *mut DB_ENV,
                                                                                                                    arg2:
                                                                                                                        *mut DBT,
                                                                                                                    arg3:
                                                                                                                        *mut DB_LSN,
                                                                                                                    arg4:
                                                                                                                        db_recops)
                                                                                                   ->
                                                                                                       ::std::os::raw::c_int>)
                                                    -> ::std::os::raw::c_int>,
    pub set_cache_max: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      u_int32_t,
                                                                  arg3:
                                                                      u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub set_cachesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      u_int32_t,
                                                                  arg3:
                                                                      u_int32_t,
                                                                  arg4:
                                                                      ::std::os::raw::c_int)
                                                 -> ::std::os::raw::c_int>,
    pub set_create_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       *const ::std::os::raw::c_char)
                                                  -> ::std::os::raw::c_int>,
    pub set_data_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     *const ::std::os::raw::c_char)
                                                -> ::std::os::raw::c_int>,
    pub set_encrypt: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *const ::std::os::raw::c_char,
                                                                arg3:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub set_errcall: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                   *const DB_ENV,
                                                                                                               arg2:
                                                                                                                   *const ::std::os::raw::c_char,
                                                                                                               arg3:
                                                                                                                   *const ::std::os::raw::c_char)>)>,
    pub set_errfile: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut FILE)>,
    pub set_errpfx: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   *const ::std::os::raw::c_char)>,
    pub set_event_notify: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                        *mut DB_ENV,
                                                                                                                    arg2:
                                                                                                                        u_int32_t,
                                                                                                                    arg3:
                                                                                                                        *mut ::std::os::raw::c_void)>)
                                                    -> ::std::os::raw::c_int>,
    pub set_feedback: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                    *mut DB_ENV,
                                                                                                                arg2:
                                                                                                                    ::std::os::raw::c_int,
                                                                                                                arg3:
                                                                                                                    ::std::os::raw::c_int)>)
                                                -> ::std::os::raw::c_int>,
    pub set_flags: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2: u_int32_t,
                                                              arg3:
                                                                  ::std::os::raw::c_int)
                                             -> ::std::os::raw::c_int>,
    pub set_intermediate_dir_mode: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                  *mut DB_ENV,
                                                                              arg2:
                                                                                  *const ::std::os::raw::c_char)
                                                             ->
                                                                 ::std::os::raw::c_int>,
    pub set_isalive: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                   *mut DB_ENV,
                                                                                                               arg2:
                                                                                                                   pid_t,
                                                                                                               arg3:
                                                                                                                   db_threadid_t,
                                                                                                               arg4:
                                                                                                                   u_int32_t)
                                                                                              ->
                                                                                                  ::std::os::raw::c_int>)
                                               -> ::std::os::raw::c_int>,
    pub set_lg_bsize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut DB_ENV,
                                                                 arg2:
                                                                     u_int32_t)
                                                -> ::std::os::raw::c_int>,
    pub set_lg_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   *const ::std::os::raw::c_char)
                                              -> ::std::os::raw::c_int>,
    pub set_lg_filemode: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        ::std::os::raw::c_int)
                                                   -> ::std::os::raw::c_int>,
    pub set_lg_max: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub set_lg_regionmax: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub set_lk_conflicts: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut u_int8_t,
                                                                     arg3:
                                                                         ::std::os::raw::c_int)
                                                    -> ::std::os::raw::c_int>,
    pub set_lk_detect: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      u_int32_t)
                                                 -> ::std::os::raw::c_int>,
    pub set_lk_max_lockers: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                           *mut DB_ENV,
                                                                       arg2:
                                                                           u_int32_t)
                                                      ->
                                                          ::std::os::raw::c_int>,
    pub set_lk_max_locks: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub set_lk_max_objects: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                           *mut DB_ENV,
                                                                       arg2:
                                                                           u_int32_t)
                                                      ->
                                                          ::std::os::raw::c_int>,
    pub set_lk_partitions: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          u_int32_t)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub set_mp_max_openfd: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          ::std::os::raw::c_int)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub set_mp_max_write: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         ::std::os::raw::c_int,
                                                                     arg3:
                                                                         db_timeout_t)
                                                    -> ::std::os::raw::c_int>,
    pub set_mp_mmapsize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        size_t)
                                                   -> ::std::os::raw::c_int>,
    pub set_mp_pagesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                        *mut DB_ENV,
                                                                    arg2:
                                                                        u_int32_t)
                                                   -> ::std::os::raw::c_int>,
    pub set_mp_tablesize: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub set_msgcall: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                   *const DB_ENV,
                                                                                                               arg2:
                                                                                                                   *const ::std::os::raw::c_char)>)>,
    pub set_msgfile: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut FILE)>,
    pub set_paniccall: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                     *mut DB_ENV,
                                                                                                                 arg2:
                                                                                                                     ::std::os::raw::c_int)>)
                                                 -> ::std::os::raw::c_int>,
    pub set_rpc_server: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       *mut ::std::os::raw::c_void,
                                                                   arg3:
                                                                       *const ::std::os::raw::c_char,
                                                                   arg4:
                                                                       ::std::os::raw::c_long,
                                                                   arg5:
                                                                       ::std::os::raw::c_long,
                                                                   arg6:
                                                                       u_int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub set_shm_key: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    ::std::os::raw::c_long)
                                               -> ::std::os::raw::c_int>,
    pub set_thread_count: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         u_int32_t)
                                                    -> ::std::os::raw::c_int>,
    pub set_thread_id: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut DB_ENV,
                                                                  arg2:
                                                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                     *mut DB_ENV,
                                                                                                                 arg2:
                                                                                                                     *mut pid_t,
                                                                                                                 arg3:
                                                                                                                     *mut db_threadid_t)>)
                                                 -> ::std::os::raw::c_int>,
    pub set_thread_id_string: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                             *mut DB_ENV,
                                                                         arg2:
                                                                             ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                                            *mut DB_ENV,
                                                                                                                        arg2:
                                                                                                                            pid_t,
                                                                                                                        arg3:
                                                                                                                            db_threadid_t,
                                                                                                                        arg4:
                                                                                                                            *mut ::std::os::raw::c_char)
                                                                                                       ->
                                                                                                           *mut ::std::os::raw::c_char>)
                                                        ->
                                                            ::std::os::raw::c_int>,
    pub set_timeout: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    db_timeout_t,
                                                                arg3:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub set_tmp_dir: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *const ::std::os::raw::c_char)
                                               -> ::std::os::raw::c_int>,
    pub set_tx_max: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub set_tx_timestamp: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut DB_ENV,
                                                                     arg2:
                                                                         *mut time_t)
                                                    -> ::std::os::raw::c_int>,
    pub set_verbose: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    u_int32_t,
                                                                arg3:
                                                                    ::std::os::raw::c_int)
                                               -> ::std::os::raw::c_int>,
    pub stat_print: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut DB_ENV,
                                                               arg2:
                                                                   u_int32_t)
                                              -> ::std::os::raw::c_int>,
    pub txn_begin: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut DB_ENV,
                                                              arg2:
                                                                  *mut DB_TXN,
                                                              arg3:
                                                                  *mut *mut DB_TXN,
                                                              arg4: u_int32_t)
                                             -> ::std::os::raw::c_int>,
    pub txn_checkpoint: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       u_int32_t,
                                                                   arg3:
                                                                       u_int32_t,
                                                                   arg4:
                                                                       u_int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub txn_recover: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut DB_ENV,
                                                                arg2:
                                                                    *mut DB_PREPLIST,
                                                                arg3:
                                                                    u_int32_t,
                                                                arg4:
                                                                    *mut u_int32_t,
                                                                arg5:
                                                                    u_int32_t)
                                               -> ::std::os::raw::c_int>,
    pub txn_stat: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut DB_ENV,
                                                             arg2:
                                                                 *mut *mut DB_TXN_STAT,
                                                             arg3: u_int32_t)
                                            -> ::std::os::raw::c_int>,
    pub txn_stat_print: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                       *mut DB_ENV,
                                                                   arg2:
                                                                       u_int32_t)
                                                  -> ::std::os::raw::c_int>,
    pub prdbt: ::std::option::Option<unsafe extern "C" fn(arg1: *mut DBT,
                                                          arg2:
                                                              ::std::os::raw::c_int,
                                                          arg3:
                                                              *const ::std::os::raw::c_char,
                                                          arg4:
                                                              *mut ::std::os::raw::c_void,
                                                          arg5:
                                                              ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                             *mut ::std::os::raw::c_void,
                                                                                                         arg2:
                                                                                                             *const ::std::os::raw::c_void)
                                                                                        ->
                                                                                            ::std::os::raw::c_int>,
                                                          arg6:
                                                              ::std::os::raw::c_int)
                                         -> ::std::os::raw::c_int>,
}
impl ::std::default::Default for __db_env {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __db_distab {
    pub int_dispatch: *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut ENV,
                                                                      arg2:
                                                                          *mut DBT,
                                                                      arg3:
                                                                          *mut DB_LSN,
                                                                      arg4:
                                                                          db_recops,
                                                                      arg5:
                                                                          *mut ::std::os::raw::c_void)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub int_size: size_t,
    pub ext_dispatch: *mut ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                          *mut DB_ENV,
                                                                      arg2:
                                                                          *mut DBT,
                                                                      arg3:
                                                                          *mut DB_LSN,
                                                                      arg4:
                                                                          db_recops)
                                                     ->
                                                         ::std::os::raw::c_int>,
    pub ext_size: size_t,
}
impl ::std::default::Default for __db_distab {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __builtin_va_list = [__va_list_tag; 1usize];
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __va_list_tag {
    pub gp_offset: ::std::os::raw::c_uint,
    pub fp_offset: ::std::os::raw::c_uint,
    pub overflow_arg_area: *mut ::std::os::raw::c_void,
    pub reg_save_area: *mut ::std::os::raw::c_void,
}
impl ::std::default::Default for __va_list_tag {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[link(name = "db", kind = "dylib")]
extern "C" {
    pub static mut _IO_2_1_stdin_: _IO_FILE_plus;
    pub static mut _IO_2_1_stdout_: _IO_FILE_plus;
    pub static mut _IO_2_1_stderr_: _IO_FILE_plus;
    pub static mut stdin: *mut _IO_FILE;
    pub static mut stdout: *mut _IO_FILE;
    pub static mut stderr: *mut _IO_FILE;
    pub static mut sys_nerr: ::std::os::raw::c_int;
    pub static mut sys_errlist: [*const ::std::os::raw::c_char; 0usize];
    pub static mut __environ: *mut *mut ::std::os::raw::c_char;
    pub static mut optarg: *mut ::std::os::raw::c_char;
    pub static mut optind: ::std::os::raw::c_int;
    pub static mut opterr: ::std::os::raw::c_int;
    pub static mut optopt: ::std::os::raw::c_int;
    pub static mut __tzname: [*mut ::std::os::raw::c_char; 2usize];
    pub static mut __daylight: ::std::os::raw::c_int;
    pub static mut __timezone: ::std::os::raw::c_long;
    pub static mut tzname: [*mut ::std::os::raw::c_char; 2usize];
    pub static mut daylight: ::std::os::raw::c_int;
    pub static mut timezone: ::std::os::raw::c_long;
}
#[link(name = "db", kind = "dylib")]
extern "C" {
    pub fn select(__nfds: ::std::os::raw::c_int, __readfds: *mut fd_set,
                  __writefds: *mut fd_set, __exceptfds: *mut fd_set,
                  __timeout: *mut timeval) -> ::std::os::raw::c_int;
    pub fn pselect(__nfds: ::std::os::raw::c_int, __readfds: *mut fd_set,
                   __writefds: *mut fd_set, __exceptfds: *mut fd_set,
                   __timeout: *const timespec, __sigmask: *const __sigset_t)
     -> ::std::os::raw::c_int;
    pub fn gnu_dev_major(__dev: ::std::os::raw::c_ulonglong)
     -> ::std::os::raw::c_uint;
    pub fn gnu_dev_minor(__dev: ::std::os::raw::c_ulonglong)
     -> ::std::os::raw::c_uint;
    pub fn gnu_dev_makedev(__major: ::std::os::raw::c_uint,
                           __minor: ::std::os::raw::c_uint)
     -> ::std::os::raw::c_ulonglong;
    pub fn imaxabs(__n: intmax_t) -> intmax_t;
    pub fn imaxdiv(__numer: intmax_t, __denom: intmax_t) -> imaxdiv_t;
    pub fn strtoimax(__nptr: *const ::std::os::raw::c_char,
                     __endptr: *mut *mut ::std::os::raw::c_char,
                     __base: ::std::os::raw::c_int) -> intmax_t;
    pub fn strtoumax(__nptr: *const ::std::os::raw::c_char,
                     __endptr: *mut *mut ::std::os::raw::c_char,
                     __base: ::std::os::raw::c_int) -> uintmax_t;
    pub fn wcstoimax(__nptr: *const __gwchar_t,
                     __endptr: *mut *mut __gwchar_t,
                     __base: ::std::os::raw::c_int) -> intmax_t;
    pub fn wcstoumax(__nptr: *const __gwchar_t,
                     __endptr: *mut *mut __gwchar_t,
                     __base: ::std::os::raw::c_int) -> uintmax_t;
    pub fn __underflow(arg1: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn __uflow(arg1: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn __overflow(arg1: *mut _IO_FILE, arg2: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn _IO_getc(__fp: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_putc(__c: ::std::os::raw::c_int, __fp: *mut _IO_FILE)
     -> ::std::os::raw::c_int;
    pub fn _IO_feof(__fp: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_ferror(__fp: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_peekc_locked(__fp: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_flockfile(arg1: *mut _IO_FILE);
    pub fn _IO_funlockfile(arg1: *mut _IO_FILE);
    pub fn _IO_ftrylockfile(arg1: *mut _IO_FILE) -> ::std::os::raw::c_int;
    pub fn _IO_vfscanf(arg1: *mut _IO_FILE,
                       arg2: *const ::std::os::raw::c_char,
                       arg3: __gnuc_va_list, arg4: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn _IO_vfprintf(arg1: *mut _IO_FILE,
                        arg2: *const ::std::os::raw::c_char,
                        arg3: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn _IO_padn(arg1: *mut _IO_FILE, arg2: ::std::os::raw::c_int,
                    arg3: __ssize_t) -> __ssize_t;
    pub fn _IO_sgetn(arg1: *mut _IO_FILE, arg2: *mut ::std::os::raw::c_void,
                     arg3: size_t) -> size_t;
    pub fn _IO_seekoff(arg1: *mut _IO_FILE, arg2: __off64_t,
                       arg3: ::std::os::raw::c_int,
                       arg4: ::std::os::raw::c_int) -> __off64_t;
    pub fn _IO_seekpos(arg1: *mut _IO_FILE, arg2: __off64_t,
                       arg3: ::std::os::raw::c_int) -> __off64_t;
    pub fn _IO_free_backup_area(arg1: *mut _IO_FILE);
    pub fn remove(__filename: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn rename(__old: *const ::std::os::raw::c_char,
                  __new: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn renameat(__oldfd: ::std::os::raw::c_int,
                    __old: *const ::std::os::raw::c_char,
                    __newfd: ::std::os::raw::c_int,
                    __new: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn tmpfile() -> *mut FILE;
    pub fn tmpnam(__s: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn tmpnam_r(__s: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn tempnam(__dir: *const ::std::os::raw::c_char,
                   __pfx: *const ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn fclose(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fflush(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fflush_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fopen(__filename: *const ::std::os::raw::c_char,
                 __modes: *const ::std::os::raw::c_char) -> *mut FILE;
    pub fn freopen(__filename: *const ::std::os::raw::c_char,
                   __modes: *const ::std::os::raw::c_char,
                   __stream: *mut FILE) -> *mut FILE;
    pub fn fdopen(__fd: ::std::os::raw::c_int,
                  __modes: *const ::std::os::raw::c_char) -> *mut FILE;
    pub fn fmemopen(__s: *mut ::std::os::raw::c_void, __len: size_t,
                    __modes: *const ::std::os::raw::c_char) -> *mut FILE;
    pub fn open_memstream(__bufloc: *mut *mut ::std::os::raw::c_char,
                          __sizeloc: *mut size_t) -> *mut FILE;
    pub fn setbuf(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char);
    pub fn setvbuf(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char,
                   __modes: ::std::os::raw::c_int, __n: size_t)
     -> ::std::os::raw::c_int;
    pub fn setbuffer(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char,
                     __size: size_t);
    pub fn setlinebuf(__stream: *mut FILE);
    pub fn fprintf(__stream: *mut FILE,
                   __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn printf(__format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn sprintf(__s: *mut ::std::os::raw::c_char,
                   __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn vfprintf(__s: *mut FILE, __format: *const ::std::os::raw::c_char,
                    __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vprintf(__format: *const ::std::os::raw::c_char,
                   __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vsprintf(__s: *mut ::std::os::raw::c_char,
                    __format: *const ::std::os::raw::c_char,
                    __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn snprintf(__s: *mut ::std::os::raw::c_char, __maxlen: size_t,
                    __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn vsnprintf(__s: *mut ::std::os::raw::c_char, __maxlen: size_t,
                     __format: *const ::std::os::raw::c_char,
                     __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vdprintf(__fd: ::std::os::raw::c_int,
                    __fmt: *const ::std::os::raw::c_char,
                    __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn dprintf(__fd: ::std::os::raw::c_int,
                   __fmt: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn fscanf(__stream: *mut FILE,
                  __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn scanf(__format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn sscanf(__s: *const ::std::os::raw::c_char,
                  __format: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn vfscanf(__s: *mut FILE, __format: *const ::std::os::raw::c_char,
                   __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vscanf(__format: *const ::std::os::raw::c_char,
                  __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn vsscanf(__s: *const ::std::os::raw::c_char,
                   __format: *const ::std::os::raw::c_char,
                   __arg: __gnuc_va_list) -> ::std::os::raw::c_int;
    pub fn fgetc(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn getc(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn getchar() -> ::std::os::raw::c_int;
    pub fn getc_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn getchar_unlocked() -> ::std::os::raw::c_int;
    pub fn fgetc_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fputc(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn putc(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn putchar(__c: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn fputc_unlocked(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn putc_unlocked(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn putchar_unlocked(__c: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn getw(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn putw(__w: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn fgets(__s: *mut ::std::os::raw::c_char, __n: ::std::os::raw::c_int,
                 __stream: *mut FILE) -> *mut ::std::os::raw::c_char;
    pub fn gets(__s: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn __getdelim(__lineptr: *mut *mut ::std::os::raw::c_char,
                      __n: *mut size_t, __delimiter: ::std::os::raw::c_int,
                      __stream: *mut FILE) -> __ssize_t;
    pub fn getdelim(__lineptr: *mut *mut ::std::os::raw::c_char,
                    __n: *mut size_t, __delimiter: ::std::os::raw::c_int,
                    __stream: *mut FILE) -> __ssize_t;
    pub fn getline(__lineptr: *mut *mut ::std::os::raw::c_char,
                   __n: *mut size_t, __stream: *mut FILE) -> __ssize_t;
    pub fn fputs(__s: *const ::std::os::raw::c_char, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn puts(__s: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn ungetc(__c: ::std::os::raw::c_int, __stream: *mut FILE)
     -> ::std::os::raw::c_int;
    pub fn fread(__ptr: *mut ::std::os::raw::c_void, __size: size_t,
                 __n: size_t, __stream: *mut FILE) -> size_t;
    pub fn fwrite(__ptr: *const ::std::os::raw::c_void, __size: size_t,
                  __n: size_t, __s: *mut FILE) -> size_t;
    pub fn fread_unlocked(__ptr: *mut ::std::os::raw::c_void, __size: size_t,
                          __n: size_t, __stream: *mut FILE) -> size_t;
    pub fn fwrite_unlocked(__ptr: *const ::std::os::raw::c_void,
                           __size: size_t, __n: size_t, __stream: *mut FILE)
     -> size_t;
    pub fn fseek(__stream: *mut FILE, __off: ::std::os::raw::c_long,
                 __whence: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn ftell(__stream: *mut FILE) -> ::std::os::raw::c_long;
    pub fn rewind(__stream: *mut FILE);
    pub fn fseeko(__stream: *mut FILE, __off: __off_t,
                  __whence: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn ftello(__stream: *mut FILE) -> __off_t;
    pub fn fgetpos(__stream: *mut FILE, __pos: *mut fpos_t)
     -> ::std::os::raw::c_int;
    pub fn fsetpos(__stream: *mut FILE, __pos: *const fpos_t)
     -> ::std::os::raw::c_int;
    pub fn clearerr(__stream: *mut FILE);
    pub fn feof(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn ferror(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn clearerr_unlocked(__stream: *mut FILE);
    pub fn feof_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn ferror_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn perror(__s: *const ::std::os::raw::c_char);
    pub fn fileno(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fileno_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn popen(__command: *const ::std::os::raw::c_char,
                 __modes: *const ::std::os::raw::c_char) -> *mut FILE;
    pub fn pclose(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn ctermid(__s: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn flockfile(__stream: *mut FILE);
    pub fn ftrylockfile(__stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn funlockfile(__stream: *mut FILE);
    pub fn access(__name: *const ::std::os::raw::c_char,
                  __type: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn faccessat(__fd: ::std::os::raw::c_int,
                     __file: *const ::std::os::raw::c_char,
                     __type: ::std::os::raw::c_int,
                     __flag: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn lseek(__fd: ::std::os::raw::c_int, __offset: __off_t,
                 __whence: ::std::os::raw::c_int) -> __off_t;
    pub fn close(__fd: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn read(__fd: ::std::os::raw::c_int,
                __buf: *mut ::std::os::raw::c_void, __nbytes: size_t)
     -> ssize_t;
    pub fn write(__fd: ::std::os::raw::c_int,
                 __buf: *const ::std::os::raw::c_void, __n: size_t)
     -> ssize_t;
    pub fn pread(__fd: ::std::os::raw::c_int,
                 __buf: *mut ::std::os::raw::c_void, __nbytes: size_t,
                 __offset: __off_t) -> ssize_t;
    pub fn pwrite(__fd: ::std::os::raw::c_int,
                  __buf: *const ::std::os::raw::c_void, __n: size_t,
                  __offset: __off_t) -> ssize_t;
    pub fn pipe(__pipedes: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn alarm(__seconds: ::std::os::raw::c_uint) -> ::std::os::raw::c_uint;
    pub fn sleep(__seconds: ::std::os::raw::c_uint) -> ::std::os::raw::c_uint;
    pub fn ualarm(__value: __useconds_t, __interval: __useconds_t)
     -> __useconds_t;
    pub fn usleep(__useconds: __useconds_t) -> ::std::os::raw::c_int;
    pub fn pause() -> ::std::os::raw::c_int;
    pub fn chown(__file: *const ::std::os::raw::c_char, __owner: __uid_t,
                 __group: __gid_t) -> ::std::os::raw::c_int;
    pub fn fchown(__fd: ::std::os::raw::c_int, __owner: __uid_t,
                  __group: __gid_t) -> ::std::os::raw::c_int;
    pub fn lchown(__file: *const ::std::os::raw::c_char, __owner: __uid_t,
                  __group: __gid_t) -> ::std::os::raw::c_int;
    pub fn fchownat(__fd: ::std::os::raw::c_int,
                    __file: *const ::std::os::raw::c_char, __owner: __uid_t,
                    __group: __gid_t, __flag: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn chdir(__path: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn fchdir(__fd: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn getcwd(__buf: *mut ::std::os::raw::c_char, __size: size_t)
     -> *mut ::std::os::raw::c_char;
    pub fn getwd(__buf: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn dup(__fd: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn dup2(__fd: ::std::os::raw::c_int, __fd2: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn execve(__path: *const ::std::os::raw::c_char,
                  __argv: *mut *mut ::std::os::raw::c_char,
                  __envp: *mut *mut ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn fexecve(__fd: ::std::os::raw::c_int,
                   __argv: *mut *mut ::std::os::raw::c_char,
                   __envp: *mut *mut ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn execv(__path: *const ::std::os::raw::c_char,
                 __argv: *mut *mut ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn execle(__path: *const ::std::os::raw::c_char,
                  __arg: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn execl(__path: *const ::std::os::raw::c_char,
                 __arg: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn execvp(__file: *const ::std::os::raw::c_char,
                  __argv: *mut *mut ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn execlp(__file: *const ::std::os::raw::c_char,
                  __arg: *const ::std::os::raw::c_char, ...)
     -> ::std::os::raw::c_int;
    pub fn nice(__inc: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn _exit(__status: ::std::os::raw::c_int);
    pub fn pathconf(__path: *const ::std::os::raw::c_char,
                    __name: ::std::os::raw::c_int) -> ::std::os::raw::c_long;
    pub fn fpathconf(__fd: ::std::os::raw::c_int,
                     __name: ::std::os::raw::c_int) -> ::std::os::raw::c_long;
    pub fn sysconf(__name: ::std::os::raw::c_int) -> ::std::os::raw::c_long;
    pub fn confstr(__name: ::std::os::raw::c_int,
                   __buf: *mut ::std::os::raw::c_char, __len: size_t)
     -> size_t;
    pub fn getpid() -> __pid_t;
    pub fn getppid() -> __pid_t;
    pub fn getpgrp() -> __pid_t;
    pub fn __getpgid(__pid: __pid_t) -> __pid_t;
    pub fn getpgid(__pid: __pid_t) -> __pid_t;
    pub fn setpgid(__pid: __pid_t, __pgid: __pid_t) -> ::std::os::raw::c_int;
    pub fn setpgrp() -> ::std::os::raw::c_int;
    pub fn setsid() -> __pid_t;
    pub fn getsid(__pid: __pid_t) -> __pid_t;
    pub fn getuid() -> __uid_t;
    pub fn geteuid() -> __uid_t;
    pub fn getgid() -> __gid_t;
    pub fn getegid() -> __gid_t;
    pub fn getgroups(__size: ::std::os::raw::c_int, __list: *mut __gid_t)
     -> ::std::os::raw::c_int;
    pub fn setuid(__uid: __uid_t) -> ::std::os::raw::c_int;
    pub fn setreuid(__ruid: __uid_t, __euid: __uid_t)
     -> ::std::os::raw::c_int;
    pub fn seteuid(__uid: __uid_t) -> ::std::os::raw::c_int;
    pub fn setgid(__gid: __gid_t) -> ::std::os::raw::c_int;
    pub fn setregid(__rgid: __gid_t, __egid: __gid_t)
     -> ::std::os::raw::c_int;
    pub fn setegid(__gid: __gid_t) -> ::std::os::raw::c_int;
    pub fn fork() -> __pid_t;
    pub fn vfork() -> __pid_t;
    pub fn ttyname(__fd: ::std::os::raw::c_int)
     -> *mut ::std::os::raw::c_char;
    pub fn ttyname_r(__fd: ::std::os::raw::c_int,
                     __buf: *mut ::std::os::raw::c_char, __buflen: size_t)
     -> ::std::os::raw::c_int;
    pub fn isatty(__fd: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn ttyslot() -> ::std::os::raw::c_int;
    pub fn link(__from: *const ::std::os::raw::c_char,
                __to: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn linkat(__fromfd: ::std::os::raw::c_int,
                  __from: *const ::std::os::raw::c_char,
                  __tofd: ::std::os::raw::c_int,
                  __to: *const ::std::os::raw::c_char,
                  __flags: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn symlink(__from: *const ::std::os::raw::c_char,
                   __to: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn readlink(__path: *const ::std::os::raw::c_char,
                    __buf: *mut ::std::os::raw::c_char, __len: size_t)
     -> ssize_t;
    pub fn symlinkat(__from: *const ::std::os::raw::c_char,
                     __tofd: ::std::os::raw::c_int,
                     __to: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn readlinkat(__fd: ::std::os::raw::c_int,
                      __path: *const ::std::os::raw::c_char,
                      __buf: *mut ::std::os::raw::c_char, __len: size_t)
     -> ssize_t;
    pub fn unlink(__name: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn unlinkat(__fd: ::std::os::raw::c_int,
                    __name: *const ::std::os::raw::c_char,
                    __flag: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn rmdir(__path: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn tcgetpgrp(__fd: ::std::os::raw::c_int) -> __pid_t;
    pub fn tcsetpgrp(__fd: ::std::os::raw::c_int, __pgrp_id: __pid_t)
     -> ::std::os::raw::c_int;
    pub fn getlogin() -> *mut ::std::os::raw::c_char;
    pub fn getlogin_r(__name: *mut ::std::os::raw::c_char, __name_len: size_t)
     -> ::std::os::raw::c_int;
    pub fn setlogin(__name: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn getopt(___argc: ::std::os::raw::c_int,
                  ___argv: *const *mut ::std::os::raw::c_char,
                  __shortopts: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn gethostname(__name: *mut ::std::os::raw::c_char, __len: size_t)
     -> ::std::os::raw::c_int;
    pub fn sethostname(__name: *const ::std::os::raw::c_char, __len: size_t)
     -> ::std::os::raw::c_int;
    pub fn sethostid(__id: ::std::os::raw::c_long) -> ::std::os::raw::c_int;
    pub fn getdomainname(__name: *mut ::std::os::raw::c_char, __len: size_t)
     -> ::std::os::raw::c_int;
    pub fn setdomainname(__name: *const ::std::os::raw::c_char, __len: size_t)
     -> ::std::os::raw::c_int;
    pub fn vhangup() -> ::std::os::raw::c_int;
    pub fn revoke(__file: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn profil(__sample_buffer: *mut ::std::os::raw::c_ushort,
                  __size: size_t, __offset: size_t,
                  __scale: ::std::os::raw::c_uint) -> ::std::os::raw::c_int;
    pub fn acct(__name: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn getusershell() -> *mut ::std::os::raw::c_char;
    pub fn endusershell();
    pub fn setusershell();
    pub fn daemon(__nochdir: ::std::os::raw::c_int,
                  __noclose: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn chroot(__path: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn getpass(__prompt: *const ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn fsync(__fd: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn gethostid() -> ::std::os::raw::c_long;
    pub fn sync();
    pub fn getpagesize() -> ::std::os::raw::c_int;
    pub fn getdtablesize() -> ::std::os::raw::c_int;
    pub fn truncate(__file: *const ::std::os::raw::c_char, __length: __off_t)
     -> ::std::os::raw::c_int;
    pub fn ftruncate(__fd: ::std::os::raw::c_int, __length: __off_t)
     -> ::std::os::raw::c_int;
    pub fn brk(__addr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
    pub fn sbrk(__delta: intptr_t) -> *mut ::std::os::raw::c_void;
    pub fn syscall(__sysno: ::std::os::raw::c_long, ...)
     -> ::std::os::raw::c_long;
    pub fn lockf(__fd: ::std::os::raw::c_int, __cmd: ::std::os::raw::c_int,
                 __len: __off_t) -> ::std::os::raw::c_int;
    pub fn fdatasync(__fildes: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn __sched_cpucount(__setsize: size_t, __setp: *const cpu_set_t)
     -> ::std::os::raw::c_int;
    pub fn __sched_cpualloc(__count: size_t) -> *mut cpu_set_t;
    pub fn __sched_cpufree(__set: *mut cpu_set_t);
    pub fn sched_setparam(__pid: __pid_t, __param: *const sched_param)
     -> ::std::os::raw::c_int;
    pub fn sched_getparam(__pid: __pid_t, __param: *mut sched_param)
     -> ::std::os::raw::c_int;
    pub fn sched_setscheduler(__pid: __pid_t, __policy: ::std::os::raw::c_int,
                              __param: *const sched_param)
     -> ::std::os::raw::c_int;
    pub fn sched_getscheduler(__pid: __pid_t) -> ::std::os::raw::c_int;
    pub fn sched_yield() -> ::std::os::raw::c_int;
    pub fn sched_get_priority_max(__algorithm: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn sched_get_priority_min(__algorithm: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn sched_rr_get_interval(__pid: __pid_t, __t: *mut timespec)
     -> ::std::os::raw::c_int;
    pub fn clock() -> clock_t;
    pub fn time(__timer: *mut time_t) -> time_t;
    pub fn difftime(__time1: time_t, __time0: time_t) -> f64;
    pub fn mktime(__tp: *mut tm) -> time_t;
    pub fn strftime(__s: *mut ::std::os::raw::c_char, __maxsize: size_t,
                    __format: *const ::std::os::raw::c_char, __tp: *const tm)
     -> size_t;
    pub fn strftime_l(__s: *mut ::std::os::raw::c_char, __maxsize: size_t,
                      __format: *const ::std::os::raw::c_char,
                      __tp: *const tm, __loc: __locale_t) -> size_t;
    pub fn gmtime(__timer: *const time_t) -> *mut tm;
    pub fn localtime(__timer: *const time_t) -> *mut tm;
    pub fn gmtime_r(__timer: *const time_t, __tp: *mut tm) -> *mut tm;
    pub fn localtime_r(__timer: *const time_t, __tp: *mut tm) -> *mut tm;
    pub fn asctime(__tp: *const tm) -> *mut ::std::os::raw::c_char;
    pub fn ctime(__timer: *const time_t) -> *mut ::std::os::raw::c_char;
    pub fn asctime_r(__tp: *const tm, __buf: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn ctime_r(__timer: *const time_t, __buf: *mut ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
    pub fn tzset();
    pub fn stime(__when: *const time_t) -> ::std::os::raw::c_int;
    pub fn timegm(__tp: *mut tm) -> time_t;
    pub fn timelocal(__tp: *mut tm) -> time_t;
    pub fn dysize(__year: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn nanosleep(__requested_time: *const timespec,
                     __remaining: *mut timespec) -> ::std::os::raw::c_int;
    pub fn clock_getres(__clock_id: clockid_t, __res: *mut timespec)
     -> ::std::os::raw::c_int;
    pub fn clock_gettime(__clock_id: clockid_t, __tp: *mut timespec)
     -> ::std::os::raw::c_int;
    pub fn clock_settime(__clock_id: clockid_t, __tp: *const timespec)
     -> ::std::os::raw::c_int;
    pub fn clock_nanosleep(__clock_id: clockid_t,
                           __flags: ::std::os::raw::c_int,
                           __req: *const timespec, __rem: *mut timespec)
     -> ::std::os::raw::c_int;
    pub fn clock_getcpuclockid(__pid: pid_t, __clock_id: *mut clockid_t)
     -> ::std::os::raw::c_int;
    pub fn timer_create(__clock_id: clockid_t, __evp: *mut sigevent,
                        __timerid: *mut timer_t) -> ::std::os::raw::c_int;
    pub fn timer_delete(__timerid: timer_t) -> ::std::os::raw::c_int;
    pub fn timer_settime(__timerid: timer_t, __flags: ::std::os::raw::c_int,
                         __value: *const itimerspec,
                         __ovalue: *mut itimerspec) -> ::std::os::raw::c_int;
    pub fn timer_gettime(__timerid: timer_t, __value: *mut itimerspec)
     -> ::std::os::raw::c_int;
    pub fn timer_getoverrun(__timerid: timer_t) -> ::std::os::raw::c_int;
    pub fn pthread_create(__newthread: *mut pthread_t,
                          __attr: *const pthread_attr_t,
                          __start_routine:
                              ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                             *mut ::std::os::raw::c_void)
                                                        ->
                                                            *mut ::std::os::raw::c_void>,
                          __arg: *mut ::std::os::raw::c_void)
     -> ::std::os::raw::c_int;
    pub fn pthread_exit(__retval: *mut ::std::os::raw::c_void);
    pub fn pthread_join(__th: pthread_t,
                        __thread_return: *mut *mut ::std::os::raw::c_void)
     -> ::std::os::raw::c_int;
    pub fn pthread_detach(__th: pthread_t) -> ::std::os::raw::c_int;
    pub fn pthread_self() -> pthread_t;
    pub fn pthread_equal(__thread1: pthread_t, __thread2: pthread_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_init(__attr: *mut pthread_attr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_destroy(__attr: *mut pthread_attr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_getdetachstate(__attr: *const pthread_attr_t,
                                       __detachstate:
                                           *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_setdetachstate(__attr: *mut pthread_attr_t,
                                       __detachstate: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_getguardsize(__attr: *const pthread_attr_t,
                                     __guardsize: *mut size_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_setguardsize(__attr: *mut pthread_attr_t,
                                     __guardsize: size_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_getschedparam(__attr: *const pthread_attr_t,
                                      __param: *mut sched_param)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_setschedparam(__attr: *mut pthread_attr_t,
                                      __param: *const sched_param)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_getschedpolicy(__attr: *const pthread_attr_t,
                                       __policy: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_setschedpolicy(__attr: *mut pthread_attr_t,
                                       __policy: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_getinheritsched(__attr: *const pthread_attr_t,
                                        __inherit: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_setinheritsched(__attr: *mut pthread_attr_t,
                                        __inherit: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_getscope(__attr: *const pthread_attr_t,
                                 __scope: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_setscope(__attr: *mut pthread_attr_t,
                                 __scope: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_getstackaddr(__attr: *const pthread_attr_t,
                                     __stackaddr:
                                         *mut *mut ::std::os::raw::c_void)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_setstackaddr(__attr: *mut pthread_attr_t,
                                     __stackaddr: *mut ::std::os::raw::c_void)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_getstacksize(__attr: *const pthread_attr_t,
                                     __stacksize: *mut size_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_setstacksize(__attr: *mut pthread_attr_t,
                                     __stacksize: size_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_getstack(__attr: *const pthread_attr_t,
                                 __stackaddr:
                                     *mut *mut ::std::os::raw::c_void,
                                 __stacksize: *mut size_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_attr_setstack(__attr: *mut pthread_attr_t,
                                 __stackaddr: *mut ::std::os::raw::c_void,
                                 __stacksize: size_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_setschedparam(__target_thread: pthread_t,
                                 __policy: ::std::os::raw::c_int,
                                 __param: *const sched_param)
     -> ::std::os::raw::c_int;
    pub fn pthread_getschedparam(__target_thread: pthread_t,
                                 __policy: *mut ::std::os::raw::c_int,
                                 __param: *mut sched_param)
     -> ::std::os::raw::c_int;
    pub fn pthread_setschedprio(__target_thread: pthread_t,
                                __prio: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_once(__once_control: *mut pthread_once_t,
                        __init_routine:
                            ::std::option::Option<extern "C" fn()>)
     -> ::std::os::raw::c_int;
    pub fn pthread_setcancelstate(__state: ::std::os::raw::c_int,
                                  __oldstate: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_setcanceltype(__type: ::std::os::raw::c_int,
                                 __oldtype: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_cancel(__th: pthread_t) -> ::std::os::raw::c_int;
    pub fn pthread_testcancel();
    pub fn __pthread_register_cancel(__buf: *mut __pthread_unwind_buf_t);
    pub fn __pthread_unregister_cancel(__buf: *mut __pthread_unwind_buf_t);
    pub fn __pthread_unwind_next(__buf: *mut __pthread_unwind_buf_t);
    pub fn __sigsetjmp(__env: *mut __jmp_buf_tag,
                       __savemask: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutex_init(__mutex: *mut pthread_mutex_t,
                              __mutexattr: *const pthread_mutexattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutex_destroy(__mutex: *mut pthread_mutex_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutex_trylock(__mutex: *mut pthread_mutex_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutex_lock(__mutex: *mut pthread_mutex_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutex_timedlock(__mutex: *mut pthread_mutex_t,
                                   __abstime: *const timespec)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutex_unlock(__mutex: *mut pthread_mutex_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutex_getprioceiling(__mutex: *const pthread_mutex_t,
                                        __prioceiling:
                                            *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutex_setprioceiling(__mutex: *mut pthread_mutex_t,
                                        __prioceiling: ::std::os::raw::c_int,
                                        __old_ceiling:
                                            *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutex_consistent(__mutex: *mut pthread_mutex_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_init(__attr: *mut pthread_mutexattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_destroy(__attr: *mut pthread_mutexattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_getpshared(__attr: *const pthread_mutexattr_t,
                                        __pshared: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_setpshared(__attr: *mut pthread_mutexattr_t,
                                        __pshared: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_gettype(__attr: *const pthread_mutexattr_t,
                                     __kind: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_settype(__attr: *mut pthread_mutexattr_t,
                                     __kind: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_getprotocol(__attr: *const pthread_mutexattr_t,
                                         __protocol:
                                             *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_setprotocol(__attr: *mut pthread_mutexattr_t,
                                         __protocol: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_getprioceiling(__attr:
                                                *const pthread_mutexattr_t,
                                            __prioceiling:
                                                *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_setprioceiling(__attr: *mut pthread_mutexattr_t,
                                            __prioceiling:
                                                ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_getrobust(__attr: *const pthread_mutexattr_t,
                                       __robustness:
                                           *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_mutexattr_setrobust(__attr: *mut pthread_mutexattr_t,
                                       __robustness: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlock_init(__rwlock: *mut pthread_rwlock_t,
                               __attr: *const pthread_rwlockattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlock_destroy(__rwlock: *mut pthread_rwlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlock_rdlock(__rwlock: *mut pthread_rwlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlock_tryrdlock(__rwlock: *mut pthread_rwlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlock_timedrdlock(__rwlock: *mut pthread_rwlock_t,
                                      __abstime: *const timespec)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlock_wrlock(__rwlock: *mut pthread_rwlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlock_trywrlock(__rwlock: *mut pthread_rwlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlock_timedwrlock(__rwlock: *mut pthread_rwlock_t,
                                      __abstime: *const timespec)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlock_unlock(__rwlock: *mut pthread_rwlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlockattr_init(__attr: *mut pthread_rwlockattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlockattr_destroy(__attr: *mut pthread_rwlockattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlockattr_getpshared(__attr: *const pthread_rwlockattr_t,
                                         __pshared:
                                             *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlockattr_setpshared(__attr: *mut pthread_rwlockattr_t,
                                         __pshared: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlockattr_getkind_np(__attr: *const pthread_rwlockattr_t,
                                         __pref: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_rwlockattr_setkind_np(__attr: *mut pthread_rwlockattr_t,
                                         __pref: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_cond_init(__cond: *mut pthread_cond_t,
                             __cond_attr: *const pthread_condattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_cond_destroy(__cond: *mut pthread_cond_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_cond_signal(__cond: *mut pthread_cond_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_cond_broadcast(__cond: *mut pthread_cond_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_cond_wait(__cond: *mut pthread_cond_t,
                             __mutex: *mut pthread_mutex_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_cond_timedwait(__cond: *mut pthread_cond_t,
                                  __mutex: *mut pthread_mutex_t,
                                  __abstime: *const timespec)
     -> ::std::os::raw::c_int;
    pub fn pthread_condattr_init(__attr: *mut pthread_condattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_condattr_destroy(__attr: *mut pthread_condattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_condattr_getpshared(__attr: *const pthread_condattr_t,
                                       __pshared: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_condattr_setpshared(__attr: *mut pthread_condattr_t,
                                       __pshared: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_condattr_getclock(__attr: *const pthread_condattr_t,
                                     __clock_id: *mut __clockid_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_condattr_setclock(__attr: *mut pthread_condattr_t,
                                     __clock_id: __clockid_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_spin_init(__lock: *mut pthread_spinlock_t,
                             __pshared: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_spin_destroy(__lock: *mut pthread_spinlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_spin_lock(__lock: *mut pthread_spinlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_spin_trylock(__lock: *mut pthread_spinlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_spin_unlock(__lock: *mut pthread_spinlock_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_barrier_init(__barrier: *mut pthread_barrier_t,
                                __attr: *const pthread_barrierattr_t,
                                __count: ::std::os::raw::c_uint)
     -> ::std::os::raw::c_int;
    pub fn pthread_barrier_destroy(__barrier: *mut pthread_barrier_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_barrier_wait(__barrier: *mut pthread_barrier_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_barrierattr_init(__attr: *mut pthread_barrierattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_barrierattr_destroy(__attr: *mut pthread_barrierattr_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_barrierattr_getpshared(__attr:
                                              *const pthread_barrierattr_t,
                                          __pshared:
                                              *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_barrierattr_setpshared(__attr: *mut pthread_barrierattr_t,
                                          __pshared: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn pthread_key_create(__key: *mut pthread_key_t,
                              __destr_function:
                                  ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                 *mut ::std::os::raw::c_void)>)
     -> ::std::os::raw::c_int;
    pub fn pthread_key_delete(__key: pthread_key_t) -> ::std::os::raw::c_int;
    pub fn pthread_getspecific(__key: pthread_key_t)
     -> *mut ::std::os::raw::c_void;
    pub fn pthread_setspecific(__key: pthread_key_t,
                               __pointer: *const ::std::os::raw::c_void)
     -> ::std::os::raw::c_int;
    pub fn pthread_getcpuclockid(__thread_id: pthread_t,
                                 __clock_id: *mut __clockid_t)
     -> ::std::os::raw::c_int;
    pub fn pthread_atfork(__prepare: ::std::option::Option<extern "C" fn()>,
                          __parent: ::std::option::Option<extern "C" fn()>,
                          __child: ::std::option::Option<extern "C" fn()>)
     -> ::std::os::raw::c_int;
    pub fn db_create(arg1: *mut *mut DB, arg2: *mut DB_ENV, arg3: u_int32_t)
     -> ::std::os::raw::c_int;
    pub fn db_strerror(arg1: ::std::os::raw::c_int)
     -> *mut ::std::os::raw::c_char;
    pub fn db_env_set_func_close(arg1:
                                     ::std::option::Option<extern "C" fn(arg1:
                                                                             ::std::os::raw::c_int)
                                                               ->
                                                                   ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_dirfree(arg1:
                                       ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                      *mut *mut ::std::os::raw::c_char,
                                                                                  arg2:
                                                                                      ::std::os::raw::c_int)>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_dirlist(arg1:
                                       ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                      *const ::std::os::raw::c_char,
                                                                                  arg2:
                                                                                      *mut *mut *mut ::std::os::raw::c_char,
                                                                                  arg3:
                                                                                      *mut ::std::os::raw::c_int)
                                                                 ->
                                                                     ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_exists(arg1:
                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                     *const ::std::os::raw::c_char,
                                                                                 arg2:
                                                                                     *mut ::std::os::raw::c_int)
                                                                ->
                                                                    ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_free(arg1:
                                    ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                   *mut ::std::os::raw::c_void)>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_fsync(arg1:
                                     ::std::option::Option<extern "C" fn(arg1:
                                                                             ::std::os::raw::c_int)
                                                               ->
                                                                   ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_ftruncate(arg1:
                                         ::std::option::Option<extern "C" fn(arg1:
                                                                                 ::std::os::raw::c_int,
                                                                             arg2:
                                                                                 off_t)
                                                                   ->
                                                                       ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_ioinfo(arg1:
                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                     *const ::std::os::raw::c_char,
                                                                                 arg2:
                                                                                     ::std::os::raw::c_int,
                                                                                 arg3:
                                                                                     *mut u_int32_t,
                                                                                 arg4:
                                                                                     *mut u_int32_t,
                                                                                 arg5:
                                                                                     *mut u_int32_t)
                                                                ->
                                                                    ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_malloc(arg1:
                                      ::std::option::Option<extern "C" fn(arg1:
                                                                              size_t)
                                                                ->
                                                                    *mut ::std::os::raw::c_void>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_file_map(arg1:
                                        ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                       *mut DB_ENV,
                                                                                   arg2:
                                                                                       *mut ::std::os::raw::c_char,
                                                                                   arg3:
                                                                                       size_t,
                                                                                   arg4:
                                                                                       ::std::os::raw::c_int,
                                                                                   arg5:
                                                                                       *mut *mut ::std::os::raw::c_void)
                                                                  ->
                                                                      ::std::os::raw::c_int>,
                                    arg2:
                                        ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                       *mut DB_ENV,
                                                                                   arg2:
                                                                                       *mut ::std::os::raw::c_void)
                                                                  ->
                                                                      ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_region_map(arg1:
                                          ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                         *mut DB_ENV,
                                                                                     arg2:
                                                                                         *mut ::std::os::raw::c_char,
                                                                                     arg3:
                                                                                         size_t,
                                                                                     arg4:
                                                                                         *mut ::std::os::raw::c_int,
                                                                                     arg5:
                                                                                         *mut *mut ::std::os::raw::c_void)
                                                                    ->
                                                                        ::std::os::raw::c_int>,
                                      arg2:
                                          ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                         *mut DB_ENV,
                                                                                     arg2:
                                                                                         *mut ::std::os::raw::c_void)
                                                                    ->
                                                                        ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_pread(arg1:
                                     ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                    ::std::os::raw::c_int,
                                                                                arg2:
                                                                                    *mut ::std::os::raw::c_void,
                                                                                arg3:
                                                                                    size_t,
                                                                                arg4:
                                                                                    off_t)
                                                               -> ssize_t>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_pwrite(arg1:
                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                     ::std::os::raw::c_int,
                                                                                 arg2:
                                                                                     *const ::std::os::raw::c_void,
                                                                                 arg3:
                                                                                     size_t,
                                                                                 arg4:
                                                                                     off_t)
                                                                -> ssize_t>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_open(arg1:
                                    ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                   *const ::std::os::raw::c_char,
                                                                               arg2:
                                                                                   ::std::os::raw::c_int, ...)
                                                              ->
                                                                  ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_read(arg1:
                                    ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                   ::std::os::raw::c_int,
                                                                               arg2:
                                                                                   *mut ::std::os::raw::c_void,
                                                                               arg3:
                                                                                   size_t)
                                                              -> ssize_t>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_realloc(arg1:
                                       ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                      *mut ::std::os::raw::c_void,
                                                                                  arg2:
                                                                                      size_t)
                                                                 ->
                                                                     *mut ::std::os::raw::c_void>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_rename(arg1:
                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                     *const ::std::os::raw::c_char,
                                                                                 arg2:
                                                                                     *const ::std::os::raw::c_char)
                                                                ->
                                                                    ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_seek(arg1:
                                    ::std::option::Option<extern "C" fn(arg1:
                                                                            ::std::os::raw::c_int,
                                                                        arg2:
                                                                            off_t,
                                                                        arg3:
                                                                            ::std::os::raw::c_int)
                                                              ->
                                                                  ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_unlink(arg1:
                                      ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                     *const ::std::os::raw::c_char)
                                                                ->
                                                                    ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_write(arg1:
                                     ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                    ::std::os::raw::c_int,
                                                                                arg2:
                                                                                    *const ::std::os::raw::c_void,
                                                                                arg3:
                                                                                    size_t)
                                                               -> ssize_t>)
     -> ::std::os::raw::c_int;
    pub fn db_env_set_func_yield(arg1:
                                     ::std::option::Option<extern "C" fn(arg1:
                                                                             u_long,
                                                                         arg2:
                                                                             u_long)
                                                               ->
                                                                   ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn db_env_create(arg1: *mut *mut DB_ENV, arg2: u_int32_t)
     -> ::std::os::raw::c_int;
    pub fn db_version(arg1: *mut ::std::os::raw::c_int,
                      arg2: *mut ::std::os::raw::c_int,
                      arg3: *mut ::std::os::raw::c_int)
     -> *mut ::std::os::raw::c_char;
    pub fn log_compare(arg1: *const DB_LSN, arg2: *const DB_LSN)
     -> ::std::os::raw::c_int;
    pub fn db_sequence_create(arg1: *mut *mut DB_SEQUENCE, arg2: *mut DB,
                              arg3: u_int32_t) -> ::std::os::raw::c_int;
}
